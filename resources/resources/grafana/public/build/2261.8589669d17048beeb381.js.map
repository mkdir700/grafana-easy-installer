{"version":3,"file":"2261.8589669d17048beeb381.js","mappings":"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","sources":["webpack://grafana/./node_modules/@grafana/experimental/dist/esm/ConfigEditor/AdvancedSettings/AdvancedHttpSettings.js","webpack://grafana/./node_modules/@grafana/experimental/dist/esm/ConfigEditor/ConfigSection/ConfigDescriptionLink.js","webpack://grafana/./public/app/plugins/datasource/elasticsearch/hooks/useStatelessReducer.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/SettingsEditor/BucketScriptSettingsEditor/utils.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/aggregations.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/utils.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/queryDef.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/utils.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/state/actions.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/state.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/SettingsEditor/FiltersSettingsEditor/utils.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/utils.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/state/actions.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/state/reducer.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/state/reducer.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/ElasticsearchQueryContext.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/hooks/useNextId.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/QueryEditorRow.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/aggregations.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/hooks/useFields.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/styles.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/SettingsEditorContainer.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/QueryBuilder.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/hooks/useCreatableSelectPersistedBehaviour.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/SettingsEditor/DateHistogramSettingsEditor.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/AddRemove.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/SettingsEditor/FiltersSettingsEditor/state/actions.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/SettingsEditor/FiltersSettingsEditor/state/reducer.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/SettingsEditor/FiltersSettingsEditor/index.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/SettingsEditor/TermsSettingsEditor.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/SettingsEditor/useDescription.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/SettingsEditor/index.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/BucketAggregationEditor.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/BucketAggregationsEditor/index.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/MetricPicker.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/SettingsEditor/SettingField.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/SettingsEditor/BucketScriptSettingsEditor/state/actions.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/SettingsEditor/BucketScriptSettingsEditor/state/reducer.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/SettingsEditor/BucketScriptSettingsEditor/index.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/SettingsEditor/MovingAverageSettingsEditor.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/SettingsEditor/TopMetricsSettingsEditor.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/SettingsEditor/useDescription.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/SettingsEditor/index.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/QueryEditorSpecialMetricRow.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/styles.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/MetricEditor.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/MetricAggregationsEditor/index.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/QueryTypeSelector.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/index.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/configuration/DataLink.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/configuration/DataLinks.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/configuration/ElasticDetails.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/configuration/LogsConfig.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/configuration/utils.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/configuration/ConfigEditor.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/IndexPattern.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/LanguageProvider.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/ElasticResponse.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/tracking.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/LegacyQueryRunner.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/components/QueryEditor/AnnotationQueryEditor.tsx","webpack://grafana/./public/app/plugins/datasource/elasticsearch/guards.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/modifyQuery.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/datasource.ts","webpack://grafana/./public/app/plugins/datasource/elasticsearch/module.ts","webpack://grafana/./node_modules/lucene/lib/escaping.js","webpack://grafana/./node_modules/lucene/lib/lucene.js","webpack://grafana/./node_modules/lucene/lib/queryParser.js","webpack://grafana/./node_modules/lucene/lib/toString.js"],"sourcesContent":["import React__default from 'react';\nimport { css, cx } from '@emotion/css';\nimport { InlineField, TagsInput, Input } from '@grafana/ui';\nimport { ConfigSubSection } from '../ConfigSection/ConfigSubSection.js';\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nconst AdvancedHttpSettings = ({\n  config,\n  onChange,\n  className\n}) => {\n  const onCookiesChange = (cookies) => {\n    onChange(__spreadProps(__spreadValues({}, config), {\n      jsonData: __spreadProps(__spreadValues({}, config.jsonData), {\n        keepCookies: cookies\n      })\n    }));\n  };\n  const onTimeoutChange = (event) => {\n    onChange(__spreadProps(__spreadValues({}, config), {\n      jsonData: __spreadProps(__spreadValues({}, config.jsonData), {\n        timeout: parseInt(event.currentTarget.value, 10)\n      })\n    }));\n  };\n  const styles = {\n    container: css({\n      maxWidth: 578\n    })\n  };\n  return /* @__PURE__ */ React__default.createElement(ConfigSubSection, { title: \"Advanced HTTP settings\", className: cx(styles.container, className) }, /* @__PURE__ */ React__default.createElement(\n    InlineField,\n    {\n      htmlFor: \"advanced-http-cookies\",\n      label: \"Allowed cookies\",\n      labelWidth: 24,\n      tooltip: \"Grafana proxy deletes forwarded cookies by default. Specify cookies by name that should be forwarded to the data source.\",\n      disabled: config.readOnly,\n      grow: true\n    },\n    /* @__PURE__ */ React__default.createElement(\n      TagsInput,\n      {\n        id: \"advanced-http-cookies\",\n        placeholder: \"New cookie (hit enter to add)\",\n        tags: config.jsonData.keepCookies,\n        onChange: onCookiesChange\n      }\n    )\n  ), /* @__PURE__ */ React__default.createElement(\n    InlineField,\n    {\n      htmlFor: \"advanced-http-timeout\",\n      label: \"Timeout\",\n      labelWidth: 24,\n      tooltip: \"HTTP request timeout in seconds\",\n      disabled: config.readOnly,\n      grow: true\n    },\n    /* @__PURE__ */ React__default.createElement(\n      Input,\n      {\n        id: \"advanced-http-timeout\",\n        type: \"number\",\n        min: 0,\n        placeholder: \"Timeout in seconds\",\n        \"aria-label\": \"Timeout in seconds\",\n        value: config.jsonData.timeout,\n        onChange: onTimeoutChange\n      }\n    )\n  ));\n};\n\nexport { AdvancedHttpSettings };\n//# sourceMappingURL=AdvancedHttpSettings.js.map\n","import { css } from '@emotion/css';\nimport React__default from 'react';\nimport { useStyles2 } from '@grafana/ui';\n\nfunction ConfigDescriptionLink(props) {\n  const { description, suffix, feature } = props;\n  const text = `Learn more about ${feature}`;\n  const styles = useStyles2(getStyles);\n  return /* @__PURE__ */ React__default.createElement(\"span\", { className: styles.container }, description, /* @__PURE__ */ React__default.createElement(\n    \"a\",\n    {\n      \"aria-label\": text,\n      href: `https://grafana.com/docs/grafana/next/datasources/${suffix}`,\n      rel: \"noreferrer\",\n      target: \"_blank\"\n    },\n    text\n  ));\n}\nconst getStyles = (theme) => {\n  return {\n    container: css({\n      color: theme.colors.text.secondary,\n      a: css({\n        color: theme.colors.text.link,\n        textDecoration: \"underline\",\n        marginLeft: \"5px\",\n        \"&:hover\": {\n          textDecoration: \"none\"\n        }\n      })\n    })\n  };\n};\n\nexport { ConfigDescriptionLink };\n//# sourceMappingURL=ConfigDescriptionLink.js.map\n","import { Action } from '@reduxjs/toolkit';\nimport { createContext, useCallback, useContext } from 'react';\n\nexport type Reducer<S, A extends Action> = (state: S, action: A) => S;\n\nexport const combineReducers =\n  <S, A extends Action = Action>(reducers: { [P in keyof S]: Reducer<S[P], A> }) =>\n  (state: S, action: A): Partial<S> => {\n    const newState = {} as S;\n    for (const key in reducers) {\n      newState[key] = reducers[key](state[key], action);\n    }\n    return newState;\n  };\n\nexport const useStatelessReducer = <State, A = Action>(\n  onChange: (value: State) => void,\n  state: State,\n  reducer: (state: State, action: A) => State\n) => {\n  const dispatch = useCallback(\n    (action: A) => {\n      onChange(reducer(state, action));\n    },\n    [onChange, state, reducer]\n  );\n\n  return dispatch;\n};\n\nexport const DispatchContext = createContext<((action: Action) => void) | undefined>(undefined);\n\nexport const useDispatch = <T extends Action = Action>(): ((action: T) => void) => {\n  const dispatch = useContext(DispatchContext);\n\n  if (!dispatch) {\n    throw new Error('Use DispatchContext first.');\n  }\n\n  return dispatch;\n};\n","import { PipelineVariable } from '../../../../../types';\n\nexport const defaultPipelineVariable = (name: string): PipelineVariable => ({ name, pipelineAgg: '' });\n\n/**\n * Given an array of pipeline variables generates a new unique pipeline variable name in the form of `var{n}`.\n * The value for `n` is calculated based on the variables names in pipelineVars matching `var{n}`.\n */\nexport const generatePipelineVariableName = (pipelineVars: PipelineVariable[]): string =>\n  `var${Math.max(0, ...pipelineVars.map((v) => parseInt(v.name.match('^var(\\\\d+)$')?.[1] || '0', 10))) + 1}`;\n","import {\n  PipelineMetricAggregationWithMultipleBucketPaths,\n  MetricAggregationWithMeta,\n  MovingAverage,\n  MetricAggregationType,\n  BaseMetricAggregation,\n  MetricAggregationWithField,\n  MetricAggregationWithMissingSupport,\n  MetricAggregationWithInlineScript,\n  PipelineMetricAggregation,\n  MetricAggregationWithSettings,\n} from '../../../types';\n\nimport { metricAggregationConfig } from './utils';\n\nexport const isEWMAMovingAverage = (metric: MovingAverage | MovingAverage<'ewma'>): metric is MovingAverage<'ewma'> =>\n  metric.settings?.model === 'ewma';\n\nexport const isHoltMovingAverage = (metric: MovingAverage | MovingAverage<'holt'>): metric is MovingAverage<'holt'> =>\n  metric.settings?.model === 'holt';\n\nexport const isHoltWintersMovingAverage = (\n  metric: MovingAverage | MovingAverage<'holt_winters'>\n): metric is MovingAverage<'holt_winters'> => metric.settings?.model === 'holt_winters';\n\nexport const isMovingAverageWithModelSettings = (\n  metric: MovingAverage\n): metric is MovingAverage<'ewma'> | MovingAverage<'holt'> | MovingAverage<'holt_winters'> =>\n  ['holt', 'ewma', 'holt_winters'].includes(metric.settings?.model || '');\n\n// Guards\n// Given the structure of the aggregations (ie. `settings` field being always optional) we cannot\n// determine types based solely on objects' properties, therefore we use `metricAggregationConfig` as the\n// source of truth.\n\n/**\n * Checks if `metric` requires a field (either referring to a document or another aggregation)\n * @param metric\n */\nexport const isMetricAggregationWithField = (\n  metric: BaseMetricAggregation | MetricAggregationWithField\n): metric is MetricAggregationWithField => metricAggregationConfig[metric.type].requiresField;\n\nexport const isPipelineAggregation = (\n  metric: BaseMetricAggregation | PipelineMetricAggregation\n): metric is PipelineMetricAggregation => metricAggregationConfig[metric.type].isPipelineAgg;\n\nexport const isPipelineAggregationWithMultipleBucketPaths = (\n  metric: BaseMetricAggregation | PipelineMetricAggregationWithMultipleBucketPaths\n): metric is PipelineMetricAggregationWithMultipleBucketPaths =>\n  metricAggregationConfig[metric.type].supportsMultipleBucketPaths;\n\nexport const isMetricAggregationWithMissingSupport = (\n  metric: BaseMetricAggregation | MetricAggregationWithMissingSupport\n): metric is MetricAggregationWithMissingSupport => metricAggregationConfig[metric.type].supportsMissing;\n\nexport const isMetricAggregationWithSettings = (\n  metric: BaseMetricAggregation | MetricAggregationWithSettings\n): metric is MetricAggregationWithSettings => metricAggregationConfig[metric.type].hasSettings;\n\nexport const isMetricAggregationWithMeta = (\n  metric: BaseMetricAggregation | MetricAggregationWithMeta\n): metric is MetricAggregationWithMeta => metricAggregationConfig[metric.type].hasMeta;\n\nexport const isMetricAggregationWithInlineScript = (\n  metric: BaseMetricAggregation | MetricAggregationWithInlineScript\n): metric is MetricAggregationWithInlineScript => metricAggregationConfig[metric.type].supportsInlineScript;\n\nexport const METRIC_AGGREGATION_TYPES: MetricAggregationType[] = [\n  'count',\n  'avg',\n  'sum',\n  'min',\n  'max',\n  'extended_stats',\n  'percentiles',\n  'cardinality',\n  'raw_document',\n  'raw_data',\n  'logs',\n  'moving_avg',\n  'moving_fn',\n  'derivative',\n  'serial_diff',\n  'cumulative_sum',\n  'bucket_script',\n  'rate',\n  'top_metrics',\n];\n\nexport const isMetricAggregationType = (s: MetricAggregationType | string): s is MetricAggregationType =>\n  METRIC_AGGREGATION_TYPES.includes(s as MetricAggregationType);\n","import { MetricsConfiguration, MetricAggregation, PipelineMetricAggregationType } from '../../../types';\n\nimport {\n  defaultPipelineVariable,\n  generatePipelineVariableName,\n} from './SettingsEditor/BucketScriptSettingsEditor/utils';\nimport { isMetricAggregationWithField, isPipelineAggregationWithMultipleBucketPaths } from './aggregations';\n\nexport const metricAggregationConfig: MetricsConfiguration = {\n  count: {\n    label: 'Count',\n    impliedQueryType: 'metrics',\n    requiresField: false,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: false,\n    hasMeta: false,\n    supportsInlineScript: false,\n    defaults: {},\n  },\n  avg: {\n    label: 'Average',\n    impliedQueryType: 'metrics',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: false,\n    defaults: {},\n  },\n  sum: {\n    label: 'Sum',\n    impliedQueryType: 'metrics',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: false,\n    defaults: {},\n  },\n  max: {\n    label: 'Max',\n    impliedQueryType: 'metrics',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: false,\n    defaults: {},\n  },\n  min: {\n    label: 'Min',\n    impliedQueryType: 'metrics',\n    requiresField: true,\n    supportsInlineScript: true,\n    supportsMissing: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: false,\n    defaults: {},\n  },\n  extended_stats: {\n    label: 'Extended Stats',\n    impliedQueryType: 'metrics',\n    requiresField: true,\n    supportsMissing: true,\n    supportsInlineScript: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: true,\n    defaults: {\n      meta: {\n        std_deviation_bounds_lower: true,\n        std_deviation_bounds_upper: true,\n      },\n    },\n  },\n  percentiles: {\n    label: 'Percentiles',\n    impliedQueryType: 'metrics',\n    requiresField: true,\n    supportsMissing: true,\n    supportsInlineScript: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        percents: ['25', '50', '75', '95', '99'],\n      },\n    },\n  },\n  cardinality: {\n    label: 'Unique Count',\n    impliedQueryType: 'metrics',\n    requiresField: true,\n    supportsMissing: true,\n    isPipelineAgg: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {},\n  },\n  moving_avg: {\n    // deprecated in 6.4.0, removed in 8.0.0,\n    // recommended replacement is moving_fn\n    label: 'Moving Average',\n    impliedQueryType: 'metrics',\n    requiresField: true,\n    isPipelineAgg: true,\n    versionRange: '<8.0.0',\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        model: 'simple',\n        window: '5',\n      },\n    },\n  },\n  moving_fn: {\n    // TODO: Check this\n    label: 'Moving Function',\n    impliedQueryType: 'metrics',\n    requiresField: true,\n    isPipelineAgg: true,\n    supportsMultipleBucketPaths: false,\n    supportsInlineScript: false,\n    supportsMissing: false,\n    hasMeta: false,\n    hasSettings: true,\n    defaults: {},\n  },\n  derivative: {\n    label: 'Derivative',\n    impliedQueryType: 'metrics',\n    requiresField: true,\n    isPipelineAgg: true,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {},\n  },\n  serial_diff: {\n    label: 'Serial Difference',\n    impliedQueryType: 'metrics',\n    requiresField: true,\n    isPipelineAgg: true,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        lag: '1',\n      },\n    },\n  },\n  cumulative_sum: {\n    label: 'Cumulative Sum',\n    impliedQueryType: 'metrics',\n    requiresField: true,\n    isPipelineAgg: true,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {},\n  },\n  bucket_script: {\n    label: 'Bucket Script',\n    impliedQueryType: 'metrics',\n    requiresField: false,\n    isPipelineAgg: true,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: true,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      pipelineVariables: [defaultPipelineVariable(generatePipelineVariableName([]))],\n    },\n  },\n  raw_document: {\n    label: 'Raw Document (deprecated)',\n    requiresField: false,\n    impliedQueryType: 'raw_document',\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        size: '500',\n      },\n    },\n  },\n  raw_data: {\n    label: 'Raw Data',\n    requiresField: false,\n    impliedQueryType: 'raw_data',\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        size: '500',\n      },\n    },\n  },\n  logs: {\n    label: 'Logs',\n    requiresField: false,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    impliedQueryType: 'logs',\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        limit: '500',\n      },\n    },\n  },\n  top_metrics: {\n    label: 'Top Metrics',\n    impliedQueryType: 'metrics',\n    requiresField: false,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: false,\n    hasMeta: false,\n    defaults: {\n      settings: {\n        order: 'desc',\n      },\n    },\n  },\n  rate: {\n    label: 'Rate',\n    impliedQueryType: 'metrics',\n    requiresField: true,\n    isPipelineAgg: false,\n    supportsMissing: false,\n    supportsMultipleBucketPaths: false,\n    hasSettings: true,\n    supportsInlineScript: true,\n    hasMeta: false,\n    defaults: {},\n  },\n};\n\ninterface PipelineOption {\n  label: string;\n  default?: string | number | boolean;\n}\n\ntype PipelineOptions = {\n  [K in PipelineMetricAggregationType]: PipelineOption[];\n};\n\nexport const pipelineOptions: PipelineOptions = {\n  moving_avg: [\n    { label: 'window', default: 5 },\n    { label: 'model', default: 'simple' },\n    { label: 'predict' },\n    { label: 'minimize', default: false },\n  ],\n  moving_fn: [{ label: 'window', default: 5 }, { label: 'script' }],\n  derivative: [{ label: 'unit' }],\n  serial_diff: [{ label: 'lag' }],\n  cumulative_sum: [{ label: 'format' }],\n  bucket_script: [],\n};\n\n/**\n * Given a metric `MetricA` and an array of metrics, returns all children of `MetricA`.\n * `MetricB` is considered a child of `MetricA` if `MetricA` is referenced by `MetricB` in its `field` attribute\n * (`MetricA.id === MetricB.field`) or in its pipeline aggregation variables (for bucket_scripts).\n * @param metric\n * @param metrics\n */\nexport const getChildren = (metric: MetricAggregation, metrics: MetricAggregation[]): MetricAggregation[] => {\n  const children = metrics.filter((m) => {\n    // TODO: Check this.\n    if (isPipelineAggregationWithMultipleBucketPaths(m)) {\n      return m.pipelineVariables?.some((pv) => pv.pipelineAgg === metric.id);\n    }\n\n    return isMetricAggregationWithField(m) && metric.id === m.field;\n  });\n\n  return [...children, ...children.flatMap((child) => getChildren(child, metrics))];\n};\n","import { metricAggregationConfig, pipelineOptions } from './components/QueryEditor/MetricAggregationsEditor/utils';\nimport {\n  ElasticsearchQuery,\n  ExtendedStat,\n  MetricAggregation,\n  MovingAverageModelOption,\n  MetricAggregationType,\n  DateHistogram,\n} from './types';\n\nexport const extendedStats: ExtendedStat[] = [\n  { label: 'Avg', value: 'avg' },\n  { label: 'Min', value: 'min' },\n  { label: 'Max', value: 'max' },\n  { label: 'Sum', value: 'sum' },\n  { label: 'Count', value: 'count' },\n  { label: 'Std Dev', value: 'std_deviation' },\n  { label: 'Std Dev Upper', value: 'std_deviation_bounds_upper' },\n  { label: 'Std Dev Lower', value: 'std_deviation_bounds_lower' },\n];\n\nexport const movingAvgModelOptions: MovingAverageModelOption[] = [\n  { label: 'Simple', value: 'simple' },\n  { label: 'Linear', value: 'linear' },\n  { label: 'Exponentially Weighted', value: 'ewma' },\n  { label: 'Holt Linear', value: 'holt' },\n  { label: 'Holt Winters', value: 'holt_winters' },\n];\n\nexport const highlightTags = {\n  pre: '@HIGHLIGHT@',\n  post: '@/HIGHLIGHT@',\n};\n\nexport const defaultGeoHashPrecisionString = '3';\n\nexport function defaultMetricAgg(id = '1'): MetricAggregation {\n  return { type: 'count', id };\n}\n\nexport function defaultBucketAgg(id = '1'): DateHistogram {\n  return { type: 'date_histogram', id, settings: { interval: 'auto' } };\n}\n\nexport const findMetricById = (metrics: MetricAggregation[], id: MetricAggregation['id']) =>\n  metrics.find((metric) => metric.id === id);\n\nexport function hasMetricOfType(target: ElasticsearchQuery, type: MetricAggregationType): boolean {\n  return !!target?.metrics?.some((m) => m.type === type);\n}\n\n// Even if we have type guards when building a query, we currently have no way of getting this information from the response.\n// We should try to find a better (type safe) way of doing the following 2.\nexport function isPipelineAgg(metricType: MetricAggregationType) {\n  return metricType in pipelineOptions;\n}\n\nexport function isPipelineAggWithMultipleBucketPaths(metricType: MetricAggregationType) {\n  return !!metricAggregationConfig[metricType].supportsMultipleBucketPaths;\n}\n","import { gte, SemVer } from 'semver';\n\nimport { isMetricAggregationWithField } from './components/QueryEditor/MetricAggregationsEditor/aggregations';\nimport { metricAggregationConfig } from './components/QueryEditor/MetricAggregationsEditor/utils';\nimport { ElasticsearchQuery, MetricAggregation, MetricAggregationWithInlineScript } from './types';\n\nexport const describeMetric = (metric: MetricAggregation) => {\n  if (!isMetricAggregationWithField(metric)) {\n    return metricAggregationConfig[metric.type].label;\n  }\n\n  // TODO: field might be undefined\n  return `${metricAggregationConfig[metric.type].label} ${metric.field}`;\n};\n\n/**\n * Utility function to clean up aggregations settings objects.\n * It removes nullish values and empty strings, array and objects\n * recursing over nested objects (not arrays).\n * @param obj\n */\nexport const removeEmpty = <T extends {}>(obj: T): Partial<T> =>\n  Object.entries(obj).reduce((acc, [key, value]) => {\n    // Removing nullish values (null & undefined)\n    if (value == null) {\n      return { ...acc };\n    }\n\n    // Removing empty arrays (This won't recurse the array)\n    if (Array.isArray(value) && value.length === 0) {\n      return { ...acc };\n    }\n\n    // Removing empty strings\n    if (typeof value === 'string' && value.length === 0) {\n      return { ...acc };\n    }\n\n    // Recursing over nested objects\n    if (!Array.isArray(value) && typeof value === 'object') {\n      const cleanObj = removeEmpty(value);\n\n      if (Object.keys(cleanObj).length === 0) {\n        return { ...acc };\n      }\n\n      return { ...acc, [key]: cleanObj };\n    }\n\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n\n/**\n *  This function converts an order by string to the correct metric id For example,\n *  if the user uses the standard deviation extended stat for the order by,\n *  the value would be \"1[std_deviation]\" and this would return \"1\"\n */\nexport const convertOrderByToMetricId = (orderBy: string): string | undefined => {\n  const metricIdMatches = orderBy.match(/^(\\d+)/);\n  return metricIdMatches ? metricIdMatches[1] : void 0;\n};\n\n/** Gets the actual script value for metrics that support inline scripts.\n *\n *  This is needed because the `script` is a bit polymorphic.\n *  when creating a query with Grafana < 7.4 it was stored as:\n * ```json\n * {\n *    \"settings\": {\n *      \"script\": {\n *        \"inline\": \"value\"\n *      }\n *    }\n * }\n * ```\n *\n * while from 7.4 it's stored as\n * ```json\n * {\n *    \"settings\": {\n *      \"script\": \"value\"\n *    }\n * }\n * ```\n *\n * This allows us to access both formats and support both queries created before 7.4 and after.\n */\nexport const getScriptValue = (metric: MetricAggregationWithInlineScript) =>\n  (typeof metric.settings?.script === 'object' ? metric.settings?.script?.inline : metric.settings?.script) || '';\n\nexport const isSupportedVersion = (version: SemVer): boolean => {\n  if (gte(version, '7.16.0')) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const unsupportedVersionMessage =\n  'Support for Elasticsearch versions after their end-of-life (currently versions < 7.16) was removed. Using unsupported version of Elasticsearch may lead to unexpected and incorrect results.';\n\n// To be considered a time series query, the last bucked aggregation must be a Date Histogram\nexport const isTimeSeriesQuery = (query: ElasticsearchQuery): boolean => {\n  return query?.bucketAggs?.slice(-1)[0]?.type === 'date_histogram';\n};\n\n/*\n * This regex matches 3 types of variable reference with an optional format specifier\n * There are 6 capture groups that replace will return\n * \\$(\\w+)                                    $var1\n * \\[\\[(\\w+?)(?::(\\w+))?\\]\\]                  [[var2]] or [[var2:fmt2]]\n * \\${(\\w+)(?:\\.([^:^\\}]+))?(?::([^\\}]+))?}   ${var3} or ${var3.fieldPath} or ${var3:fmt3} (or ${var3.fieldPath:fmt3} but that is not a separate capture group)\n */\nexport const variableRegex = /\\$(\\w+)|\\[\\[(\\w+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::([^\\}]+))?}/g;\n\n// Copyright (c) 2014, Hugh Kennedy\n// Based on code from https://github.com/hughsk/flat/blob/master/index.js\n//\nexport function flattenObject(\n  target: Record<string, unknown>,\n  opts?: { delimiter?: string; maxDepth?: number; safe?: boolean }\n): Record<string, unknown> {\n  opts = opts || {};\n\n  const delimiter = opts.delimiter || '.';\n  let maxDepth = opts.maxDepth || 3;\n  let currentDepth = 1;\n  const output: Record<string, unknown> = {};\n\n  function step(object: Record<string, unknown>, prev: string | null) {\n    Object.keys(object).forEach((key) => {\n      const value = object[key];\n      const isarray = opts?.safe && Array.isArray(value);\n      const type = Object.prototype.toString.call(value);\n      const isobject = type === '[object Object]';\n\n      const newKey = prev ? prev + delimiter + key : key;\n\n      if (!opts?.maxDepth) {\n        maxDepth = currentDepth + 1;\n      }\n\n      if (!isarray && isobject && value && Object.keys(value).length && currentDepth < maxDepth) {\n        ++currentDepth;\n        return step({ ...value }, newKey);\n      }\n\n      output[newKey] = value;\n    });\n  }\n\n  step(target, null);\n\n  return output;\n}\n","import { createAction } from '@reduxjs/toolkit';\n\nimport { MetricAggregationWithMeta, MetricAggregation, MetricAggregationWithSettings } from '../../../../types';\n\nexport const addMetric = createAction<MetricAggregation['id']>('@metrics/add');\nexport const removeMetric = createAction<MetricAggregation['id']>('@metrics/remove');\nexport const toggleMetricVisibility = createAction<MetricAggregation['id']>('@metrics/toggle_visibility');\nexport const changeMetricField = createAction<{ id: MetricAggregation['id']; field: string }>('@metrics/change_field');\nexport const changeMetricType = createAction<{ id: MetricAggregation['id']; type: MetricAggregation['type'] }>(\n  '@metrics/change_type'\n);\nexport const changeMetricAttribute = createAction<{ metric: MetricAggregation; attribute: string; newValue: unknown }>(\n  '@metrics/change_attr'\n);\nexport const changeMetricSetting = createAction<{\n  metric: MetricAggregationWithSettings;\n  settingName: string;\n  newValue: unknown;\n}>('@metrics/change_setting');\nexport const changeMetricMeta = createAction<{\n  metric: MetricAggregationWithMeta;\n  meta: string;\n  newValue: unknown;\n}>('@metrics/change_meta');\n","import { Action, createAction } from '@reduxjs/toolkit';\n\nimport { ElasticsearchQuery } from '../../types';\n\n/**\n * When the `initQuery` Action is dispatched, the query gets populated with default values where values are not present.\n * This means it won't override any existing value in place, but just ensure the query is in a \"runnable\" state.\n */\nexport const initQuery = createAction('init');\n\nexport const changeQuery = createAction<ElasticsearchQuery['query']>('change_query');\n\nexport const changeAliasPattern = createAction<ElasticsearchQuery['alias']>('change_alias_pattern');\n\nexport const queryReducer = (prevQuery: ElasticsearchQuery['query'], action: Action) => {\n  if (changeQuery.match(action)) {\n    return action.payload;\n  }\n\n  if (initQuery.match(action)) {\n    return prevQuery || '';\n  }\n\n  return prevQuery;\n};\n\nexport const aliasPatternReducer = (prevAliasPattern: ElasticsearchQuery['alias'], action: Action) => {\n  if (changeAliasPattern.match(action)) {\n    return action.payload;\n  }\n\n  if (initQuery.match(action)) {\n    return prevAliasPattern || '';\n  }\n\n  return prevAliasPattern;\n};\n","import { Filter } from '../../../../../types';\n\nexport const defaultFilter = (): Filter => ({ label: '', query: '*' });\n","import { InternalTimeZones, SelectableValue } from '@grafana/data';\n\nimport { defaultGeoHashPrecisionString } from '../../../queryDef';\nimport { BucketsConfiguration } from '../../../types';\n\nimport { defaultFilter } from './SettingsEditor/FiltersSettingsEditor/utils';\n\nexport const bucketAggregationConfig: BucketsConfiguration = {\n  terms: {\n    label: 'Terms',\n    requiresField: true,\n    defaultSettings: {\n      min_doc_count: '1',\n      size: '10',\n      order: 'desc',\n      orderBy: '_term',\n    },\n  },\n  filters: {\n    label: 'Filters',\n    requiresField: false,\n    defaultSettings: {\n      filters: [defaultFilter()],\n    },\n  },\n  geohash_grid: {\n    label: 'Geo Hash Grid',\n    requiresField: true,\n    defaultSettings: {\n      precision: defaultGeoHashPrecisionString,\n    },\n  },\n  date_histogram: {\n    label: 'Date Histogram',\n    requiresField: true,\n    defaultSettings: {\n      interval: 'auto',\n      min_doc_count: '0',\n      trimEdges: '0',\n      timeZone: InternalTimeZones.utc,\n    },\n  },\n  histogram: {\n    label: 'Histogram',\n    requiresField: true,\n    defaultSettings: {\n      interval: '1000',\n      min_doc_count: '0',\n    },\n  },\n  nested: {\n    label: 'Nested (experimental)',\n    requiresField: true,\n    defaultSettings: {},\n  },\n};\n\nexport const orderByOptions: Array<SelectableValue<string>> = [\n  { label: 'Term value', value: '_term' },\n  { label: 'Doc Count', value: '_count' },\n];\n\nexport const orderOptions: Array<SelectableValue<string>> = [\n  { label: 'Top', value: 'desc' },\n  { label: 'Bottom', value: 'asc' },\n];\n\nexport const sizeOptions = [\n  { label: 'No limit', value: '0' },\n  { label: '1', value: '1' },\n  { label: '2', value: '2' },\n  { label: '3', value: '3' },\n  { label: '5', value: '5' },\n  { label: '10', value: '10' },\n  { label: '15', value: '15' },\n  { label: '20', value: '20' },\n];\n","import { createAction } from '@reduxjs/toolkit';\n\nimport { BucketAggregation, BucketAggregationType, BucketAggregationWithField } from '../../../../types';\n\nexport const addBucketAggregation = createAction<BucketAggregation['id']>('@bucketAggs/add');\nexport const removeBucketAggregation = createAction<BucketAggregation['id']>('@bucketAggs/remove');\nexport const changeBucketAggregationType = createAction<{\n  id: BucketAggregation['id'];\n  newType: BucketAggregationType;\n}>('@bucketAggs/change_type');\nexport const changeBucketAggregationField = createAction<{\n  id: BucketAggregation['id'];\n  newField: BucketAggregationWithField['field'];\n}>('@bucketAggs/change_field');\nexport const changeBucketAggregationSetting = createAction<{\n  bucketAgg: BucketAggregation;\n  settingName: string;\n  newValue: unknown;\n}>('@bucketAggs/change_setting');\n","import { Action } from '@reduxjs/toolkit';\n\nimport { defaultBucketAgg } from '../../../../queryDef';\nimport { ElasticsearchQuery, Terms, BucketAggregation } from '../../../../types';\nimport { removeEmpty } from '../../../../utils';\nimport { changeMetricType } from '../../MetricAggregationsEditor/state/actions';\nimport { metricAggregationConfig } from '../../MetricAggregationsEditor/utils';\nimport { initQuery } from '../../state';\nimport { bucketAggregationConfig } from '../utils';\n\nimport {\n  addBucketAggregation,\n  changeBucketAggregationField,\n  changeBucketAggregationSetting,\n  changeBucketAggregationType,\n  removeBucketAggregation,\n} from './actions';\n\nexport const createReducer =\n  (defaultTimeField: string) =>\n  (state: ElasticsearchQuery['bucketAggs'], action: Action): ElasticsearchQuery['bucketAggs'] => {\n    if (addBucketAggregation.match(action)) {\n      const newAgg: Terms = {\n        id: action.payload,\n        type: 'terms',\n        settings: bucketAggregationConfig['terms'].defaultSettings,\n      };\n\n      // If the last bucket aggregation is a `date_histogram` we add the new one before it.\n      const lastAgg = state![state!.length - 1];\n      if (lastAgg?.type === 'date_histogram') {\n        return [...state!.slice(0, state!.length - 1), newAgg, lastAgg];\n      }\n\n      return [...state!, newAgg];\n    }\n\n    if (removeBucketAggregation.match(action)) {\n      return state!.filter((bucketAgg) => bucketAgg.id !== action.payload);\n    }\n\n    if (changeBucketAggregationType.match(action)) {\n      return state!.map((bucketAgg) => {\n        if (bucketAgg.id !== action.payload.id) {\n          return bucketAgg;\n        }\n\n        /*\n        TODO: The previous version of the query editor was keeping some of the old bucket aggregation's configurations\n        in the new selected one (such as field or some settings).\n        It the future would be nice to have the same behavior but it's hard without a proper definition,\n        as Elasticsearch will error sometimes if some settings are not compatible.\n      */\n        return {\n          id: bucketAgg.id,\n          type: action.payload.newType,\n          settings: bucketAggregationConfig[action.payload.newType].defaultSettings,\n        } as BucketAggregation;\n      });\n    }\n\n    if (changeBucketAggregationField.match(action)) {\n      return state!.map((bucketAgg) => {\n        if (bucketAgg.id !== action.payload.id) {\n          return bucketAgg;\n        }\n\n        return {\n          ...bucketAgg,\n          field: action.payload.newField,\n        };\n      });\n    }\n\n    if (changeMetricType.match(action)) {\n      // If we are switching to a metric which requires the absence of bucket aggregations\n      // we remove all of them.\n      if (metricAggregationConfig[action.payload.type].impliedQueryType !== 'metrics') {\n        return [];\n      } else if (state!.length === 0) {\n        // Else, if there are no bucket aggregations we restore a default one.\n        // This happens when switching from a metric that requires the absence of bucket aggregations to\n        // one that requires it.\n        return [{ ...defaultBucketAgg('2'), field: defaultTimeField }];\n      }\n      return state;\n    }\n\n    if (changeBucketAggregationSetting.match(action)) {\n      return state!.map((bucketAgg) => {\n        if (bucketAgg.id !== action.payload.bucketAgg.id) {\n          return bucketAgg;\n        }\n\n        const newSettings = removeEmpty({\n          ...bucketAgg.settings,\n          [action.payload.settingName]: action.payload.newValue,\n        });\n\n        return {\n          ...bucketAgg,\n          settings: {\n            ...newSettings,\n          },\n        };\n      });\n    }\n\n    if (initQuery.match(action)) {\n      if (state && state.length > 0) {\n        return state;\n      }\n      return [{ ...defaultBucketAgg('2'), field: defaultTimeField }];\n    }\n\n    return state;\n  };\n","import { Action } from '@reduxjs/toolkit';\n\nimport { defaultMetricAgg } from '../../../../queryDef';\nimport { ElasticsearchQuery, MetricAggregation } from '../../../../types';\nimport { removeEmpty } from '../../../../utils';\nimport { initQuery } from '../../state';\nimport { isMetricAggregationWithMeta, isMetricAggregationWithSettings, isPipelineAggregation } from '../aggregations';\nimport { getChildren, metricAggregationConfig } from '../utils';\n\nimport {\n  addMetric,\n  changeMetricAttribute,\n  changeMetricField,\n  changeMetricMeta,\n  changeMetricSetting,\n  changeMetricType,\n  removeMetric,\n  toggleMetricVisibility,\n} from './actions';\n\nexport const reducer = (state: ElasticsearchQuery['metrics'], action: Action): ElasticsearchQuery['metrics'] => {\n  if (addMetric.match(action)) {\n    return [...state!, defaultMetricAgg(action.payload)];\n  }\n\n  if (removeMetric.match(action)) {\n    const metricToRemove = state!.find((m) => m.id === action.payload)!;\n    const metricsToRemove = [metricToRemove, ...getChildren(metricToRemove, state!)];\n    const resultingMetrics = state!.filter((metric) => !metricsToRemove.some((toRemove) => toRemove.id === metric.id));\n    if (resultingMetrics.length === 0) {\n      return [defaultMetricAgg('1')];\n    }\n    return resultingMetrics;\n  }\n\n  if (changeMetricType.match(action)) {\n    return state!\n      .filter((metric) =>\n        // When the new query type is not `metrics` we remove all other metrics from the query\n        // leaving only the current one.\n        metricAggregationConfig[action.payload.type].impliedQueryType === 'metrics'\n          ? true\n          : metric.id === action.payload.id\n      )\n      .map((metric) => {\n        if (metric.id !== action.payload.id) {\n          return metric;\n        }\n\n        /*\n        TODO: The previous version of the query editor was keeping some of the old metric's configurations\n        in the new selected one (such as field or some settings).\n        It the future would be nice to have the same behavior but it's hard without a proper definition,\n        as Elasticsearch will error sometimes if some settings are not compatible.\n      */\n        return {\n          id: metric.id,\n          type: action.payload.type,\n          ...metricAggregationConfig[action.payload.type].defaults,\n        } as MetricAggregation;\n      });\n  }\n\n  if (changeMetricField.match(action)) {\n    return state!.map((metric) => {\n      if (metric.id !== action.payload.id) {\n        return metric;\n      }\n\n      const newMetric = {\n        ...metric,\n        field: action.payload.field,\n      };\n\n      if (isPipelineAggregation(metric)) {\n        return { ...newMetric, pipelineAgg: action.payload.field };\n      }\n\n      return newMetric;\n    });\n  }\n\n  if (toggleMetricVisibility.match(action)) {\n    return state!.map((metric) => {\n      if (metric.id !== action.payload) {\n        return metric;\n      }\n\n      return {\n        ...metric,\n        hide: !metric.hide,\n      };\n    });\n  }\n\n  if (changeMetricSetting.match(action)) {\n    return state!.map((metric) => {\n      if (metric.id !== action.payload.metric.id) {\n        return metric;\n      }\n\n      // TODO: Here, instead of this if statement, we should assert that metric is MetricAggregationWithSettings\n      if (isMetricAggregationWithSettings(metric)) {\n        const newSettings = removeEmpty({\n          ...metric.settings,\n          [action.payload.settingName]: action.payload.newValue,\n        });\n\n        return {\n          ...metric,\n          settings: {\n            ...newSettings,\n          },\n        };\n      }\n\n      // This should never happen.\n      return metric;\n    });\n  }\n\n  if (changeMetricMeta.match(action)) {\n    return state!.map((metric) => {\n      if (metric.id !== action.payload.metric.id) {\n        return metric;\n      }\n\n      // TODO: Here, instead of this if statement, we should assert that metric is MetricAggregationWithMeta\n      if (isMetricAggregationWithMeta(metric)) {\n        return {\n          ...metric,\n          meta: {\n            ...metric.meta,\n            [action.payload.meta]: action.payload.newValue,\n          },\n        };\n      }\n\n      // This should never happen.\n      return metric;\n    });\n  }\n\n  if (changeMetricAttribute.match(action)) {\n    return state!.map((metric) => {\n      if (metric.id !== action.payload.metric.id) {\n        return metric;\n      }\n\n      return {\n        ...metric,\n        [action.payload.attribute]: action.payload.newValue,\n      };\n    });\n  }\n\n  if (initQuery.match(action)) {\n    if (state && state.length > 0) {\n      return state;\n    }\n    return [defaultMetricAgg('1')];\n  }\n\n  return state;\n};\n","import React, { Context, createContext, PropsWithChildren, useCallback, useContext, useEffect, useState } from 'react';\n\nimport { TimeRange } from '@grafana/data';\n\nimport { ElasticDatasource } from '../../datasource';\nimport { combineReducers, useStatelessReducer, DispatchContext } from '../../hooks/useStatelessReducer';\nimport { ElasticsearchQuery } from '../../types';\n\nimport { createReducer as createBucketAggsReducer } from './BucketAggregationsEditor/state/reducer';\nimport { reducer as metricsReducer } from './MetricAggregationsEditor/state/reducer';\nimport { aliasPatternReducer, queryReducer, initQuery } from './state';\n\nconst DatasourceContext = createContext<ElasticDatasource | undefined>(undefined);\nconst QueryContext = createContext<ElasticsearchQuery | undefined>(undefined);\nconst RangeContext = createContext<TimeRange | undefined>(undefined);\n\ninterface Props {\n  query: ElasticsearchQuery;\n  onChange: (query: ElasticsearchQuery) => void;\n  onRunQuery: () => void;\n  datasource: ElasticDatasource;\n  range: TimeRange;\n}\n\nexport const ElasticsearchProvider = ({\n  children,\n  onChange,\n  onRunQuery,\n  query,\n  datasource,\n  range,\n}: PropsWithChildren<Props>) => {\n  const onStateChange = useCallback(\n    (query: ElasticsearchQuery) => {\n      onChange(query);\n      onRunQuery();\n    },\n    [onChange, onRunQuery]\n  );\n\n  const reducer = combineReducers<Pick<ElasticsearchQuery, 'query' | 'alias' | 'metrics' | 'bucketAggs'>>({\n    query: queryReducer,\n    alias: aliasPatternReducer,\n    metrics: metricsReducer,\n    bucketAggs: createBucketAggsReducer(datasource.timeField),\n  });\n\n  const dispatch = useStatelessReducer(\n    // timeField is part of the query model, but its value is always set to be the one from datasource settings.\n    (newState) => onStateChange({ ...query, ...newState, timeField: datasource.timeField }),\n    query,\n    reducer\n  );\n\n  const isUninitialized = !query.metrics || !query.bucketAggs || query.query === undefined;\n\n  const [shouldRunInit, setShouldRunInit] = useState(isUninitialized);\n\n  // This initializes the query by dispatching an init action to each reducer.\n  // useStatelessReducer will then call `onChange` with the newly generated query\n  useEffect(() => {\n    if (shouldRunInit && isUninitialized) {\n      dispatch(initQuery());\n      setShouldRunInit(false);\n    }\n  }, [shouldRunInit, dispatch, isUninitialized]);\n\n  if (isUninitialized) {\n    return null;\n  }\n\n  return (\n    <DatasourceContext.Provider value={datasource}>\n      <QueryContext.Provider value={query}>\n        <RangeContext.Provider value={range}>\n          <DispatchContext.Provider value={dispatch}>{children}</DispatchContext.Provider>\n        </RangeContext.Provider>\n      </QueryContext.Provider>\n    </DatasourceContext.Provider>\n  );\n};\n\ninterface GetHook {\n  <T>(context: Context<T>): () => NonNullable<T>;\n}\n\nconst getHook: GetHook = (c) => () => {\n  const contextValue = useContext(c);\n\n  if (!contextValue) {\n    throw new Error('use ElasticsearchProvider first.');\n  }\n\n  return contextValue;\n};\n\nexport const useQuery = getHook(QueryContext);\nexport const useDatasource = getHook(DatasourceContext);\nexport const useRange = getHook(RangeContext);\n","import { useMemo } from 'react';\n\nimport { useQuery } from '../components/QueryEditor/ElasticsearchQueryContext';\nimport { MetricAggregation, BucketAggregation } from '../types';\n\nconst toId = <T extends { id: unknown }>(e: T): T['id'] => e.id;\n\nconst toInt = (idString: string) => parseInt(idString, 10);\n\nexport const useNextId = (): MetricAggregation['id'] | BucketAggregation['id'] => {\n  const { metrics, bucketAggs } = useQuery();\n\n  return useMemo(\n    () =>\n      (Math.max(...[...(metrics?.map(toId) || ['0']), ...(bucketAggs?.map(toId) || ['0'])].map(toInt)) + 1).toString(),\n    [metrics, bucketAggs]\n  );\n};\n","import { css } from '@emotion/css';\nimport { noop } from 'lodash';\nimport React, { PropsWithChildren } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { IconButton, InlineFieldRow, InlineLabel, InlineSegmentGroup, useStyles2 } from '@grafana/ui';\n\ninterface Props {\n  label: string;\n  onRemoveClick?: false | (() => void);\n  onHideClick?: false | (() => void);\n  hidden?: boolean;\n}\n\nexport const QueryEditorRow = ({\n  children,\n  label,\n  onRemoveClick,\n  onHideClick,\n  hidden = false,\n}: PropsWithChildren<Props>) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <InlineFieldRow>\n      <InlineSegmentGroup>\n        <InlineLabel width={17} as=\"div\">\n          <span>{label}</span>\n          <span className={styles.iconWrapper}>\n            {onHideClick && (\n              <IconButton\n                name={hidden ? 'eye-slash' : 'eye'}\n                onClick={onHideClick}\n                size=\"sm\"\n                aria-pressed={hidden}\n                className={styles.icon}\n                tooltip=\"Hide row\"\n              />\n            )}\n            <IconButton\n              name=\"trash-alt\"\n              size=\"sm\"\n              className={styles.icon}\n              onClick={onRemoveClick || noop}\n              disabled={!onRemoveClick}\n              tooltip=\"Remove row\"\n            />\n          </span>\n        </InlineLabel>\n      </InlineSegmentGroup>\n      {children}\n    </InlineFieldRow>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    iconWrapper: css`\n      display: flex;\n    `,\n    icon: css`\n      color: ${theme.colors.text.secondary};\n      margin-left: ${theme.spacing(0.25)};\n    `,\n  };\n};\n","import { BucketAggregationType, BucketAggregationWithField, BucketAggregation } from '../../../types';\n\nimport { bucketAggregationConfig } from './utils';\n\nexport const isBucketAggregationWithField = (\n  bucketAgg: BucketAggregation | BucketAggregationWithField\n): bucketAgg is BucketAggregationWithField => bucketAggregationConfig[bucketAgg.type].requiresField;\n\nexport const BUCKET_AGGREGATION_TYPES: BucketAggregationType[] = [\n  'date_histogram',\n  'histogram',\n  'terms',\n  'filters',\n  'geohash_grid',\n  'nested',\n];\n\nexport const isBucketAggregationType = (s: BucketAggregationType | string): s is BucketAggregationType =>\n  BUCKET_AGGREGATION_TYPES.includes(s as BucketAggregationType);\n","import { lastValueFrom } from 'rxjs';\n\nimport { MetricFindValue, SelectableValue } from '@grafana/data';\n\nimport { isBucketAggregationType } from '../components/QueryEditor/BucketAggregationsEditor/aggregations';\nimport { useDatasource, useRange } from '../components/QueryEditor/ElasticsearchQueryContext';\nimport { isMetricAggregationType } from '../components/QueryEditor/MetricAggregationsEditor/aggregations';\nimport { MetricAggregationType, BucketAggregationType } from '../types';\n\ntype AggregationType = BucketAggregationType | MetricAggregationType;\n\nconst getFilter = (type: AggregationType) => {\n  if (isMetricAggregationType(type)) {\n    switch (type) {\n      case 'cardinality':\n        return [];\n      case 'top_metrics':\n        // top_metrics was introduced in 7.7 where `metrics` only supported number:\n        // https://www.elastic.co/guide/en/elasticsearch/reference/7.7/search-aggregations-metrics-top-metrics.html#_metrics\n        // TODO: starting from 7.11 it supports ips and keywords as well:\n        // https://www.elastic.co/guide/en/elasticsearch/reference/7.11/search-aggregations-metrics-top-metrics.html#_metrics\n        return ['number'];\n      default:\n        return ['number'];\n    }\n  }\n\n  if (isBucketAggregationType(type)) {\n    switch (type) {\n      case 'date_histogram':\n        return ['date'];\n      case 'geohash_grid':\n        return ['geo_point'];\n      case 'histogram':\n        return ['number'];\n      default:\n        return [];\n    }\n  }\n\n  return [];\n};\n\nconst toSelectableValue = ({ text }: MetricFindValue): SelectableValue<string> => ({\n  label: text,\n  value: text,\n});\n\n/**\n * Returns a function to query the configured datasource for autocomplete values for the specified aggregation type or data types.\n * Each aggregation can be run on different types, for example avg only operates on numeric fields, geohash_grid only on geo_point fields.\n * If an aggregation type is provided, the promise will resolve with all fields suitable to be used as a field for the given aggregation.\n * If an array of types is providem the promise will resolve with all the fields matching the provided types.\n * @param aggregationType the type of aggregation to get fields for\n */\nexport const useFields = (type: AggregationType | string[]) => {\n  const datasource = useDatasource();\n  const range = useRange();\n  const filter = Array.isArray(type) ? type : getFilter(type);\n  let rawFields: MetricFindValue[];\n\n  return async (q?: string) => {\n    // _mapping doesn't support filtering, we avoid sending a request everytime q changes\n    if (!rawFields) {\n      rawFields = await lastValueFrom(datasource.getFields(filter, range));\n    }\n\n    return rawFields.filter(({ text }) => q === undefined || text.includes(q)).map(toSelectableValue);\n  };\n};\n","import { css } from '@emotion/css';\n\nexport const segmentStyles = css`\n  min-width: 150px;\n`;\n","import { css, cx } from '@emotion/css';\nimport React, { PropsWithChildren, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Icon, InlineSegmentGroup, useTheme2 } from '@grafana/ui';\n\nimport { segmentStyles } from './styles';\n\nconst getStyles = (theme: GrafanaTheme2, hidden: boolean) => {\n  return {\n    wrapper: css`\n      max-width: 500px;\n      display: flex;\n      flex-direction: column;\n    `,\n    settingsWrapper: css`\n      padding-top: ${theme.spacing(0.5)};\n    `,\n    icon: css`\n      margin-right: ${theme.spacing(0.5)};\n    `,\n    button: css`\n      justify-content: start;\n      ${hidden &&\n      css`\n        color: ${theme.colors.text.disabled};\n      `}\n    `,\n  };\n};\n\ninterface Props {\n  label: string;\n  hidden?: boolean;\n}\n\nexport const SettingsEditorContainer = ({ label, children, hidden = false }: PropsWithChildren<Props>) => {\n  const [open, setOpen] = useState(false);\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, hidden);\n\n  return (\n    <InlineSegmentGroup>\n      <div className={cx(styles.wrapper)}>\n        <button\n          className={cx('gf-form-label query-part', styles.button, segmentStyles)}\n          onClick={() => setOpen(!open)}\n          aria-expanded={open}\n          type=\"button\"\n        >\n          <Icon name={open ? 'angle-down' : 'angle-right'} aria-hidden=\"true\" className={styles.icon} />\n          {label}\n        </button>\n\n        {open && <div className={styles.settingsWrapper}>{children}</div>}\n      </div>\n    </InlineSegmentGroup>\n  );\n};\n","import { InternalTimeZones } from '@grafana/data';\n\nimport {\n  isMetricAggregationWithField,\n  isMetricAggregationWithSettings,\n  isMovingAverageWithModelSettings,\n  isPipelineAggregation,\n  isPipelineAggregationWithMultipleBucketPaths,\n} from './components/QueryEditor/MetricAggregationsEditor/aggregations';\nimport {\n  defaultBucketAgg,\n  defaultMetricAgg,\n  findMetricById,\n  highlightTags,\n  defaultGeoHashPrecisionString,\n} from './queryDef';\nimport {\n  ElasticsearchQuery,\n  TermsQuery,\n  Filters,\n  Terms,\n  MetricAggregation,\n  MetricAggregationWithInlineScript,\n  Histogram,\n  DateHistogram,\n} from './types';\nimport { convertOrderByToMetricId, getScriptValue } from './utils';\n\n// Omitting 1m, 1h, 1d for now, as these cover the main use cases for calendar_interval\nexport const calendarIntervals: string[] = ['1w', '1M', '1q', '1y'];\n\nexport class ElasticQueryBuilder {\n  timeField: string;\n\n  constructor(options: { timeField: string }) {\n    this.timeField = options.timeField;\n  }\n\n  getRangeFilter() {\n    const filter = {\n      [this.timeField]: {\n        gte: '$timeFrom',\n        lte: '$timeTo',\n        format: 'epoch_millis',\n      },\n    };\n\n    return filter;\n  }\n\n  buildTermsAgg(aggDef: Terms, queryNode: { terms?: any; aggs?: Record<string, unknown> }, target: ElasticsearchQuery) {\n    queryNode.terms = { field: aggDef.field };\n\n    if (!aggDef.settings) {\n      return queryNode;\n    }\n\n    // TODO: This default should be somewhere else together with the one used in the UI\n    const size = aggDef.settings?.size ? parseInt(aggDef.settings.size, 10) : 500;\n    queryNode.terms.size = size === 0 ? 500 : size;\n\n    if (aggDef.settings.orderBy !== void 0) {\n      queryNode.terms.order = {};\n      if (aggDef.settings.orderBy === '_term') {\n        queryNode.terms.order['_key'] = aggDef.settings.order;\n      } else {\n        queryNode.terms.order[aggDef.settings.orderBy] = aggDef.settings.order;\n      }\n\n      // if metric ref, look it up and add it to this agg level\n      const metricId = convertOrderByToMetricId(aggDef.settings.orderBy);\n      if (metricId) {\n        for (let metric of target.metrics || []) {\n          if (metric.id === metricId) {\n            if (metric.type === 'count') {\n              queryNode.terms.order = { _count: aggDef.settings.order };\n            } else if (isMetricAggregationWithField(metric)) {\n              queryNode.aggs = {};\n              queryNode.aggs[metric.id] = {\n                [metric.type]: { field: metric.field },\n              };\n            }\n            break;\n          }\n        }\n      }\n    }\n\n    if (aggDef.settings.min_doc_count !== void 0) {\n      queryNode.terms.min_doc_count = parseInt(aggDef.settings.min_doc_count, 10);\n\n      if (isNaN(queryNode.terms.min_doc_count)) {\n        queryNode.terms.min_doc_count = aggDef.settings.min_doc_count;\n      }\n    }\n\n    if (aggDef.settings.missing) {\n      queryNode.terms.missing = aggDef.settings.missing;\n    }\n\n    return queryNode;\n  }\n\n  getDateHistogramAgg(aggDef: DateHistogram) {\n    const esAgg: Record<string, unknown> = {};\n    const settings = aggDef.settings || {};\n\n    esAgg.field = aggDef.field || this.timeField;\n    esAgg.min_doc_count = settings.min_doc_count || 0;\n    esAgg.extended_bounds = { min: '$timeFrom', max: '$timeTo' };\n    esAgg.format = 'epoch_millis';\n    if (settings.timeZone && settings.timeZone !== InternalTimeZones.utc) {\n      esAgg.time_zone = settings.timeZone;\n    }\n\n    if (settings.offset !== '') {\n      esAgg.offset = settings.offset;\n    }\n\n    const interval = settings.interval === 'auto' ? '${__interval_ms}ms' : settings.interval;\n\n    if (interval !== undefined && calendarIntervals.includes(interval)) {\n      esAgg.calendar_interval = interval;\n    } else {\n      esAgg.fixed_interval = interval;\n    }\n\n    return esAgg;\n  }\n\n  getHistogramAgg(aggDef: Histogram) {\n    const esAgg = {\n      interval: aggDef.settings?.interval,\n      field: aggDef.field,\n      min_doc_count: aggDef.settings?.min_doc_count || 0,\n    };\n\n    return esAgg;\n  }\n\n  getFiltersAgg(aggDef: Filters) {\n    const filterObj: Record<string, { query_string: { query: string; analyze_wildcard: boolean } }> = {};\n\n    for (let { query, label } of aggDef.settings?.filters || []) {\n      filterObj[label || query] = {\n        query_string: {\n          query: query,\n          analyze_wildcard: true,\n        },\n      };\n    }\n\n    return filterObj;\n  }\n\n  documentQuery(query: any, size: number) {\n    query.size = size;\n    query.sort = [\n      {\n        [this.timeField]: { order: 'desc', unmapped_type: 'boolean' },\n      },\n      {\n        _doc: { order: 'desc' },\n      },\n    ];\n\n    query.script_fields = {};\n    return query;\n  }\n\n  build(target: ElasticsearchQuery) {\n    // make sure query has defaults;\n    target.metrics = target.metrics || [defaultMetricAgg()];\n    target.bucketAggs = target.bucketAggs || [defaultBucketAgg()];\n    target.timeField = this.timeField;\n    let metric: MetricAggregation;\n\n    let i, j, pv, nestedAggs;\n    const query: any = {\n      size: 0,\n      query: {\n        bool: {\n          filter: [{ range: this.getRangeFilter() }],\n        },\n      },\n    };\n\n    if (target.query && target.query !== '') {\n      query.query.bool.filter = [\n        ...query.query.bool.filter,\n        {\n          query_string: {\n            analyze_wildcard: true,\n            query: target.query,\n          },\n        },\n      ];\n    }\n\n    // If target doesn't have bucketAggs and type is not raw_document, it is invalid query.\n    if (target.bucketAggs.length === 0) {\n      metric = target.metrics[0];\n\n      if (!metric || !(metric.type === 'raw_document' || metric.type === 'raw_data')) {\n        throw { message: 'Invalid query' };\n      }\n    }\n\n    /* Handle document query:\n     * Check if metric type is raw_document. If metric doesn't have size (or size is 0), update size to 500.\n     * Otherwise it will not be a valid query and error will be thrown.\n     */\n    if (target.metrics?.[0]?.type === 'raw_document' || target.metrics?.[0]?.type === 'raw_data') {\n      metric = target.metrics[0];\n\n      // TODO: This default should be somewhere else together with the one used in the UI\n      const size = metric.settings?.size ? parseInt(metric.settings.size, 10) : 500;\n\n      return this.documentQuery(query, size || 500);\n    }\n\n    nestedAggs = query;\n\n    for (i = 0; i < target.bucketAggs.length; i++) {\n      const aggDef = target.bucketAggs[i];\n      const esAgg: any = {};\n\n      switch (aggDef.type) {\n        case 'date_histogram': {\n          esAgg['date_histogram'] = this.getDateHistogramAgg(aggDef);\n          break;\n        }\n        case 'histogram': {\n          esAgg['histogram'] = this.getHistogramAgg(aggDef);\n          break;\n        }\n        case 'filters': {\n          esAgg['filters'] = { filters: this.getFiltersAgg(aggDef) };\n          break;\n        }\n        case 'terms': {\n          this.buildTermsAgg(aggDef, esAgg, target);\n          break;\n        }\n        case 'geohash_grid': {\n          esAgg['geohash_grid'] = {\n            field: aggDef.field,\n            precision: aggDef.settings?.precision || defaultGeoHashPrecisionString,\n          };\n          break;\n        }\n        case 'nested': {\n          esAgg['nested'] = { path: aggDef.field };\n          break;\n        }\n      }\n\n      nestedAggs.aggs = nestedAggs.aggs || {};\n      nestedAggs.aggs[aggDef.id] = esAgg;\n      nestedAggs = esAgg;\n    }\n\n    nestedAggs.aggs = {};\n\n    for (i = 0; i < target.metrics.length; i++) {\n      metric = target.metrics[i];\n      if (metric.type === 'count') {\n        continue;\n      }\n\n      const aggField: any = {};\n      let metricAgg: any = {};\n\n      if (isPipelineAggregation(metric)) {\n        if (isPipelineAggregationWithMultipleBucketPaths(metric)) {\n          if (metric.pipelineVariables) {\n            metricAgg = {\n              buckets_path: {},\n            };\n\n            for (j = 0; j < metric.pipelineVariables.length; j++) {\n              pv = metric.pipelineVariables[j];\n\n              if (pv.name && pv.pipelineAgg && /^\\d*$/.test(pv.pipelineAgg)) {\n                const appliedAgg = findMetricById(target.metrics, pv.pipelineAgg);\n                if (appliedAgg) {\n                  if (appliedAgg.type === 'count') {\n                    metricAgg.buckets_path[pv.name] = '_count';\n                  } else {\n                    metricAgg.buckets_path[pv.name] = pv.pipelineAgg;\n                  }\n                }\n              }\n            }\n          } else {\n            continue;\n          }\n        } else {\n          if (metric.field && /^\\d*$/.test(metric.field)) {\n            const appliedAgg = findMetricById(target.metrics, metric.field);\n            if (appliedAgg) {\n              if (appliedAgg.type === 'count') {\n                metricAgg = { buckets_path: '_count' };\n              } else {\n                metricAgg = { buckets_path: metric.field };\n              }\n            }\n          } else {\n            continue;\n          }\n        }\n      } else if (isMetricAggregationWithField(metric)) {\n        metricAgg = { field: metric.field };\n      }\n\n      if (isMetricAggregationWithSettings(metric)) {\n        Object.entries(metric.settings || {})\n          .filter(([_, v]) => v !== null)\n          .forEach(([k, v]) => {\n            metricAgg[k] =\n              k === 'script' ? this.buildScript(getScriptValue(metric as MetricAggregationWithInlineScript)) : v;\n          });\n\n        // Elasticsearch isn't generally too picky about the data types in the request body,\n        // however some fields are required to be numeric.\n        // Users might have already created some of those with before, where the values were numbers.\n        switch (metric.type) {\n          case 'moving_avg':\n            metricAgg = {\n              ...metricAgg,\n              ...(metricAgg?.window !== undefined && { window: this.toNumber(metricAgg.window) }),\n              ...(metricAgg?.predict !== undefined && { predict: this.toNumber(metricAgg.predict) }),\n              ...(isMovingAverageWithModelSettings(metric) && {\n                settings: {\n                  ...metricAgg.settings,\n                  ...Object.fromEntries(\n                    Object.entries(metricAgg.settings || {})\n                      // Only format properties that are required to be numbers\n                      .filter(([settingName]) => ['alpha', 'beta', 'gamma', 'period'].includes(settingName))\n                      // omitting undefined\n                      .filter(([_, stringValue]) => stringValue !== undefined)\n                      .map(([_, stringValue]) => [_, this.toNumber(stringValue)])\n                  ),\n                },\n              }),\n            };\n            break;\n\n          case 'serial_diff':\n            metricAgg = {\n              ...metricAgg,\n              ...(metricAgg.lag !== undefined && {\n                lag: this.toNumber(metricAgg.lag),\n              }),\n            };\n            break;\n\n          case 'top_metrics':\n            metricAgg = {\n              metrics: metric.settings?.metrics?.map((field) => ({ field })),\n              size: 1,\n            };\n\n            if (metric.settings?.orderBy) {\n              metricAgg.sort = [{ [metric.settings?.orderBy]: metric.settings?.order }];\n            }\n            break;\n        }\n      }\n\n      aggField[metric.type] = metricAgg;\n      nestedAggs.aggs[metric.id] = aggField;\n    }\n\n    return query;\n  }\n\n  private buildScript(script: string) {\n    return script;\n  }\n\n  private toNumber(stringValue: unknown): unknown | number {\n    const parsedValue = parseFloat(`${stringValue}`);\n    if (isNaN(parsedValue)) {\n      return stringValue;\n    }\n\n    return parsedValue;\n  }\n\n  getTermsQuery(queryDef: TermsQuery) {\n    const query: any = {\n      size: 0,\n      query: {\n        bool: {\n          filter: [{ range: this.getRangeFilter() }],\n        },\n      },\n    };\n\n    if (queryDef.query) {\n      query.query.bool.filter.push({\n        query_string: {\n          analyze_wildcard: true,\n          query: queryDef.query,\n        },\n      });\n    }\n\n    let size = 500;\n    if (queryDef.size) {\n      size = queryDef.size;\n    }\n\n    query.aggs = {\n      '1': {\n        terms: {\n          field: queryDef.field,\n          size: size,\n          order: {},\n        },\n      },\n    };\n\n    // Default behaviour is to order results by { _key: asc }\n    // queryDef.order allows selection of asc/desc\n    // queryDef.orderBy allows selection of doc_count ordering (defaults desc)\n\n    const { orderBy = 'key', order = orderBy === 'doc_count' ? 'desc' : 'asc' } = queryDef;\n\n    if (['asc', 'desc'].indexOf(order) < 0) {\n      throw { message: `Invalid query sort order ${order}` };\n    }\n\n    switch (orderBy) {\n      case 'key':\n      case 'term':\n        const keyname = '_key';\n        query.aggs['1'].terms.order[keyname] = order;\n        break;\n      case 'doc_count':\n        query.aggs['1'].terms.order['_count'] = order;\n        break;\n      default:\n        throw { message: `Invalid query sort type ${orderBy}` };\n    }\n\n    return query;\n  }\n\n  getLogsQuery(target: ElasticsearchQuery, limit: number) {\n    let query: any = {\n      size: 0,\n      query: {\n        bool: {\n          filter: [{ range: this.getRangeFilter() }],\n        },\n      },\n    };\n\n    if (target.query) {\n      query.query.bool.filter.push({\n        query_string: {\n          analyze_wildcard: true,\n          query: target.query,\n        },\n      });\n    }\n\n    query = this.documentQuery(query, limit);\n\n    return {\n      ...query,\n      aggs: this.build(target).aggs,\n      highlight: {\n        fields: {\n          '*': {},\n        },\n        pre_tags: [highlightTags.pre],\n        post_tags: [highlightTags.post],\n        fragment_size: 2147483647,\n      },\n    };\n  }\n}\n","import { useState } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\n\nconst hasValue =\n  <T extends SelectableValue>(searchValue: T['value']) =>\n  ({ value }: T) =>\n    value === searchValue;\n\nconst getInitialState = (initialOptions: SelectableValue[], initialValue?: string): SelectableValue[] => {\n  if (initialValue === undefined || initialOptions.some(hasValue(initialValue))) {\n    return initialOptions;\n  }\n\n  return [\n    ...initialOptions,\n    {\n      value: initialValue,\n      label: initialValue,\n    },\n  ];\n};\n\ninterface Params {\n  options: SelectableValue[];\n  value?: string;\n  onChange: (s: SelectableValue<string>) => void;\n}\n\n/**\n * Creates the Props needed by Select to handle custom values and handles custom value creation\n * and the initial value when it is not present in the option array.\n */\nexport const useCreatableSelectPersistedBehaviour = ({ options: initialOptions, value, onChange }: Params) => {\n  const [options, setOptions] = useState(getInitialState(initialOptions, value));\n\n  const addOption = (newValue: string) => setOptions([...options, { value: newValue, label: newValue }]);\n\n  return {\n    onCreateOption: (value: string) => {\n      addOption(value);\n      onChange({ value });\n    },\n    onChange,\n    allowCustomValue: true,\n    options,\n    value,\n  };\n};\n","import { uniqueId } from 'lodash';\nimport React, { useCallback, useRef } from 'react';\nimport { GroupBase, OptionsOrGroups } from 'react-select';\n\nimport { InternalTimeZones, SelectableValue } from '@grafana/data';\nimport { InlineField, Input, Select, TimeZonePicker } from '@grafana/ui';\n\nimport { calendarIntervals } from '../../../../QueryBuilder';\nimport { useDispatch } from '../../../../hooks/useStatelessReducer';\nimport { DateHistogram } from '../../../../types';\nimport { useCreatableSelectPersistedBehaviour } from '../../../hooks/useCreatableSelectPersistedBehaviour';\nimport { changeBucketAggregationSetting } from '../state/actions';\nimport { bucketAggregationConfig } from '../utils';\n\nimport { inlineFieldProps } from '.';\n\nconst defaultIntervalOptions: Array<SelectableValue<string>> = [\n  { label: 'auto', value: 'auto' },\n  { label: '10s', value: '10s' },\n  { label: '1m', value: '1m' },\n  { label: '5m', value: '5m' },\n  { label: '10m', value: '10m' },\n  { label: '20m', value: '20m' },\n  { label: '1h', value: '1h' },\n  { label: '1d', value: '1d' },\n  { label: '1w', value: '1w' },\n  { label: '1M', value: '1M' },\n  { label: '1q', value: '1q' },\n  { label: '1y', value: '1y' },\n];\n\nconst hasValue =\n  (searchValue: string) =>\n  ({ value }: SelectableValue<string>) =>\n    value === searchValue;\n\nconst isValidNewOption = (\n  inputValue: string,\n  _: SelectableValue<string> | null,\n  options: OptionsOrGroups<unknown, GroupBase<unknown>>\n) => {\n  // TODO: would be extremely nice here to allow only template variables and values that are\n  // valid date histogram's Interval options\n  const valueExists = (options as Array<SelectableValue<string>>).some(hasValue(inputValue));\n  // we also don't want users to create \"empty\" values\n  return !valueExists && inputValue.trim().length > 0;\n};\n\nconst optionStartsWithValue = (option: SelectableValue<string>, value: string) =>\n  option.value?.startsWith(value) || false;\n\ninterface Props {\n  bucketAgg: DateHistogram;\n}\n\nconst getIntervalType = (interval: string | undefined): 'calendar' | 'fixed' => {\n  return interval && calendarIntervals.includes(interval) ? 'calendar' : 'fixed';\n};\n\nexport const DateHistogramSettingsEditor = ({ bucketAgg }: Props) => {\n  const dispatch = useDispatch();\n  const { current: baseId } = useRef(uniqueId('es-date_histogram-'));\n\n  const handleIntervalChange = useCallback(\n    ({ value }: SelectableValue<string>) =>\n      dispatch(changeBucketAggregationSetting({ bucketAgg, settingName: 'interval', newValue: value })),\n    [bucketAgg, dispatch]\n  );\n\n  const intervalType = getIntervalType(\n    bucketAgg.settings?.interval || bucketAggregationConfig.date_histogram.defaultSettings?.interval\n  );\n\n  return (\n    <>\n      <InlineField\n        label={intervalType === 'calendar' ? 'Calendar interval' : 'Fixed interval'}\n        tooltip={\n          intervalType === 'calendar'\n            ? 'Calendar-aware intervals adapt to varying day lengths, month durations, and leap seconds, considering the calendar context.'\n            : 'Fixed intervals remain constant, always being multiples of SI units, independent of calendar changes.'\n        }\n        {...inlineFieldProps}\n      >\n        <Select\n          inputId={uniqueId('es-date_histogram-interval')}\n          isValidNewOption={isValidNewOption}\n          filterOption={optionStartsWithValue}\n          {...useCreatableSelectPersistedBehaviour({\n            options: defaultIntervalOptions,\n            value: bucketAgg.settings?.interval || bucketAggregationConfig.date_histogram.defaultSettings?.interval,\n            onChange: handleIntervalChange,\n          })}\n        />\n      </InlineField>\n      <InlineField label=\"Min Doc Count\" {...inlineFieldProps}>\n        <Input\n          id={`${baseId}-min_doc_count`}\n          onBlur={(e) =>\n            dispatch(\n              changeBucketAggregationSetting({ bucketAgg, settingName: 'min_doc_count', newValue: e.target.value })\n            )\n          }\n          defaultValue={\n            bucketAgg.settings?.min_doc_count || bucketAggregationConfig.date_histogram.defaultSettings?.min_doc_count\n          }\n        />\n      </InlineField>\n\n      <InlineField label=\"Trim Edges\" {...inlineFieldProps} tooltip=\"Trim the edges on the timeseries datapoints\">\n        <Input\n          id={`${baseId}-trime_edges`}\n          onBlur={(e) =>\n            dispatch(changeBucketAggregationSetting({ bucketAgg, settingName: 'trimEdges', newValue: e.target.value }))\n          }\n          defaultValue={\n            bucketAgg.settings?.trimEdges || bucketAggregationConfig.date_histogram.defaultSettings?.trimEdges\n          }\n        />\n      </InlineField>\n\n      <InlineField\n        label=\"Offset\"\n        {...inlineFieldProps}\n        tooltip=\"Change the start value of each bucket by the specified positive (+) or negative offset (-) duration, such as 1h for an hour, or 1d for a day\"\n      >\n        <Input\n          id={`${baseId}-offset`}\n          onBlur={(e) =>\n            dispatch(changeBucketAggregationSetting({ bucketAgg, settingName: 'offset', newValue: e.target.value }))\n          }\n          defaultValue={bucketAgg.settings?.offset || bucketAggregationConfig.date_histogram.defaultSettings?.offset}\n        />\n      </InlineField>\n\n      <InlineField label=\"Timezone\" {...inlineFieldProps}>\n        <TimeZonePicker\n          value={bucketAgg.settings?.timeZone || bucketAggregationConfig.date_histogram.defaultSettings?.timeZone}\n          includeInternal={[InternalTimeZones.utc]}\n          onChange={(timeZone) => {\n            dispatch(changeBucketAggregationSetting({ bucketAgg, settingName: 'timeZone', newValue: timeZone }));\n          }}\n        />\n      </InlineField>\n    </>\n  );\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { Button } from '@grafana/ui';\n\ninterface Props {\n  index: number;\n  elements: unknown[];\n  onAdd: () => void;\n  onRemove: () => void;\n}\n\n/**\n * A component used to show add & remove buttons for mutable lists of values. Wether to show or not the add or the remove buttons\n * depends on the `index` and `elements` props. This enforces a consistent experience whenever this pattern is used.\n */\nexport const AddRemove = ({ index, onAdd, onRemove, elements }: Props) => {\n  return (\n    <div\n      className={css`\n        display: flex;\n      `}\n    >\n      {index === 0 && (\n        <Button variant=\"secondary\" fill=\"text\" icon=\"plus\" onClick={onAdd} tooltip=\"Add\" aria-label=\"Add\" />\n      )}\n\n      {elements.length >= 2 && (\n        <Button variant=\"secondary\" fill=\"text\" icon=\"minus\" onClick={onRemove} tooltip=\"Remove\" aria-label=\"Remove\" />\n      )}\n    </div>\n  );\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nimport { Filter } from '../../../../../../types';\n\nexport const addFilter = createAction('@bucketAggregations/filter/add');\nexport const removeFilter = createAction<number>('@bucketAggregations/filter/remove');\nexport const changeFilter = createAction<{ index: number; filter: Filter }>('@bucketAggregations/filter/change');\n","import { Action } from 'redux';\n\nimport { Filter } from '../../../../../../types';\nimport { defaultFilter } from '../utils';\n\nimport { addFilter, changeFilter, removeFilter } from './actions';\n\nexport const reducer = (state: Filter[] = [], action: Action) => {\n  if (addFilter.match(action)) {\n    return [...state, defaultFilter()];\n  }\n\n  if (removeFilter.match(action)) {\n    return state.slice(0, action.payload).concat(state.slice(action.payload + 1));\n  }\n\n  if (changeFilter.match(action)) {\n    return state.map((filter, index) => {\n      if (index !== action.payload.index) {\n        return filter;\n      }\n\n      return action.payload.filter;\n    });\n  }\n\n  return state;\n};\n","import { css } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { useEffect, useRef } from 'react';\n\nimport { InlineField, Input, QueryField } from '@grafana/ui';\n\nimport { useDispatch, useStatelessReducer } from '../../../../../hooks/useStatelessReducer';\nimport { Filters } from '../../../../../types';\nimport { AddRemove } from '../../../../AddRemove';\nimport { changeBucketAggregationSetting } from '../../state/actions';\n\nimport { addFilter, changeFilter, removeFilter } from './state/actions';\nimport { reducer as filtersReducer } from './state/reducer';\n\ninterface Props {\n  bucketAgg: Filters;\n}\n\nexport const FiltersSettingsEditor = ({ bucketAgg }: Props) => {\n  const { current: baseId } = useRef(uniqueId('es-filters-'));\n\n  const upperStateDispatch = useDispatch();\n\n  const dispatch = useStatelessReducer(\n    (newValue) => upperStateDispatch(changeBucketAggregationSetting({ bucketAgg, settingName: 'filters', newValue })),\n    bucketAgg.settings?.filters,\n    filtersReducer\n  );\n\n  // The model might not have filters (or an empty array of filters) in it because of the way it was built in previous versions of the datasource.\n  // If this is the case we add a default one.\n  useEffect(() => {\n    if (!bucketAgg.settings?.filters?.length) {\n      dispatch(addFilter());\n    }\n  }, [dispatch, bucketAgg.settings?.filters?.length]);\n\n  return (\n    <>\n      <div\n        className={css`\n          display: flex;\n          flex-direction: column;\n        `}\n      >\n        {bucketAgg.settings?.filters!.map((filter, index) => (\n          <div\n            key={index}\n            className={css`\n              display: flex;\n            `}\n          >\n            <InlineField label=\"Query\" labelWidth={8}>\n              <div\n                className={css`\n                  width: 150px;\n                `}\n              >\n                <QueryField\n                  placeholder=\"Lucene Query\"\n                  portalOrigin=\"elasticsearch\"\n                  onChange={(query) => dispatch(changeFilter({ index, filter: { ...filter, query } }))}\n                  query={filter.query}\n                />\n              </div>\n            </InlineField>\n            <InlineField label=\"Label\" labelWidth={8}>\n              <Input\n                width={16}\n                id={`${baseId}-label-${index}`}\n                placeholder=\"Label\"\n                onBlur={(e) => dispatch(changeFilter({ index, filter: { ...filter, label: e.target.value } }))}\n                defaultValue={filter.label}\n              />\n            </InlineField>\n            <AddRemove\n              index={index}\n              elements={bucketAgg.settings?.filters || []}\n              onAdd={() => dispatch(addFilter())}\n              onRemove={() => dispatch(removeFilter(index))}\n            />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n","import { uniqueId } from 'lodash';\nimport React, { useRef } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, Select, Input } from '@grafana/ui';\n\nimport { useDispatch } from '../../../../hooks/useStatelessReducer';\nimport { MetricAggregation, Percentiles, ExtendedStatMetaType, ExtendedStats, Terms } from '../../../../types';\nimport { describeMetric } from '../../../../utils';\nimport { useCreatableSelectPersistedBehaviour } from '../../../hooks/useCreatableSelectPersistedBehaviour';\nimport { useQuery } from '../../ElasticsearchQueryContext';\nimport { isPipelineAggregation } from '../../MetricAggregationsEditor/aggregations';\nimport { changeBucketAggregationSetting } from '../state/actions';\nimport { bucketAggregationConfig, orderByOptions, orderOptions, sizeOptions } from '../utils';\n\nimport { inlineFieldProps } from '.';\n\ninterface Props {\n  bucketAgg: Terms;\n}\n\nexport const TermsSettingsEditor = ({ bucketAgg }: Props) => {\n  const { metrics } = useQuery();\n  const orderBy = createOrderByOptions(metrics);\n  const { current: baseId } = useRef(uniqueId('es-terms-'));\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <InlineField label=\"Order\" {...inlineFieldProps}>\n        <Select\n          inputId={`${baseId}-order`}\n          onChange={(e) =>\n            dispatch(changeBucketAggregationSetting({ bucketAgg, settingName: 'order', newValue: e.value }))\n          }\n          options={orderOptions}\n          value={bucketAgg.settings?.order || bucketAggregationConfig.terms.defaultSettings?.order}\n        />\n      </InlineField>\n\n      <InlineField label=\"Size\" {...inlineFieldProps}>\n        <Select\n          inputId={`${baseId}-size`}\n          // TODO: isValidNewOption should only allow numbers & template variables\n          {...useCreatableSelectPersistedBehaviour({\n            options: sizeOptions,\n            value: bucketAgg.settings?.size || bucketAggregationConfig.terms.defaultSettings?.size,\n            onChange({ value }) {\n              dispatch(changeBucketAggregationSetting({ bucketAgg, settingName: 'size', newValue: value }));\n            },\n          })}\n        />\n      </InlineField>\n\n      <InlineField label=\"Min Doc Count\" {...inlineFieldProps}>\n        <Input\n          id={`${baseId}-min_doc_count`}\n          onBlur={(e) =>\n            dispatch(\n              changeBucketAggregationSetting({ bucketAgg, settingName: 'min_doc_count', newValue: e.target.value })\n            )\n          }\n          defaultValue={\n            bucketAgg.settings?.min_doc_count || bucketAggregationConfig.terms.defaultSettings?.min_doc_count\n          }\n        />\n      </InlineField>\n\n      <InlineField label=\"Order By\" {...inlineFieldProps}>\n        <Select\n          inputId={`${baseId}-order_by`}\n          onChange={(e) =>\n            dispatch(changeBucketAggregationSetting({ bucketAgg, settingName: 'orderBy', newValue: e.value }))\n          }\n          options={orderBy}\n          value={bucketAgg.settings?.orderBy || bucketAggregationConfig.terms.defaultSettings?.orderBy}\n        />\n      </InlineField>\n\n      <InlineField label=\"Missing\" {...inlineFieldProps}>\n        <Input\n          id={`${baseId}-missing`}\n          onBlur={(e) =>\n            dispatch(changeBucketAggregationSetting({ bucketAgg, settingName: 'missing', newValue: e.target.value }))\n          }\n          defaultValue={bucketAgg.settings?.missing || bucketAggregationConfig.terms.defaultSettings?.missing}\n        />\n      </InlineField>\n    </>\n  );\n};\n\n/**\n * This returns the valid options for each of the enabled extended stat\n */\nfunction createOrderByOptionsForExtendedStats(metric: ExtendedStats): SelectableValue<string> {\n  if (!metric.meta) {\n    return [];\n  }\n  const metaKeys = Object.keys(metric.meta) as ExtendedStatMetaType[];\n  return metaKeys\n    .filter((key) => metric.meta?.[key])\n    .map((key) => {\n      let method: string = key;\n      // The bucket path for std_deviation_bounds.lower and std_deviation_bounds.upper\n      // is accessed via std_lower and std_upper, respectively.\n      if (key === 'std_deviation_bounds_lower') {\n        method = 'std_lower';\n      }\n      if (key === 'std_deviation_bounds_upper') {\n        method = 'std_upper';\n      }\n      return { label: `${describeMetric(metric)} (${method})`, value: `${metric.id}[${method}]` };\n    });\n}\n\n/**\n * This returns the valid options for each of the percents listed in the percentile settings\n */\nfunction createOrderByOptionsForPercentiles(metric: Percentiles): Array<SelectableValue<string>> {\n  if (!metric.settings?.percents) {\n    return [];\n  }\n  return metric.settings.percents.map((percent) => {\n    // The bucket path for percentile numbers is appended with a `.0` if the number is whole\n    // otherwise you have to use the actual value.\n    const percentString = /^\\d+\\.\\d+/.test(`${percent}`) ? percent : `${percent}.0`;\n    return { label: `${describeMetric(metric)} (${percent})`, value: `${metric.id}[${percentString}]` };\n  });\n}\n\nfunction isValidOrderTarget(metric: MetricAggregation) {\n  return (\n    // top metrics can't be used for ordering\n    metric.type !== 'top_metrics' &&\n    // pipeline aggregations can't be used for ordering: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation-order\n    !isPipelineAggregation(metric)\n  );\n}\n\n/**\n * This creates all the valid order by options based on the metrics\n */\nexport const createOrderByOptions = (metrics: MetricAggregation[] = []): Array<SelectableValue<string>> => {\n  const metricOptions = metrics.filter(isValidOrderTarget).flatMap((metric) => {\n    if (metric.type === 'extended_stats') {\n      return createOrderByOptionsForExtendedStats(metric);\n    } else if (metric.type === 'percentiles') {\n      return createOrderByOptionsForPercentiles(metric);\n    } else {\n      return { label: describeMetric(metric), value: metric.id };\n    }\n  });\n  return [...orderByOptions, ...metricOptions];\n};\n","import { defaultGeoHashPrecisionString } from '../../../../queryDef';\nimport { BucketAggregation } from '../../../../types';\nimport { describeMetric, convertOrderByToMetricId } from '../../../../utils';\nimport { useQuery } from '../../ElasticsearchQueryContext';\nimport { bucketAggregationConfig, orderByOptions, orderOptions } from '../utils';\n\nconst hasValue = (value: string) => (object: { value?: string }) => object.value === value;\n\n// FIXME: We should apply the same defaults we have in bucketAggregationsConfig here instead of \"custom\" values\n// as they might get out of sync.\n// The reason we need them is that even though after the refactoring each setting is created with its default value,\n// queries created with the old version might not have them.\nexport const useDescription = (bucketAgg: BucketAggregation): string => {\n  const { metrics } = useQuery();\n\n  switch (bucketAgg.type) {\n    case 'terms': {\n      const order = bucketAgg.settings?.order || 'desc';\n      const size = bucketAgg.settings?.size || '10';\n      const minDocCount = parseInt(bucketAgg.settings?.min_doc_count || '0', 10);\n      const orderBy = bucketAgg.settings?.orderBy || '_term';\n      let description = '';\n\n      if (size !== '0') {\n        const orderLabel = orderOptions.find(hasValue(order))?.label!;\n        description = `${orderLabel} ${size}, `;\n      }\n\n      if (minDocCount > 0) {\n        description += `Min Doc Count: ${minDocCount}, `;\n      }\n\n      description += 'Order by: ';\n      const orderByOption = orderByOptions.find(hasValue(orderBy));\n      if (orderByOption) {\n        description += orderByOption.label;\n      } else {\n        const metric = metrics?.find((m) => m.id === convertOrderByToMetricId(orderBy));\n        if (metric) {\n          description += describeMetric(metric);\n        } else {\n          description += 'metric not found';\n        }\n      }\n\n      if (size === '0') {\n        description += ` (${order})`;\n      }\n      return description;\n    }\n\n    case 'histogram': {\n      const interval = bucketAgg.settings?.interval || '1000';\n      const minDocCount = parseInt(bucketAgg.settings?.min_doc_count || '1', 10);\n\n      return `Interval: ${interval}${minDocCount > 0 ? `, Min Doc Count: ${minDocCount}` : ''}`;\n    }\n\n    case 'filters': {\n      const filters = bucketAgg.settings?.filters || bucketAggregationConfig['filters'].defaultSettings?.filters;\n      return `Filter Queries (${filters!.length})`;\n    }\n\n    case 'geohash_grid': {\n      const precision = parseInt(bucketAgg.settings?.precision || defaultGeoHashPrecisionString, 10);\n\n      return `Precision: ${precision}`;\n    }\n\n    case 'date_histogram': {\n      const interval = bucketAgg.settings?.interval || 'auto';\n      const minDocCount = parseInt(bucketAgg.settings?.min_doc_count || '0', 10);\n      const trimEdges = parseInt(bucketAgg.settings?.trimEdges || '0', 10);\n\n      let description = `Interval: ${interval}`;\n\n      if (minDocCount > 0) {\n        description += `, Min Doc Count: ${minDocCount}`;\n      }\n\n      if (trimEdges > 0) {\n        description += `, Trim edges: ${trimEdges}`;\n      }\n\n      return description;\n    }\n\n    default:\n      return 'Settings';\n  }\n};\n","import { uniqueId } from 'lodash';\nimport React, { ComponentProps, useRef } from 'react';\n\nimport { InlineField, Input } from '@grafana/ui';\n\nimport { useDispatch } from '../../../../hooks/useStatelessReducer';\nimport { BucketAggregation } from '../../../../types';\nimport { SettingsEditorContainer } from '../../SettingsEditorContainer';\nimport { changeBucketAggregationSetting } from '../state/actions';\nimport { bucketAggregationConfig } from '../utils';\n\nimport { DateHistogramSettingsEditor } from './DateHistogramSettingsEditor';\nimport { FiltersSettingsEditor } from './FiltersSettingsEditor';\nimport { TermsSettingsEditor } from './TermsSettingsEditor';\nimport { useDescription } from './useDescription';\n\nexport const inlineFieldProps: Partial<ComponentProps<typeof InlineField>> = {\n  labelWidth: 18,\n};\n\ninterface Props {\n  bucketAgg: BucketAggregation;\n}\n\nexport const SettingsEditor = ({ bucketAgg }: Props) => {\n  const { current: baseId } = useRef(uniqueId('es-setting-'));\n\n  const dispatch = useDispatch();\n\n  const settingsDescription = useDescription(bucketAgg);\n\n  return (\n    <SettingsEditorContainer label={settingsDescription}>\n      {bucketAgg.type === 'terms' && <TermsSettingsEditor bucketAgg={bucketAgg} />}\n      {bucketAgg.type === 'date_histogram' && <DateHistogramSettingsEditor bucketAgg={bucketAgg} />}\n      {bucketAgg.type === 'filters' && <FiltersSettingsEditor bucketAgg={bucketAgg} />}\n\n      {bucketAgg.type === 'geohash_grid' && (\n        <InlineField label=\"Precision\" {...inlineFieldProps}>\n          <Input\n            id={`${baseId}-geohash_grid-precision`}\n            onBlur={(e) =>\n              dispatch(\n                changeBucketAggregationSetting({ bucketAgg, settingName: 'precision', newValue: e.target.value })\n              )\n            }\n            defaultValue={\n              bucketAgg.settings?.precision || bucketAggregationConfig[bucketAgg.type].defaultSettings?.precision\n            }\n          />\n        </InlineField>\n      )}\n\n      {bucketAgg.type === 'histogram' && (\n        <>\n          <InlineField label=\"Interval\" {...inlineFieldProps}>\n            <Input\n              id={`${baseId}-histogram-interval`}\n              onBlur={(e) =>\n                dispatch(\n                  changeBucketAggregationSetting({ bucketAgg, settingName: 'interval', newValue: e.target.value })\n                )\n              }\n              defaultValue={\n                bucketAgg.settings?.interval || bucketAggregationConfig[bucketAgg.type].defaultSettings?.interval\n              }\n            />\n          </InlineField>\n\n          <InlineField label=\"Min Doc Count\" {...inlineFieldProps}>\n            <Input\n              id={`${baseId}-histogram-min_doc_count`}\n              onBlur={(e) =>\n                dispatch(\n                  changeBucketAggregationSetting({ bucketAgg, settingName: 'min_doc_count', newValue: e.target.value })\n                )\n              }\n              defaultValue={\n                bucketAgg.settings?.min_doc_count ||\n                bucketAggregationConfig[bucketAgg.type].defaultSettings?.min_doc_count\n              }\n            />\n          </InlineField>\n        </>\n      )}\n    </SettingsEditorContainer>\n  );\n};\n","import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineSegmentGroup, Segment, SegmentAsync } from '@grafana/ui';\n\nimport { useFields } from '../../../hooks/useFields';\nimport { useDispatch } from '../../../hooks/useStatelessReducer';\nimport { segmentStyles } from '../styles';\n\nimport { BucketAggregation, BucketAggregationType } from './../../../types';\nimport { SettingsEditor } from './SettingsEditor';\nimport { isBucketAggregationWithField } from './aggregations';\nimport { changeBucketAggregationField, changeBucketAggregationType } from './state/actions';\nimport { bucketAggregationConfig } from './utils';\n\nconst bucketAggOptions: Array<SelectableValue<BucketAggregationType>> = Object.entries(bucketAggregationConfig).map(\n  ([key, { label }]) => ({\n    label,\n    value: key as BucketAggregationType,\n  })\n);\n\nconst toOption = (bucketAgg: BucketAggregation) => ({\n  label: bucketAggregationConfig[bucketAgg.type].label,\n  value: bucketAgg.type,\n});\n\ninterface QueryMetricEditorProps {\n  value: BucketAggregation;\n}\n\nexport const BucketAggregationEditor = ({ value }: QueryMetricEditorProps) => {\n  const dispatch = useDispatch();\n  const getFields = useFields(value.type);\n\n  return (\n    <>\n      <InlineSegmentGroup>\n        <Segment\n          className={segmentStyles}\n          options={bucketAggOptions}\n          onChange={(e) => dispatch(changeBucketAggregationType({ id: value.id, newType: e.value! }))}\n          value={toOption(value)}\n        />\n\n        {isBucketAggregationWithField(value) && (\n          <SegmentAsync\n            className={segmentStyles}\n            loadOptions={getFields}\n            onChange={(e) => dispatch(changeBucketAggregationField({ id: value.id, newField: e.value }))}\n            placeholder=\"Select Field\"\n            value={value.field}\n          />\n        )}\n      </InlineSegmentGroup>\n\n      <SettingsEditor bucketAgg={value} />\n    </>\n  );\n};\n","import React from 'react';\n\nimport { Button } from '@grafana/ui';\n\nimport { useDispatch } from '../../../hooks/useStatelessReducer';\nimport { useQuery } from '../ElasticsearchQueryContext';\nimport { QueryEditorRow } from '../QueryEditorRow';\n\nimport { BucketAggregation } from './../../../types';\nimport { BucketAggregationEditor } from './BucketAggregationEditor';\nimport { addBucketAggregation, removeBucketAggregation } from './state/actions';\n\ninterface Props {\n  nextId: BucketAggregation['id'];\n}\n\nexport const BucketAggregationsEditor = ({ nextId }: Props) => {\n  const dispatch = useDispatch();\n  const { bucketAggs } = useQuery();\n  const totalBucketAggs = bucketAggs?.length || 0;\n\n  return (\n    <>\n      {bucketAggs!.map((bucketAgg, index) => (\n        <QueryEditorRow\n          key={`${bucketAgg.type}-${bucketAgg.id}`}\n          label={index === 0 ? 'Group By' : 'Then By'}\n          onRemoveClick={totalBucketAggs > 1 && (() => dispatch(removeBucketAggregation(bucketAgg.id)))}\n        >\n          <BucketAggregationEditor value={bucketAgg} />\n\n          {index === 0 && (\n            <Button\n              variant=\"secondary\"\n              fill=\"text\"\n              icon=\"plus\"\n              onClick={() => dispatch(addBucketAggregation(nextId))}\n              tooltip=\"Add grouping condition\"\n              aria-label=\"Add grouping condition\"\n            />\n          )}\n        </QueryEditorRow>\n      ))}\n    </>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Segment } from '@grafana/ui';\n\nimport { MetricAggregation } from '../types';\nimport { describeMetric } from '../utils';\n\nconst noWrap = css`\n  white-space: nowrap;\n`;\n\nconst toOption = (metric: MetricAggregation) => ({\n  label: describeMetric(metric),\n  value: metric,\n});\n\nconst toOptions = (metrics: MetricAggregation[]): Array<SelectableValue<MetricAggregation>> => metrics.map(toOption);\n\ninterface Props {\n  options: MetricAggregation[];\n  onChange: (e: SelectableValue<MetricAggregation>) => void;\n  className?: string;\n  value?: string;\n}\n\nexport const MetricPicker = ({ options, onChange, className, value }: Props) => {\n  const selectedOption = options.find((option) => option.id === value);\n\n  return (\n    <Segment\n      className={cx(className, noWrap)}\n      options={toOptions(options)}\n      onChange={onChange}\n      placeholder=\"Select Metric\"\n      value={!!selectedOption ? toOption(selectedOption) : undefined}\n    />\n  );\n};\n","import { uniqueId } from 'lodash';\nimport React, { ComponentProps, useState } from 'react';\n\nimport { InlineField, Input } from '@grafana/ui';\n\nimport { useDispatch } from '../../../../hooks/useStatelessReducer';\nimport { MetricAggregationWithInlineScript, MetricAggregationWithSettings } from '../../../../types';\nimport { getScriptValue } from '../../../../utils';\nimport { SettingKeyOf } from '../../../types';\nimport { changeMetricSetting } from '../state/actions';\n\ninterface Props<T extends MetricAggregationWithSettings, K extends SettingKeyOf<T>> {\n  label: string;\n  settingName: K;\n  metric: T;\n  placeholder?: ComponentProps<typeof Input>['placeholder'];\n  tooltip?: ComponentProps<typeof InlineField>['tooltip'];\n}\n\nexport function SettingField<T extends MetricAggregationWithSettings, K extends SettingKeyOf<T>>({\n  label,\n  settingName,\n  metric,\n  placeholder,\n  tooltip,\n}: Props<T, K>) {\n  const dispatch = useDispatch();\n  const [id] = useState(uniqueId(`es-field-id-`));\n  const settings = metric.settings;\n\n  let defaultValue = settings?.[settingName as keyof typeof settings] || '';\n\n  if (settingName === 'script') {\n    defaultValue = getScriptValue(metric as MetricAggregationWithInlineScript);\n  }\n\n  return (\n    <InlineField label={label} labelWidth={16} tooltip={tooltip}>\n      <Input\n        id={id}\n        placeholder={placeholder}\n        onBlur={(e) => dispatch(changeMetricSetting({ metric, settingName, newValue: e.target.value }))}\n        defaultValue={defaultValue}\n      />\n    </InlineField>\n  );\n}\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addPipelineVariable = createAction('@pipelineVariables/add');\nexport const removePipelineVariable = createAction<number>('@pipelineVariables/remove');\n\nexport const renamePipelineVariable = createAction<{ index: number; newName: string }>('@pipelineVariables/rename');\n\nexport const changePipelineVariableMetric = createAction<{ index: number; newMetric: string }>(\n  '@pipelineVariables/change_metric'\n);\n","import { Action } from '@reduxjs/toolkit';\n\nimport { PipelineVariable } from '../../../../../../types';\nimport { defaultPipelineVariable, generatePipelineVariableName } from '../utils';\n\nimport {\n  addPipelineVariable,\n  changePipelineVariableMetric,\n  removePipelineVariable,\n  renamePipelineVariable,\n} from './actions';\n\nexport const reducer = (state: PipelineVariable[] = [], action: Action) => {\n  if (addPipelineVariable.match(action)) {\n    return [...state, defaultPipelineVariable(generatePipelineVariableName(state))];\n  }\n\n  if (removePipelineVariable.match(action)) {\n    return state.slice(0, action.payload).concat(state.slice(action.payload + 1));\n  }\n\n  if (renamePipelineVariable.match(action)) {\n    return state.map((pipelineVariable, index) => {\n      if (index !== action.payload.index) {\n        return pipelineVariable;\n      }\n\n      return {\n        ...pipelineVariable,\n        name: action.payload.newName,\n      };\n    });\n  }\n\n  if (changePipelineVariableMetric.match(action)) {\n    return state.map((pipelineVariable, index) => {\n      if (index !== action.payload.index) {\n        return pipelineVariable;\n      }\n\n      return {\n        ...pipelineVariable,\n        pipelineAgg: action.payload.newMetric,\n      };\n    });\n  }\n\n  return state;\n};\n","import { css } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { Fragment, useEffect } from 'react';\n\nimport { Input, InlineLabel } from '@grafana/ui';\n\nimport { useStatelessReducer, useDispatch } from '../../../../../hooks/useStatelessReducer';\nimport { BucketScript, MetricAggregation } from '../../../../../types';\nimport { AddRemove } from '../../../../AddRemove';\nimport { MetricPicker } from '../../../../MetricPicker';\nimport { changeMetricAttribute } from '../../state/actions';\nimport { SettingField } from '../SettingField';\n\nimport {\n  addPipelineVariable,\n  removePipelineVariable,\n  renamePipelineVariable,\n  changePipelineVariableMetric,\n} from './state/actions';\nimport { reducer } from './state/reducer';\n\ninterface Props {\n  value: BucketScript;\n  previousMetrics: MetricAggregation[];\n}\n\nexport const BucketScriptSettingsEditor = ({ value, previousMetrics }: Props) => {\n  const upperStateDispatch = useDispatch();\n\n  const dispatch = useStatelessReducer(\n    (newValue) =>\n      upperStateDispatch(changeMetricAttribute({ metric: value, attribute: 'pipelineVariables', newValue })),\n    value.pipelineVariables,\n    reducer\n  );\n\n  // The model might not have pipeline variables (or an empty array of pipeline vars) in it because of the way it was built in previous versions of the datasource.\n  // If this is the case we add a default one.\n  useEffect(() => {\n    if (!value.pipelineVariables?.length) {\n      dispatch(addPipelineVariable());\n    }\n  }, [dispatch, value.pipelineVariables?.length]);\n\n  return (\n    <>\n      <div\n        className={css`\n          display: flex;\n        `}\n      >\n        <InlineLabel width={16}>Variables</InlineLabel>\n        <div\n          className={css`\n            display: grid;\n            grid-template-columns: 1fr auto;\n            row-gap: 4px;\n            margin-bottom: 4px;\n          `}\n        >\n          {value.pipelineVariables!.map((pipelineVar, index) => (\n            // index as a key doesn't work here since removing an element\n            // in the middle of the list, will cause the next element to obtain the same key as the removed one.\n            // this will cause react to \"drop\" the last element of the list instead of the just removed one,\n            // and the default value for the input won't match the model as the DOM won't get updated.\n            // using pipelineVar.name is not an option since it might be duplicated by the user.\n            // generating a unique key on every render, while is probably not the best solution in terms of performance\n            // ensures the UI is in a correct state. We might want to optimize this if we see perf issue in the future.\n            <Fragment key={uniqueId('es-bs-')}>\n              <div\n                className={css`\n                  display: grid;\n                  column-gap: 4px;\n                  grid-template-columns: auto auto;\n                `}\n              >\n                <Input\n                  aria-label=\"Variable name\"\n                  defaultValue={pipelineVar.name}\n                  placeholder=\"Variable Name\"\n                  onBlur={(e) => dispatch(renamePipelineVariable({ newName: e.target.value, index }))}\n                />\n                <MetricPicker\n                  onChange={(e) => dispatch(changePipelineVariableMetric({ newMetric: e.value!.id, index }))}\n                  options={previousMetrics}\n                  value={pipelineVar.pipelineAgg}\n                />\n              </div>\n\n              <AddRemove\n                index={index}\n                elements={value.pipelineVariables || []}\n                onAdd={() => dispatch(addPipelineVariable())}\n                onRemove={() => dispatch(removePipelineVariable(index))}\n              />\n            </Fragment>\n          ))}\n        </div>\n      </div>\n\n      <SettingField\n        label=\"Script\"\n        metric={value}\n        settingName=\"script\"\n        tooltip=\"Elasticsearch v5.0 and above: Scripting language is Painless. Use params.<var> to reference a variable. Elasticsearch pre-v5.0: Scripting language is per default Groovy if not changed. For Groovy use <var> to reference a variable.\"\n        placeholder=\"params.var1 / params.var2\"\n      />\n    </>\n  );\n};\n","import { uniqueId } from 'lodash';\nimport React, { useRef } from 'react';\n\nimport { Input, InlineField, Select, InlineSwitch } from '@grafana/ui';\n\nimport { useDispatch } from '../../../../hooks/useStatelessReducer';\nimport { movingAvgModelOptions } from '../../../../queryDef';\nimport { MovingAverage } from '../../../../types';\nimport { isEWMAMovingAverage, isHoltMovingAverage, isHoltWintersMovingAverage } from '../aggregations';\nimport { changeMetricSetting } from '../state/actions';\n\nimport { SettingField } from './SettingField';\n\ninterface Props {\n  metric: MovingAverage;\n}\n\n// The way we handle changes for those settings is not ideal compared to the other components in the editor\n// FIXME: using `changeMetricSetting` will cause an error when switching from models that have different options\n// as they might be incompatible. We should clear all other options on model change.\nexport const MovingAverageSettingsEditor = ({ metric }: Props) => {\n  const dispatch = useDispatch();\n  const { current: baseId } = useRef(uniqueId('es-moving-avg-'));\n\n  return (\n    <>\n      <InlineField label=\"Model\" labelWidth={16}>\n        <Select\n          inputId={`${baseId}-model`}\n          onChange={(value) => dispatch(changeMetricSetting({ metric, settingName: 'model', newValue: value.value }))}\n          options={movingAvgModelOptions}\n          value={metric.settings?.model}\n        />\n      </InlineField>\n\n      <SettingField label=\"Window\" settingName=\"window\" metric={metric} placeholder=\"5\" />\n\n      <SettingField label=\"Predict\" settingName=\"predict\" metric={metric} />\n\n      {(isEWMAMovingAverage(metric) || isHoltMovingAverage(metric) || isHoltWintersMovingAverage(metric)) && (\n        <InlineField label=\"Alpha\" labelWidth={16}>\n          <Input\n            id={`${baseId}-alpha`}\n            onBlur={(e) =>\n              dispatch(\n                changeMetricSetting({\n                  metric,\n                  settingName: 'settings',\n                  newValue: {\n                    ...metric.settings?.settings,\n                    alpha: e.target.value,\n                  },\n                })\n              )\n            }\n            defaultValue={metric.settings?.settings?.alpha}\n          />\n        </InlineField>\n      )}\n\n      {(isHoltMovingAverage(metric) || isHoltWintersMovingAverage(metric)) && (\n        <InlineField label=\"Beta\" labelWidth={16}>\n          <Input\n            id={`${baseId}-beta`}\n            onBlur={(e) =>\n              dispatch(\n                changeMetricSetting({\n                  metric,\n                  settingName: 'settings',\n                  newValue: {\n                    ...metric.settings?.settings,\n                    beta: e.target.value,\n                  },\n                })\n              )\n            }\n            defaultValue={metric.settings?.settings?.beta}\n          />\n        </InlineField>\n      )}\n\n      {isHoltWintersMovingAverage(metric) && (\n        <>\n          <InlineField label=\"Gamma\" labelWidth={16}>\n            <Input\n              id={`${baseId}-gamma`}\n              onBlur={(e) =>\n                dispatch(\n                  changeMetricSetting({\n                    metric,\n                    settingName: 'settings',\n                    newValue: {\n                      ...metric.settings?.settings,\n                      gamma: e.target.value,\n                    },\n                  })\n                )\n              }\n              defaultValue={metric.settings?.settings?.gamma}\n            />\n          </InlineField>\n          <InlineField label=\"Period\" labelWidth={16}>\n            <Input\n              id={`${baseId}-period`}\n              onBlur={(e) =>\n                dispatch(\n                  changeMetricSetting({\n                    metric,\n                    settingName: 'settings',\n                    newValue: {\n                      ...metric.settings?.settings,\n                      period: e.target.value!,\n                    },\n                  })\n                )\n              }\n              defaultValue={metric.settings?.settings?.period}\n            />\n          </InlineField>\n\n          <InlineField label=\"Pad\" labelWidth={16}>\n            <InlineSwitch\n              id={`${baseId}-pad`}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                dispatch(\n                  changeMetricSetting({\n                    metric,\n                    settingName: 'settings',\n                    newValue: { ...metric.settings?.settings, pad: e.target.checked },\n                  })\n                )\n              }\n              checked={!!metric.settings?.settings?.pad}\n            />\n          </InlineField>\n        </>\n      )}\n\n      {(isEWMAMovingAverage(metric) || isHoltMovingAverage(metric) || isHoltWintersMovingAverage(metric)) && (\n        <InlineField label=\"Minimize\" labelWidth={16}>\n          <InlineSwitch\n            id={`${baseId}-minimize`}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              dispatch(changeMetricSetting({ metric, settingName: 'minimize', newValue: e.target.checked }))\n            }\n            checked={!!metric.settings?.minimize}\n          />\n        </InlineField>\n      )}\n    </>\n  );\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { AsyncMultiSelect, InlineField, SegmentAsync, Select } from '@grafana/ui';\n\nimport { useFields } from '../../../../hooks/useFields';\nimport { useDispatch } from '../../../../hooks/useStatelessReducer';\nimport { TopMetrics } from '../../../../types';\nimport { orderOptions } from '../../BucketAggregationsEditor/utils';\nimport { changeMetricSetting } from '../state/actions';\n\ninterface Props {\n  metric: TopMetrics;\n}\n\nconst toMultiSelectValue = (value: string): SelectableValue<string> => ({ value, label: value });\n\nexport const TopMetricsSettingsEditor = ({ metric }: Props) => {\n  const dispatch = useDispatch();\n  const getOrderByOptions = useFields(['number', 'date']);\n  const getMetricsOptions = useFields(metric.type);\n\n  return (\n    <>\n      <InlineField label=\"Metrics\" labelWidth={16}>\n        <AsyncMultiSelect\n          onChange={(e) =>\n            dispatch(\n              changeMetricSetting({\n                metric,\n                settingName: 'metrics',\n                newValue: e.map((v) => v.value!),\n              })\n            )\n          }\n          loadOptions={getMetricsOptions}\n          value={metric.settings?.metrics?.map(toMultiSelectValue)}\n          closeMenuOnSelect={false}\n          defaultOptions\n        />\n      </InlineField>\n      <InlineField label=\"Order\" labelWidth={16}>\n        <Select\n          onChange={(e) => dispatch(changeMetricSetting({ metric, settingName: 'order', newValue: e.value }))}\n          options={orderOptions}\n          value={metric.settings?.order}\n        />\n      </InlineField>\n      <InlineField\n        label=\"Order By\"\n        labelWidth={16}\n        className={css`\n          & > div {\n            width: 100%;\n          }\n        `}\n      >\n        <SegmentAsync\n          className={css`\n            margin-right: 0;\n          `}\n          loadOptions={getOrderByOptions}\n          onChange={(e) => dispatch(changeMetricSetting({ metric, settingName: 'orderBy', newValue: e.value }))}\n          placeholder=\"Select Field\"\n          value={metric.settings?.orderBy}\n        />\n      </InlineField>\n    </>\n  );\n};\n","import { extendedStats } from '../../../../queryDef';\nimport { MetricAggregation } from '../../../../types';\n\nconst hasValue = (value: string) => (object: { value: string }) => object.value === value;\n\n// FIXME: All the defaults and validations down here should be defined somewhere else\n// as they are also the defaults that are gonna be applied to the query.\n// In the previous version, the same method was taking care of describing the settings and setting defaults.\nexport const useDescription = (metric: MetricAggregation): string => {\n  switch (metric.type) {\n    case 'cardinality': {\n      const precisionThreshold = metric.settings?.precision_threshold || '';\n      return `Precision threshold: ${precisionThreshold}`;\n    }\n\n    case 'percentiles':\n      if (metric.settings?.percents && metric.settings?.percents?.length >= 1) {\n        return `Values: ${metric.settings?.percents}`;\n      }\n\n      return 'Percents: Default';\n\n    case 'extended_stats': {\n      const selectedStats = Object.entries(metric.meta || {})\n        .map(([key, value]) => value && extendedStats.find(hasValue(key))?.label)\n        .filter(Boolean);\n\n      return `Stats: ${selectedStats.length > 0 ? selectedStats.join(', ') : 'None selected'}`;\n    }\n\n    case 'raw_document':\n    case 'raw_data': {\n      const size = metric.settings?.size || 500;\n      return `Size: ${size}`;\n    }\n\n    default:\n      return 'Options';\n  }\n};\n","import { uniqueId } from 'lodash';\nimport React, { ComponentProps, useId, useRef, useState } from 'react';\n\nimport { InlineField, Input, InlineSwitch, Select } from '@grafana/ui';\n\nimport { useDispatch } from '../../../../hooks/useStatelessReducer';\nimport { extendedStats } from '../../../../queryDef';\nimport { MetricAggregation, ExtendedStat } from '../../../../types';\nimport { SettingsEditorContainer } from '../../SettingsEditorContainer';\nimport { isMetricAggregationWithInlineScript, isMetricAggregationWithMissingSupport } from '../aggregations';\nimport { changeMetricMeta, changeMetricSetting } from '../state/actions';\nimport { metricAggregationConfig } from '../utils';\n\nimport { BucketScriptSettingsEditor } from './BucketScriptSettingsEditor';\nimport { MovingAverageSettingsEditor } from './MovingAverageSettingsEditor';\nimport { SettingField } from './SettingField';\nimport { TopMetricsSettingsEditor } from './TopMetricsSettingsEditor';\nimport { useDescription } from './useDescription';\n\n// TODO: Move this somewhere and share it with BucketsAggregation Editor\nconst inlineFieldProps: Partial<ComponentProps<typeof InlineField>> = {\n  labelWidth: 16,\n};\n\ninterface Props {\n  metric: MetricAggregation;\n  previousMetrics: MetricAggregation[];\n}\n\nexport const SettingsEditor = ({ metric, previousMetrics }: Props) => {\n  const { current: baseId } = useRef(uniqueId('es-setting-'));\n\n  const dispatch = useDispatch();\n  const description = useDescription(metric);\n\n  const sizeFieldId = useId();\n  const unitFieldId = useId();\n  const modeFieldId = useId();\n\n  const rateAggUnitOptions = [\n    { value: 'second', label: 'Second' },\n    { value: 'minute', label: 'Minute' },\n    { value: 'hour', label: 'Hour' },\n    { value: 'day', label: 'Day' },\n    { value: 'week', label: 'Week' },\n    { value: 'month', label: 'Month' },\n    { value: 'quarter', label: 'Quarter' },\n    { value: 'Year', label: 'Year' },\n  ];\n\n  const rateAggModeOptions = [\n    { value: 'sum', label: 'Sum' },\n    { value: 'value_count', label: 'Value count' },\n  ];\n\n  return (\n    <SettingsEditorContainer label={description} hidden={metric.hide}>\n      {metric.type === 'derivative' && <SettingField label=\"Unit\" metric={metric} settingName=\"unit\" />}\n\n      {metric.type === 'serial_diff' && <SettingField label=\"Lag\" metric={metric} settingName=\"lag\" placeholder=\"1\" />}\n\n      {metric.type === 'cumulative_sum' && <SettingField label=\"Format\" metric={metric} settingName=\"format\" />}\n\n      {metric.type === 'moving_avg' && <MovingAverageSettingsEditor metric={metric} />}\n\n      {metric.type === 'moving_fn' && (\n        <>\n          <SettingField label=\"Window\" metric={metric} settingName=\"window\" />\n          <SettingField label=\"Script\" metric={metric} settingName=\"script\" />\n          <SettingField label=\"Shift\" metric={metric} settingName=\"shift\" />\n        </>\n      )}\n\n      {metric.type === 'top_metrics' && <TopMetricsSettingsEditor metric={metric} />}\n\n      {metric.type === 'bucket_script' && (\n        <BucketScriptSettingsEditor value={metric} previousMetrics={previousMetrics} />\n      )}\n\n      {(metric.type === 'raw_data' || metric.type === 'raw_document') && (\n        <InlineField label=\"Size\" {...inlineFieldProps} htmlFor={sizeFieldId}>\n          <Input\n            id={sizeFieldId}\n            onBlur={(e) => dispatch(changeMetricSetting({ metric, settingName: 'size', newValue: e.target.value }))}\n            defaultValue={metric.settings?.size ?? metricAggregationConfig['raw_data'].defaults.settings?.size}\n          />\n        </InlineField>\n      )}\n\n      {metric.type === 'logs' && <SettingField label=\"Limit\" metric={metric} settingName=\"limit\" placeholder=\"500\" />}\n\n      {metric.type === 'cardinality' && (\n        <SettingField label=\"Precision Threshold\" metric={metric} settingName=\"precision_threshold\" />\n      )}\n\n      {metric.type === 'extended_stats' && (\n        <>\n          {extendedStats.map((stat) => (\n            <ExtendedStatSetting\n              key={stat.value}\n              stat={stat}\n              onChange={(newValue) => dispatch(changeMetricMeta({ metric, meta: stat.value, newValue }))}\n              value={\n                metric.meta?.[stat.value] !== undefined\n                  ? !!metric.meta?.[stat.value]\n                  : !!metricAggregationConfig['extended_stats'].defaults.meta?.[stat.value]\n              }\n            />\n          ))}\n\n          <SettingField label=\"Sigma\" metric={metric} settingName=\"sigma\" placeholder=\"3\" />\n        </>\n      )}\n\n      {metric.type === 'percentiles' && (\n        <InlineField label=\"Percentiles\" {...inlineFieldProps}>\n          <Input\n            id={`${baseId}-percentiles-percents`}\n            onBlur={(e) =>\n              dispatch(\n                changeMetricSetting({\n                  metric,\n                  settingName: 'percents',\n                  newValue: e.target.value.split(',').filter(Boolean),\n                })\n              )\n            }\n            defaultValue={\n              metric.settings?.percents || metricAggregationConfig['percentiles'].defaults.settings?.percents\n            }\n            placeholder=\"1,5,25,50,75,95,99\"\n          />\n        </InlineField>\n      )}\n\n      {metric.type === 'rate' && (\n        <>\n          <InlineField label=\"Unit\" {...inlineFieldProps} data-testid=\"unit-select\" htmlFor={unitFieldId}>\n            <Select\n              id={unitFieldId}\n              onChange={(e) => dispatch(changeMetricSetting({ metric, settingName: 'unit', newValue: e.value }))}\n              options={rateAggUnitOptions}\n              value={metric.settings?.unit}\n            />\n          </InlineField>\n\n          <InlineField label=\"Mode\" {...inlineFieldProps} data-testid=\"mode-select\" htmlFor={modeFieldId}>\n            <Select\n              id={modeFieldId}\n              onChange={(e) => dispatch(changeMetricSetting({ metric, settingName: 'mode', newValue: e.value }))}\n              options={rateAggModeOptions}\n              value={metric.settings?.unit}\n            />\n          </InlineField>\n        </>\n      )}\n\n      {isMetricAggregationWithInlineScript(metric) && (\n        <SettingField label=\"Script\" metric={metric} settingName=\"script\" placeholder=\"_value * 1\" />\n      )}\n\n      {isMetricAggregationWithMissingSupport(metric) && (\n        <SettingField\n          label=\"Missing\"\n          metric={metric}\n          settingName=\"missing\"\n          tooltip=\"The missing parameter defines how documents that are missing a value should be treated. By default\n            they will be ignored but it is also possible to treat them as if they had a value\"\n        />\n      )}\n    </SettingsEditorContainer>\n  );\n};\n\ninterface ExtendedStatSettingProps {\n  stat: ExtendedStat;\n  onChange: (checked: boolean) => void;\n  value: boolean;\n}\nconst ExtendedStatSetting = ({ stat, onChange, value }: ExtendedStatSettingProps) => {\n  // this is needed for the htmlFor prop in the label so that clicking the label will toggle the switch state.\n  const [id] = useState(uniqueId(`es-field-id-`));\n\n  return (\n    <InlineField label={stat.label} {...inlineFieldProps} key={stat.value}>\n      <InlineSwitch\n        id={id}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => onChange(e.target.checked)}\n        value={value}\n      />\n    </InlineField>\n  );\n};\n","import React from 'react';\n\nimport { InlineFieldRow, InlineLabel, InlineSegmentGroup } from '@grafana/ui';\n\nimport { MetricAggregation } from '../../types';\n\nimport { SettingsEditor } from './MetricAggregationsEditor/SettingsEditor';\n\ntype Props = {\n  name: string;\n  metric: MetricAggregation;\n};\n\nexport const QueryEditorSpecialMetricRow = ({ name, metric }: Props) => {\n  // this widget is only used in scenarios when there is only a single\n  // metric, so the array of \"previousMetrics\" (meaning all the metrics\n  // before the current metric), is an ampty-array\n  const previousMetrics: MetricAggregation[] = [];\n\n  return (\n    <InlineFieldRow>\n      <InlineSegmentGroup>\n        <InlineLabel width={17} as=\"div\">\n          <span>{name}</span>\n        </InlineLabel>\n      </InlineSegmentGroup>\n      <SettingsEditor metric={metric} previousMetrics={previousMetrics} />\n    </InlineFieldRow>\n  );\n};\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const getStyles = (theme: GrafanaTheme2, hidden: boolean) => {\n  return {\n    color:\n      hidden &&\n      css`\n        &,\n        &:hover,\n        label,\n        a {\n          color: ${hidden ? theme.colors.text.disabled : theme.colors.text.primary};\n        }\n      `,\n  };\n};\n","import { cx } from '@emotion/css';\nimport React, { useCallback } from 'react';\nimport { satisfies, SemVer } from 'semver';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineSegmentGroup, SegmentAsync, useTheme2 } from '@grafana/ui';\n\nimport { useFields } from '../../../hooks/useFields';\nimport { useDispatch } from '../../../hooks/useStatelessReducer';\nimport { MetricAggregation, MetricAggregationType } from '../../../types';\nimport { MetricPicker } from '../../MetricPicker';\nimport { useDatasource, useQuery } from '../ElasticsearchQueryContext';\nimport { segmentStyles } from '../styles';\n\nimport { SettingsEditor } from './SettingsEditor';\nimport {\n  isMetricAggregationWithField,\n  isMetricAggregationWithInlineScript,\n  isMetricAggregationWithSettings,\n  isPipelineAggregation,\n  isPipelineAggregationWithMultipleBucketPaths,\n} from './aggregations';\nimport { changeMetricField, changeMetricType } from './state/actions';\nimport { getStyles } from './styles';\nimport { metricAggregationConfig } from './utils';\n\nconst toOption = (metric: MetricAggregation) => ({\n  label: metricAggregationConfig[metric.type].label,\n  value: metric.type,\n});\n\ninterface Props {\n  value: MetricAggregation;\n}\n\n// If a metric is a Pipeline Aggregation (https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline.html)\n// it doesn't make sense to show it in the type picker when there is no non-pipeline-aggregation previously selected\n// as they work on the outputs produced from other aggregations rather than from documents or fields.\n// This means we should filter them out from the type picker if there's no other \"basic\" aggregation before the current one.\nconst isBasicAggregation = (metric: MetricAggregation) => !metricAggregationConfig[metric.type].isPipelineAgg;\n\nconst getTypeOptions = (\n  previousMetrics: MetricAggregation[],\n  esVersion: SemVer | null\n): Array<SelectableValue<MetricAggregationType>> => {\n  // we'll include Pipeline Aggregations only if at least one previous metric is a \"Basic\" one\n  const includePipelineAggregations = previousMetrics.some(isBasicAggregation);\n\n  return (\n    Object.entries(metricAggregationConfig)\n      .filter(([_, config]) => config.impliedQueryType === 'metrics')\n      // Only showing metrics type supported by the version of ES.\n      // if we cannot determine the version, we assume it is suitable.\n      .filter(([_, { versionRange = '*' }]) => (esVersion != null ? satisfies(esVersion, versionRange) : true))\n      // Filtering out Pipeline Aggregations if there's no basic metric selected before\n      .filter(([_, config]) => includePipelineAggregations || !config.isPipelineAgg)\n      .map(([key, { label }]) => ({\n        label,\n        value: key as MetricAggregationType,\n      }))\n  );\n};\n\nexport const MetricEditor = ({ value }: Props) => {\n  const styles = getStyles(useTheme2(), !!value.hide);\n  const datasource = useDatasource();\n  const query = useQuery();\n  const dispatch = useDispatch();\n  const getFields = useFields(value.type);\n\n  const getTypeOptionsAsync = async (previousMetrics: MetricAggregation[]) => {\n    const dbVersion = await datasource.getDatabaseVersion();\n    return getTypeOptions(previousMetrics, dbVersion);\n  };\n\n  const loadOptions = useCallback(async () => {\n    const remoteFields = await getFields();\n\n    // Metric aggregations that have inline script support don't require a field to be set.\n    if (isMetricAggregationWithInlineScript(value)) {\n      return [{ label: 'None' }, ...remoteFields];\n    }\n\n    return remoteFields;\n  }, [getFields, value]);\n\n  const previousMetrics = query.metrics!.slice(\n    0,\n    query.metrics!.findIndex((m) => m.id === value.id)\n  );\n\n  return (\n    <>\n      <InlineSegmentGroup>\n        <SegmentAsync\n          className={cx(styles.color, segmentStyles)}\n          loadOptions={() => getTypeOptionsAsync(previousMetrics)}\n          onChange={(e) => dispatch(changeMetricType({ id: value.id, type: e.value! }))}\n          value={toOption(value)}\n        />\n\n        {isMetricAggregationWithField(value) && !isPipelineAggregation(value) && (\n          <SegmentAsync\n            className={cx(styles.color, segmentStyles)}\n            loadOptions={loadOptions}\n            onChange={(e) => dispatch(changeMetricField({ id: value.id, field: e.value! }))}\n            placeholder=\"Select Field\"\n            value={value.field}\n          />\n        )}\n\n        {isPipelineAggregation(value) && !isPipelineAggregationWithMultipleBucketPaths(value) && (\n          <MetricPicker\n            className={cx(styles.color, segmentStyles)}\n            onChange={(e) => dispatch(changeMetricField({ id: value.id, field: e.value?.id! }))}\n            options={previousMetrics}\n            value={value.field}\n          />\n        )}\n      </InlineSegmentGroup>\n\n      {isMetricAggregationWithSettings(value) && <SettingsEditor metric={value} previousMetrics={previousMetrics} />}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { Alert, Button } from '@grafana/ui';\n\nimport { useDispatch } from '../../../hooks/useStatelessReducer';\nimport { useQuery } from '../ElasticsearchQueryContext';\nimport { QueryEditorRow } from '../QueryEditorRow';\nimport { QueryEditorSpecialMetricRow } from '../QueryEditorSpecialMetricRow';\n\nimport { MetricAggregation } from './../../../types';\nimport { MetricEditor } from './MetricEditor';\nimport { addMetric, removeMetric, toggleMetricVisibility } from './state/actions';\nimport { metricAggregationConfig } from './utils';\n\ninterface Props {\n  nextId: MetricAggregation['id'];\n}\n\nexport const MetricAggregationsEditor = ({ nextId }: Props) => {\n  const dispatch = useDispatch();\n  const { metrics } = useQuery();\n  const totalMetrics = metrics?.length || 0;\n\n  return (\n    <>\n      {metrics?.map((metric, index) => {\n        switch (metric.type) {\n          case 'logs':\n            return <QueryEditorSpecialMetricRow key={`${metric.type}-${metric.id}`} name=\"Logs\" metric={metric} />;\n          case 'raw_data':\n            return <QueryEditorSpecialMetricRow key={`${metric.type}-${metric.id}`} name=\"Raw Data\" metric={metric} />;\n          case 'raw_document':\n            return (\n              <>\n                <QueryEditorSpecialMetricRow key={`${metric.type}-${metric.id}`} name=\"Raw Document\" metric={metric} />\n                <Alert severity=\"warning\" title=\"The 'Raw Document' query type is deprecated.\" />\n              </>\n            );\n          default:\n            return (\n              <QueryEditorRow\n                key={`${metric.type}-${metric.id}`}\n                label={`Metric (${metric.id})`}\n                hidden={metric.hide}\n                onHideClick={() => dispatch(toggleMetricVisibility(metric.id))}\n                onRemoveClick={totalMetrics > 1 && (() => dispatch(removeMetric(metric.id)))}\n              >\n                <MetricEditor value={metric} />\n\n                {metricAggregationConfig[metric.type].impliedQueryType === 'metrics' && index === 0 && (\n                  <Button\n                    variant=\"secondary\"\n                    fill=\"text\"\n                    icon=\"plus\"\n                    onClick={() => dispatch(addMetric(nextId))}\n                    tooltip=\"Add metric\"\n                    aria-label=\"Add metric\"\n                  />\n                )}\n              </QueryEditorRow>\n            );\n        }\n      })}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { RadioButtonGroup } from '@grafana/ui';\n\nimport { useDispatch } from '../../hooks/useStatelessReducer';\nimport { MetricAggregation, QueryType } from '../../types';\n\nimport { useQuery } from './ElasticsearchQueryContext';\nimport { changeMetricType } from './MetricAggregationsEditor/state/actions';\nimport { metricAggregationConfig } from './MetricAggregationsEditor/utils';\n\nconst OPTIONS: Array<SelectableValue<QueryType>> = [\n  { value: 'metrics', label: 'Metrics' },\n  { value: 'logs', label: 'Logs' },\n  { value: 'raw_data', label: 'Raw Data' },\n  { value: 'raw_document', label: 'Raw Document' },\n];\n\nfunction queryTypeToMetricType(type: QueryType): MetricAggregation['type'] {\n  switch (type) {\n    case 'logs':\n    case 'raw_data':\n    case 'raw_document':\n      return type;\n    case 'metrics':\n      return 'count';\n    default:\n      // should never happen\n      throw new Error(`invalid query type: ${type}`);\n  }\n}\n\nexport const QueryTypeSelector = () => {\n  const query = useQuery();\n  const dispatch = useDispatch();\n\n  const firstMetric = query.metrics?.[0];\n\n  if (firstMetric == null) {\n    // not sure if this can really happen, but we should handle it anyway\n    return null;\n  }\n\n  const queryType = metricAggregationConfig[firstMetric.type].impliedQueryType;\n\n  const onChange = (newQueryType: QueryType) => {\n    dispatch(changeMetricType({ id: firstMetric.id, type: queryTypeToMetricType(newQueryType) }));\n  };\n\n  return <RadioButtonGroup<QueryType> fullWidth={false} options={OPTIONS} value={queryType} onChange={onChange} />;\n};\n","import { css } from '@emotion/css';\nimport React, { useEffect, useId, useState } from 'react';\nimport { SemVer } from 'semver';\n\nimport { getDefaultTimeRange, GrafanaTheme2, QueryEditorProps } from '@grafana/data';\nimport { Alert, InlineField, InlineLabel, Input, QueryField, useStyles2 } from '@grafana/ui';\n\nimport { ElasticDatasource } from '../../datasource';\nimport { useNextId } from '../../hooks/useNextId';\nimport { useDispatch } from '../../hooks/useStatelessReducer';\nimport { ElasticsearchOptions, ElasticsearchQuery } from '../../types';\nimport { isSupportedVersion, isTimeSeriesQuery, unsupportedVersionMessage } from '../../utils';\n\nimport { BucketAggregationsEditor } from './BucketAggregationsEditor';\nimport { ElasticsearchProvider } from './ElasticsearchQueryContext';\nimport { MetricAggregationsEditor } from './MetricAggregationsEditor';\nimport { metricAggregationConfig } from './MetricAggregationsEditor/utils';\nimport { QueryTypeSelector } from './QueryTypeSelector';\nimport { changeAliasPattern, changeQuery } from './state';\n\nexport type ElasticQueryEditorProps = QueryEditorProps<ElasticDatasource, ElasticsearchQuery, ElasticsearchOptions>;\n\n// a react hook that returns the elasticsearch database version,\n// or `null`, while loading, or if it is not possible to determine the value.\nfunction useElasticVersion(datasource: ElasticDatasource): SemVer | null {\n  const [version, setVersion] = useState<SemVer | null>(null);\n  useEffect(() => {\n    let canceled = false;\n    datasource.getDatabaseVersion().then(\n      (version) => {\n        if (!canceled) {\n          setVersion(version);\n        }\n      },\n      (error) => {\n        // we do nothing\n        console.log(error);\n      }\n    );\n\n    return () => {\n      canceled = true;\n    };\n  }, [datasource]);\n\n  return version;\n}\n\nexport const QueryEditor = ({ query, onChange, onRunQuery, datasource, range }: ElasticQueryEditorProps) => {\n  const elasticVersion = useElasticVersion(datasource);\n  const showUnsupportedMessage = elasticVersion != null && !isSupportedVersion(elasticVersion);\n  return (\n    <ElasticsearchProvider\n      datasource={datasource}\n      onChange={onChange}\n      onRunQuery={onRunQuery}\n      query={query}\n      range={range || getDefaultTimeRange()}\n    >\n      {showUnsupportedMessage && <Alert title={unsupportedVersionMessage} />}\n      <QueryEditorForm value={query} />\n    </ElasticsearchProvider>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  root: css`\n    display: flex;\n  `,\n  queryItem: css`\n    flex-grow: 1;\n    margin: 0 ${theme.spacing(0.5)} ${theme.spacing(0.5)} 0;\n  `,\n});\n\ninterface Props {\n  value: ElasticsearchQuery;\n}\n\nexport const ElasticSearchQueryField = ({ value, onChange }: { value?: string; onChange: (v: string) => void }) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.queryItem}>\n      <QueryField query={value} onChange={onChange} placeholder=\"Enter a lucene query\" portalOrigin=\"elasticsearch\" />\n    </div>\n  );\n};\n\nconst QueryEditorForm = ({ value }: Props) => {\n  const dispatch = useDispatch();\n  const nextId = useNextId();\n  const inputId = useId();\n  const styles = useStyles2(getStyles);\n\n  const isTimeSeries = isTimeSeriesQuery(value);\n\n  const showBucketAggregationsEditor = value.metrics?.every(\n    (metric) => metricAggregationConfig[metric.type].impliedQueryType === 'metrics'\n  );\n\n  return (\n    <>\n      <div className={styles.root}>\n        <InlineLabel width={17}>Query type</InlineLabel>\n        <div className={styles.queryItem}>\n          <QueryTypeSelector />\n        </div>\n      </div>\n      <div className={styles.root}>\n        <InlineLabel width={17}>Lucene Query</InlineLabel>\n        <ElasticSearchQueryField onChange={(query) => dispatch(changeQuery(query))} value={value?.query} />\n\n        {isTimeSeries && (\n          <InlineField\n            label=\"Alias\"\n            labelWidth={15}\n            tooltip=\"Aliasing only works for timeseries queries (when the last group is 'Date Histogram'). For all other query types this field is ignored.\"\n            htmlFor={inputId}\n          >\n            <Input\n              id={inputId}\n              placeholder=\"Alias Pattern\"\n              onBlur={(e) => dispatch(changeAliasPattern(e.currentTarget.value))}\n              defaultValue={value.alias}\n            />\n          </InlineField>\n        )}\n      </div>\n\n      <MetricAggregationsEditor nextId={nextId} />\n      {showBucketAggregationsEditor && <BucketAggregationsEditor nextId={nextId} />}\n    </>\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { Dispatch, SetStateAction, useEffect, useState } from 'react';\nimport { usePrevious } from 'react-use';\n\nimport { DataSourceInstanceSettings, VariableSuggestion } from '@grafana/data';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport {\n  Button,\n  DataLinkInput,\n  InlineField,\n  InlineSwitch,\n  InlineFieldRow,\n  InlineLabel,\n  Input,\n  useStyles2,\n} from '@grafana/ui';\n\nimport { DataLinkConfig } from '../types';\n\ninterface Props {\n  value: DataLinkConfig;\n  onChange: (value: DataLinkConfig) => void;\n  onDelete: () => void;\n  suggestions: VariableSuggestion[];\n  className?: string;\n}\n\nexport const DataLink = (props: Props) => {\n  const { value, onChange, onDelete, suggestions, className } = props;\n  const styles = useStyles2(getStyles);\n  const [showInternalLink, setShowInternalLink] = useInternalLink(value.datasourceUid);\n\n  const handleChange = (field: keyof typeof value) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange({\n      ...value,\n      [field]: event.currentTarget.value,\n    });\n  };\n\n  return (\n    <div className={className}>\n      <div className={styles.firstRow}>\n        <InlineField\n          label=\"Field\"\n          htmlFor=\"elasticsearch-datasource-config-field\"\n          labelWidth={12}\n          tooltip={'Can be exact field name or a regex pattern that will match on the field name.'}\n        >\n          <Input\n            type=\"text\"\n            id=\"elasticsearch-datasource-config-field\"\n            value={value.field}\n            onChange={handleChange('field')}\n            width={100}\n          />\n        </InlineField>\n        <Button\n          variant={'destructive'}\n          title=\"Remove field\"\n          icon=\"times\"\n          onClick={(event) => {\n            event.preventDefault();\n            onDelete();\n          }}\n        />\n      </div>\n\n      <InlineFieldRow>\n        <div className={styles.urlField}>\n          <InlineLabel htmlFor=\"elasticsearch-datasource-internal-link\" width={12}>\n            {showInternalLink ? 'Query' : 'URL'}\n          </InlineLabel>\n          <DataLinkInput\n            placeholder={showInternalLink ? '${__value.raw}' : 'http://example.com/${__value.raw}'}\n            value={value.url || ''}\n            onChange={(newValue) =>\n              onChange({\n                ...value,\n                url: newValue,\n              })\n            }\n            suggestions={suggestions}\n          />\n        </div>\n\n        <div className={styles.urlDisplayLabelField}>\n          <InlineField\n            label=\"URL Label\"\n            htmlFor=\"elasticsearch-datasource-url-label\"\n            labelWidth={14}\n            tooltip={'Use to override the button label.'}\n          >\n            <Input\n              type=\"text\"\n              id=\"elasticsearch-datasource-url-label\"\n              value={value.urlDisplayLabel}\n              onChange={handleChange('urlDisplayLabel')}\n            />\n          </InlineField>\n        </div>\n      </InlineFieldRow>\n\n      <div className={styles.row}>\n        <InlineField label=\"Internal link\" labelWidth={12}>\n          <InlineSwitch\n            label=\"Internal link\"\n            value={showInternalLink || false}\n            onChange={() => {\n              if (showInternalLink) {\n                onChange({\n                  ...value,\n                  datasourceUid: undefined,\n                });\n              }\n              setShowInternalLink(!showInternalLink);\n            }}\n          />\n        </InlineField>\n\n        {showInternalLink && (\n          <DataSourcePicker\n            tracing={true}\n            // Uid and value should be always set in the db and so in the items.\n            onChange={(ds: DataSourceInstanceSettings) => {\n              onChange({\n                ...value,\n                datasourceUid: ds.uid,\n              });\n            }}\n            current={value.datasourceUid}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction useInternalLink(datasourceUid?: string): [boolean, Dispatch<SetStateAction<boolean>>] {\n  const [showInternalLink, setShowInternalLink] = useState<boolean>(!!datasourceUid);\n  const previousUid = usePrevious(datasourceUid);\n\n  // Force internal link visibility change if uid changed outside of this component.\n  useEffect(() => {\n    if (!previousUid && datasourceUid && !showInternalLink) {\n      setShowInternalLink(true);\n    }\n    if (previousUid && !datasourceUid && showInternalLink) {\n      setShowInternalLink(false);\n    }\n  }, [previousUid, datasourceUid, showInternalLink]);\n\n  return [showInternalLink, setShowInternalLink];\n}\n\nconst getStyles = () => ({\n  firstRow: css`\n    display: flex;\n  `,\n  nameField: css`\n    flex: 2;\n  `,\n  regexField: css`\n    flex: 3;\n  `,\n  row: css`\n    display: flex;\n    align-items: baseline;\n  `,\n  urlField: css`\n    display: flex;\n    flex: 1;\n  `,\n  urlDisplayLabelField: css`\n    flex: 1;\n  `,\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, VariableOrigin, DataLinkBuiltInVars } from '@grafana/data';\nimport { ConfigDescriptionLink, ConfigSubSection } from '@grafana/experimental';\nimport { Button, useStyles2 } from '@grafana/ui';\n\nimport { DataLinkConfig } from '../types';\n\nimport { DataLink } from './DataLink';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    addButton: css`\n      margin-right: 10px;\n    `,\n    container: css`\n      margin-bottom: ${theme.spacing(2)};\n    `,\n    dataLink: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n  };\n};\n\nexport type Props = {\n  value?: DataLinkConfig[];\n  onChange: (value: DataLinkConfig[]) => void;\n};\nexport const DataLinks = (props: Props) => {\n  const { value, onChange } = props;\n  const styles = useStyles2(getStyles);\n\n  return (\n    <ConfigSubSection\n      title=\"Data links\"\n      description={\n        <ConfigDescriptionLink\n          description=\"Add links to existing fields. Links will be shown in log row details next to the field value.\"\n          suffix=\"elasticsearch/#data-links\"\n          feature=\"Elasticsearch data links\"\n        />\n      }\n    >\n      <div className={styles.container}>\n        {value && value.length > 0 && (\n          <div className=\"gf-form-group\">\n            {value.map((field, index) => {\n              return (\n                <DataLink\n                  className={styles.dataLink}\n                  key={index}\n                  value={field}\n                  onChange={(newField) => {\n                    const newDataLinks = [...value];\n                    newDataLinks.splice(index, 1, newField);\n                    onChange(newDataLinks);\n                  }}\n                  onDelete={() => {\n                    const newDataLinks = [...value];\n                    newDataLinks.splice(index, 1);\n                    onChange(newDataLinks);\n                  }}\n                  suggestions={[\n                    {\n                      value: DataLinkBuiltInVars.valueRaw,\n                      label: 'Raw value',\n                      documentation: 'Raw value of the field',\n                      origin: VariableOrigin.Value,\n                    },\n                  ]}\n                />\n              );\n            })}\n          </div>\n        )}\n\n        <Button\n          type=\"button\"\n          variant={'secondary'}\n          className={styles.addButton}\n          icon=\"plus\"\n          onClick={(event) => {\n            event.preventDefault();\n            const newDataLinks = [...(value || []), { field: '', url: '' }];\n            onChange(newDataLinks);\n          }}\n        >\n          Add\n        </Button>\n      </div>\n    </ConfigSubSection>\n  );\n};\n","import React from 'react';\n\nimport { DataSourceSettings, SelectableValue } from '@grafana/data';\nimport { ConfigDescriptionLink, ConfigSubSection } from '@grafana/experimental';\nimport { InlineField, Input, Select, InlineSwitch } from '@grafana/ui';\n\nimport { ElasticsearchOptions, Interval } from '../types';\n\nconst indexPatternTypes: Array<SelectableValue<'none' | Interval>> = [\n  { label: 'No pattern', value: 'none' },\n  { label: 'Hourly', value: 'Hourly', example: '[logstash-]YYYY.MM.DD.HH' },\n  { label: 'Daily', value: 'Daily', example: '[logstash-]YYYY.MM.DD' },\n  { label: 'Weekly', value: 'Weekly', example: '[logstash-]GGGG.WW' },\n  { label: 'Monthly', value: 'Monthly', example: '[logstash-]YYYY.MM' },\n  { label: 'Yearly', value: 'Yearly', example: '[logstash-]YYYY' },\n];\n\ntype Props = {\n  value: DataSourceSettings<ElasticsearchOptions>;\n  onChange: (value: DataSourceSettings<ElasticsearchOptions>) => void;\n};\nexport const ElasticDetails = ({ value, onChange }: Props) => {\n  return (\n    <ConfigSubSection\n      title=\"Elasticsearch details\"\n      description={\n        <ConfigDescriptionLink\n          description=\"Specific settings for the Elasticsearch data source.\"\n          suffix=\"elasticsearch/#index-settings\"\n          feature=\"Elasticsearch details\"\n        />\n      }\n    >\n      <InlineField\n        label=\"Index name\"\n        htmlFor=\"es_config_indexName\"\n        labelWidth={29}\n        tooltip=\"Name of your Elasticsearch index. You can use a time pattern, such as YYYY.MM.DD, or a wildcard for the index name.\"\n      >\n        <Input\n          id=\"es_config_indexName\"\n          value={value.jsonData.index ?? (value.database || '')}\n          onChange={indexChangeHandler(value, onChange)}\n          width={24}\n          placeholder=\"es-index-name\"\n          required\n        />\n      </InlineField>\n\n      <InlineField\n        label=\"Pattern\"\n        htmlFor=\"es_config_indexPattern\"\n        labelWidth={29}\n        tooltip=\"If you're using a pattern for your index, select the type, or no pattern.\"\n      >\n        <Select\n          inputId=\"es_config_indexPattern\"\n          value={indexPatternTypes.find(\n            (pattern) => pattern.value === (value.jsonData.interval === undefined ? 'none' : value.jsonData.interval)\n          )}\n          options={indexPatternTypes}\n          onChange={intervalHandler(value, onChange)}\n          width={24}\n        />\n      </InlineField>\n\n      <InlineField\n        label=\"Time field name\"\n        htmlFor=\"es_config_timeField\"\n        labelWidth={29}\n        tooltip=\"Name of your time field. Defaults to @timestamp.\"\n      >\n        <Input\n          id=\"es_config_timeField\"\n          value={value.jsonData.timeField || ''}\n          onChange={jsonDataChangeHandler('timeField', value, onChange)}\n          width={24}\n          placeholder=\"@timestamp\"\n          required\n        />\n      </InlineField>\n\n      <InlineField\n        label=\"Max concurrent Shard Requests\"\n        htmlFor=\"es_config_shardRequests\"\n        labelWidth={29}\n        tooltip=\"Maximum number of concurrent shards a search request can hit per node. Defaults to 5.\"\n      >\n        <Input\n          id=\"es_config_shardRequests\"\n          value={value.jsonData.maxConcurrentShardRequests || ''}\n          onChange={jsonDataChangeHandler('maxConcurrentShardRequests', value, onChange)}\n          width={24}\n        />\n      </InlineField>\n\n      <InlineField\n        label=\"Min time interval\"\n        htmlFor=\"es_config_minTimeInterval\"\n        labelWidth={29}\n        tooltip={\n          <>\n            A lower limit for the auto group by time interval. Recommended to be set to write frequency, for example{' '}\n            <code>1m</code> if your data is written every minute.\n          </>\n        }\n        error=\"Value is not valid, you can use number with time unit specifier: y, M, w, d, h, m, s\"\n        invalid={!!value.jsonData.timeInterval && !/^\\d+(ms|[Mwdhmsy])$/.test(value.jsonData.timeInterval)}\n      >\n        <Input\n          id=\"es_config_minTimeInterval\"\n          value={value.jsonData.timeInterval || ''}\n          onChange={jsonDataChangeHandler('timeInterval', value, onChange)}\n          width={24}\n          placeholder=\"10s\"\n        />\n      </InlineField>\n      <InlineField\n        label=\"Include Frozen Indices\"\n        htmlFor=\"es_config_frozenIndices\"\n        labelWidth={29}\n        tooltip=\"Include frozen indices in searches.\"\n      >\n        <InlineSwitch\n          id=\"es_config_frozenIndices\"\n          value={value.jsonData.includeFrozen ?? false}\n          onChange={jsonDataSwitchChangeHandler('includeFrozen', value, onChange)}\n        />\n      </InlineField>\n    </ConfigSubSection>\n  );\n};\n\nconst indexChangeHandler =\n  (value: Props['value'], onChange: Props['onChange']) =>\n  (event: React.SyntheticEvent<HTMLInputElement | HTMLSelectElement>) => {\n    onChange({\n      ...value,\n      database: '',\n      jsonData: {\n        ...value.jsonData,\n        index: event.currentTarget.value,\n      },\n    });\n  };\n\n// TODO: Use change handlers from @grafana/data\nconst jsonDataChangeHandler =\n  (key: keyof ElasticsearchOptions, value: Props['value'], onChange: Props['onChange']) =>\n  (event: React.SyntheticEvent<HTMLInputElement | HTMLSelectElement>) => {\n    onChange({\n      ...value,\n      jsonData: {\n        ...value.jsonData,\n        [key]: event.currentTarget.value,\n      },\n    });\n  };\n\nconst jsonDataSwitchChangeHandler =\n  (key: keyof ElasticsearchOptions, value: Props['value'], onChange: Props['onChange']) =>\n  (event: React.SyntheticEvent<HTMLInputElement>) => {\n    onChange({\n      ...value,\n      jsonData: {\n        ...value.jsonData,\n        [key]: event.currentTarget.checked,\n      },\n    });\n  };\n\nconst intervalHandler =\n  (value: Props['value'], onChange: Props['onChange']) => (option: SelectableValue<Interval | 'none'>) => {\n    // If option value is undefined it will send its label instead so we have to convert made up value to undefined here.\n    const newInterval = option.value === 'none' ? undefined : option.value;\n\n    const currentIndex = value.jsonData.index ?? value.database;\n    if (!currentIndex || currentIndex.length === 0 || currentIndex.startsWith('[logstash-]')) {\n      let newDatabase = '';\n\n      if (newInterval !== undefined) {\n        const pattern = indexPatternTypes.find((pattern) => pattern.value === newInterval);\n\n        if (pattern) {\n          newDatabase = pattern.example ?? '';\n        }\n      }\n\n      onChange({\n        ...value,\n        database: '',\n        jsonData: {\n          ...value.jsonData,\n          index: newDatabase,\n          interval: newInterval,\n        },\n      });\n    } else {\n      onChange({\n        ...value,\n        jsonData: {\n          ...value.jsonData,\n          interval: newInterval,\n        },\n      });\n    }\n  };\n\nexport function defaultMaxConcurrentShardRequests() {\n  return 5;\n}\n","import React from 'react';\n\nimport { ConfigDescriptionLink, ConfigSubSection } from '@grafana/experimental';\nimport { Input, InlineField } from '@grafana/ui';\n\nimport { ElasticsearchOptions } from '../types';\n\ntype Props = {\n  value: ElasticsearchOptions;\n  onChange: (value: ElasticsearchOptions) => void;\n};\nexport const LogsConfig = (props: Props) => {\n  const { value, onChange } = props;\n  const changeHandler =\n    (key: keyof ElasticsearchOptions) => (event: React.SyntheticEvent<HTMLInputElement | HTMLSelectElement>) => {\n      onChange({\n        ...value,\n        [key]: event.currentTarget.value,\n      });\n    };\n\n  return (\n    <ConfigSubSection\n      title=\"Logs\"\n      description={\n        <ConfigDescriptionLink\n          description=\"Configure which fields the data source uses for log messages and log levels.\"\n          suffix=\"elasticsearch/#logs\"\n          feature=\"Elasticsearch log fields\"\n        />\n      }\n    >\n      <InlineField\n        label=\"Message field name\"\n        labelWidth={22}\n        tooltip=\"Configure the field to be used for log messages.\"\n      >\n        <Input\n          id=\"es_logs-config_logMessageField\"\n          value={value.logMessageField}\n          onChange={changeHandler('logMessageField')}\n          placeholder=\"_source\"\n          width={24}\n        />\n      </InlineField>\n\n      <InlineField\n        label=\"Level field name\"\n        labelWidth={22}\n        tooltip=\"Configure the field that determines the level of each log message.\"\n      >\n        <Input\n          id=\"es_logs-config_logLevelField\"\n          value={value.logLevelField}\n          onChange={changeHandler('logLevelField')}\n          width={24}\n        />\n      </InlineField>\n    </ConfigSubSection>\n  );\n};\n","import { DataSourceSettings } from '@grafana/data';\n\nimport { ElasticsearchOptions } from '../types';\n\nimport { defaultMaxConcurrentShardRequests } from './ElasticDetails';\n\nexport const coerceOptions = (\n  options: DataSourceSettings<ElasticsearchOptions, {}>\n): DataSourceSettings<ElasticsearchOptions, {}> => {\n  return {\n    ...options,\n    jsonData: {\n      ...options.jsonData,\n      timeField: options.jsonData.timeField || '@timestamp',\n      maxConcurrentShardRequests: options.jsonData.maxConcurrentShardRequests || defaultMaxConcurrentShardRequests(),\n      logMessageField: options.jsonData.logMessageField || '',\n      logLevelField: options.jsonData.logLevelField || '',\n      includeFrozen: options.jsonData.includeFrozen ?? false,\n    },\n  };\n};\n\nexport const isValidOptions = (options: DataSourceSettings<ElasticsearchOptions, {}>): boolean => {\n  return (\n    // timeField should not be empty or nullish\n    !!options.jsonData.timeField &&\n    // maxConcurrentShardRequests should be a number AND greater than 0\n    !!options.jsonData.maxConcurrentShardRequests &&\n    // message & level fields should be defined\n    options.jsonData.logMessageField !== undefined &&\n    options.jsonData.logLevelField !== undefined\n  );\n};\n","import React, { useEffect } from 'react';\n\nimport { SIGV4ConnectionConfig } from '@grafana/aws-sdk';\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport {\n  AdvancedHttpSettings,\n  Auth,\n  AuthMethod,\n  ConfigSection,\n  ConnectionSettings,\n  convertLegacyAuthProps,\n  DataSourceDescription,\n} from '@grafana/experimental';\nimport { config } from '@grafana/runtime';\nimport { Alert, SecureSocksProxySettings, Divider, Stack } from '@grafana/ui';\n\nimport { ElasticsearchOptions } from '../types';\n\nimport { DataLinks } from './DataLinks';\nimport { ElasticDetails } from './ElasticDetails';\nimport { LogsConfig } from './LogsConfig';\nimport { coerceOptions, isValidOptions } from './utils';\n\nexport type Props = DataSourcePluginOptionsEditorProps<ElasticsearchOptions>;\n\nexport const ConfigEditor = (props: Props) => {\n  const { options, onOptionsChange } = props;\n\n  useEffect(() => {\n    if (!isValidOptions(options)) {\n      onOptionsChange(coerceOptions(options));\n    }\n  }, [onOptionsChange, options]);\n\n  const authProps = convertLegacyAuthProps({\n    config: options,\n    onChange: onOptionsChange,\n  });\n  if (config.sigV4AuthEnabled) {\n    authProps.customMethods = [\n      {\n        id: 'custom-sigv4',\n        label: 'SigV4 auth',\n        description: 'AWS Signature Version 4 authentication',\n        component: <SIGV4ConnectionConfig inExperimentalAuthComponent={true} {...props} />,\n      },\n    ];\n    authProps.selectedMethod = options.jsonData.sigV4Auth ? 'custom-sigv4' : authProps.selectedMethod;\n  }\n\n  return (\n    <>\n      {options.access === 'direct' && (\n        <Alert title=\"Error\" severity=\"error\">\n          Browser access mode in the Elasticsearch datasource is no longer available. Switch to server access mode.\n        </Alert>\n      )}\n      <DataSourceDescription\n        dataSourceName=\"Elasticsearch\"\n        docsLink=\"https://grafana.com/docs/grafana/latest/datasources/elasticsearch\"\n        hasRequiredFields={false}\n      />\n      <Divider spacing={4} />\n      <ConnectionSettings config={options} onChange={onOptionsChange} urlPlaceholder=\"http://localhost:9200\" />\n      <Divider spacing={4} />\n      <Auth\n        {...authProps}\n        onAuthMethodSelect={(method) => {\n          onOptionsChange({\n            ...options,\n            basicAuth: method === AuthMethod.BasicAuth,\n            withCredentials: method === AuthMethod.CrossSiteCredentials,\n            jsonData: {\n              ...options.jsonData,\n              sigV4Auth: method === 'custom-sigv4',\n              oauthPassThru: method === AuthMethod.OAuthForward,\n            },\n          });\n        }}\n      />\n      <Divider spacing={4} />\n      <ConfigSection\n        title=\"Additional settings\"\n        description=\"Additional settings are optional settings that can be configured for more control over your data source.\"\n        isCollapsible={true}\n        isInitiallyOpen\n      >\n        <Stack gap={5} direction=\"column\">\n          <AdvancedHttpSettings config={options} onChange={onOptionsChange} />\n          {config.secureSocksDSProxyEnabled && (\n            <SecureSocksProxySettings options={options} onOptionsChange={onOptionsChange} />\n          )}\n          <ElasticDetails value={options} onChange={onOptionsChange} />\n          <LogsConfig\n            value={options.jsonData}\n            onChange={(newValue) =>\n              onOptionsChange({\n                ...options,\n                jsonData: newValue,\n              })\n            }\n          />\n          <DataLinks\n            value={options.jsonData.dataLinks}\n            onChange={(newValue) => {\n              onOptionsChange({\n                ...options,\n                jsonData: {\n                  ...options.jsonData,\n                  dataLinks: newValue,\n                },\n              });\n            }}\n          />\n        </Stack>\n      </ConfigSection>\n    </>\n  );\n};\n","import { toUtc, dateTime, DateTime, DurationUnit } from '@grafana/data';\n\nimport { Interval } from './types';\n\ntype IntervalMap = Record<\n  Interval,\n  {\n    startOf: DurationUnit;\n    amount: DurationUnit;\n  }\n>;\n\nexport const intervalMap: IntervalMap = {\n  Hourly: { startOf: 'hour', amount: 'hours' },\n  Daily: { startOf: 'day', amount: 'days' },\n  Weekly: { startOf: 'isoWeek', amount: 'weeks' },\n  Monthly: { startOf: 'month', amount: 'months' },\n  Yearly: { startOf: 'year', amount: 'years' },\n};\n\nexport class IndexPattern {\n  private dateLocale = 'en';\n\n  constructor(\n    private pattern: string,\n    private interval?: keyof typeof intervalMap\n  ) {}\n\n  getIndexForToday() {\n    if (this.interval) {\n      return toUtc().locale(this.dateLocale).format(this.pattern);\n    } else {\n      return this.pattern;\n    }\n  }\n\n  getIndexList(from?: DateTime, to?: DateTime) {\n    // When no `from` or `to` is provided, we request data from 7 subsequent/previous indices\n    // for the provided index pattern.\n    // This is useful when requesting log context where the only time data we have is the log\n    // timestamp.\n    // TODO: Remove when enableBackendMigration toggle is removed\n    const indexOffset = 7;\n    if (!this.interval) {\n      return this.pattern;\n    }\n\n    const intervalInfo = intervalMap[this.interval];\n    const start = dateTime(from || dateTime(to).add(-indexOffset, intervalInfo.amount))\n      .utc()\n      .startOf(intervalInfo.startOf);\n    const endEpoch = dateTime(to || dateTime(from).add(indexOffset, intervalInfo.amount))\n      .utc()\n      .startOf(intervalInfo.startOf)\n      .valueOf();\n    const indexList = [];\n\n    while (start.valueOf() <= endEpoch) {\n      indexList.push(start.locale(this.dateLocale).format(this.pattern));\n      start.add(1, intervalInfo.amount);\n    }\n\n    return indexList;\n  }\n}\n","import { AbstractLabelOperator, AbstractLabelMatcher, LanguageProvider, AbstractQuery } from '@grafana/data';\n\nimport { ElasticDatasource } from './datasource';\nimport { ElasticsearchQuery } from './types';\n\nexport default class ElasticsearchLanguageProvider extends LanguageProvider {\n  declare request: (url: string, params?: any) => Promise<any>;\n  declare start: () => Promise<any[]>;\n  datasource: ElasticDatasource;\n\n  constructor(datasource: ElasticDatasource, initialValues?: any) {\n    super();\n    this.datasource = datasource;\n\n    Object.assign(this, initialValues);\n  }\n\n  /**\n   * Queries are transformed to an ES Logs query since it's the behaviour most users expect.\n   **/\n  importFromAbstractQuery(abstractQuery: AbstractQuery): ElasticsearchQuery {\n    return {\n      metrics: [\n        {\n          id: '1',\n          type: 'logs',\n        },\n      ],\n      query: this.getElasticsearchQuery(abstractQuery.labelMatchers),\n      refId: abstractQuery.refId,\n    };\n  }\n\n  getElasticsearchQuery(labels: AbstractLabelMatcher[]): string {\n    return labels\n      .map((label) => {\n        switch (label.operator) {\n          case AbstractLabelOperator.Equal: {\n            return label.name + ':\"' + label.value + '\"';\n          }\n          case AbstractLabelOperator.NotEqual: {\n            return '-' + label.name + ':\"' + label.value + '\"';\n          }\n          case AbstractLabelOperator.EqualRegEx: {\n            return label.name + ':/' + label.value + '/';\n          }\n          case AbstractLabelOperator.NotEqualRegEx: {\n            return '-' + label.name + ':/' + label.value + '/';\n          }\n        }\n      })\n      .join(' AND ');\n  }\n}\n","import { clone, filter, find, identity, isArray, keys, map, uniq, values as _values } from 'lodash';\n\nimport {\n  DataQueryResponse,\n  DataFrame,\n  toDataFrame,\n  FieldType,\n  MutableDataFrame,\n  PreferredVisualisationType,\n} from '@grafana/data';\nimport { convertFieldType } from '@grafana/data/src/transformations/transformers/convertFieldType';\nimport TableModel from 'app/core/TableModel';\n\nimport { isMetricAggregationWithField } from './components/QueryEditor/MetricAggregationsEditor/aggregations';\nimport { metricAggregationConfig } from './components/QueryEditor/MetricAggregationsEditor/utils';\nimport * as queryDef from './queryDef';\nimport { ElasticsearchAggregation, ElasticsearchQuery, TopMetrics, ExtendedStatMetaType } from './types';\nimport { describeMetric, flattenObject, getScriptValue } from './utils';\n\nconst HIGHLIGHT_TAGS_EXP = `${queryDef.highlightTags.pre}([^@]+)${queryDef.highlightTags.post}`;\ntype TopMetricMetric = Record<string, number>;\ninterface TopMetricBucket {\n  top: Array<{\n    metrics: TopMetricMetric;\n  }>;\n}\n\nexport class ElasticResponse {\n  constructor(\n    private targets: ElasticsearchQuery[],\n    private response: any\n  ) {\n    this.targets = targets;\n    this.response = response;\n  }\n\n  processMetrics(esAgg: any, target: ElasticsearchQuery, seriesList: any, props: any) {\n    let newSeries: any;\n\n    for (let y = 0; y < target.metrics!.length; y++) {\n      const metric = target.metrics![y];\n      if (metric.hide) {\n        continue;\n      }\n\n      switch (metric.type) {\n        case 'count': {\n          newSeries = { datapoints: [], metric: 'count', props, refId: target.refId };\n          for (let i = 0; i < esAgg.buckets.length; i++) {\n            const bucket = esAgg.buckets[i];\n            const value = bucket.doc_count;\n            newSeries.datapoints.push([value, bucket.key]);\n          }\n          seriesList.push(newSeries);\n          break;\n        }\n        case 'percentiles': {\n          if (esAgg.buckets.length === 0) {\n            break;\n          }\n\n          const firstBucket = esAgg.buckets[0];\n          const percentiles = firstBucket[metric.id].values;\n\n          for (const percentileName in percentiles) {\n            newSeries = {\n              datapoints: [],\n              metric: 'p' + percentileName,\n              props: props,\n              field: metric.field,\n              refId: target.refId,\n            };\n\n            for (let i = 0; i < esAgg.buckets.length; i++) {\n              const bucket = esAgg.buckets[i];\n              const values = bucket[metric.id].values;\n              newSeries.datapoints.push([values[percentileName], bucket.key]);\n            }\n            seriesList.push(newSeries);\n          }\n\n          break;\n        }\n        case 'extended_stats': {\n          for (const statName in metric.meta) {\n            if (!metric.meta[statName]) {\n              continue;\n            }\n\n            newSeries = {\n              datapoints: [],\n              metric: statName,\n              props: props,\n              field: metric.field,\n              refId: target.refId,\n            };\n\n            for (let i = 0; i < esAgg.buckets.length; i++) {\n              const bucket = esAgg.buckets[i];\n              const stats = bucket[metric.id];\n\n              // add stats that are in nested obj to top level obj\n              stats.std_deviation_bounds_upper = stats.std_deviation_bounds.upper;\n              stats.std_deviation_bounds_lower = stats.std_deviation_bounds.lower;\n\n              newSeries.datapoints.push([stats[statName], bucket.key]);\n            }\n\n            seriesList.push(newSeries);\n          }\n\n          break;\n        }\n        case 'top_metrics': {\n          if (metric.settings?.metrics?.length) {\n            for (const metricField of metric.settings?.metrics) {\n              newSeries = {\n                datapoints: [],\n                metric: metric.type,\n                props: props,\n                refId: target.refId,\n                field: metricField,\n              };\n              for (let i = 0; i < esAgg.buckets.length; i++) {\n                const bucket = esAgg.buckets[i];\n                const stats: TopMetricBucket = bucket[metric.id];\n                const values = stats.top.map((hit) => {\n                  if (hit.metrics[metricField]) {\n                    return hit.metrics[metricField];\n                  }\n                  return null;\n                });\n                const point = [values[values.length - 1], bucket.key];\n                newSeries.datapoints.push(point);\n              }\n              seriesList.push(newSeries);\n            }\n          }\n          break;\n        }\n        default: {\n          newSeries = {\n            datapoints: [],\n            metric: metric.type,\n            metricId: metric.id,\n            props: props,\n            refId: target.refId,\n          };\n\n          if (isMetricAggregationWithField(metric)) {\n            newSeries.field = metric.field;\n          }\n\n          for (let i = 0; i < esAgg.buckets.length; i++) {\n            const bucket = esAgg.buckets[i];\n            const value = bucket[metric.id];\n\n            if (value !== undefined) {\n              if (value.normalized_value) {\n                newSeries.datapoints.push([value.normalized_value, bucket.key]);\n              } else {\n                newSeries.datapoints.push([value.value, bucket.key]);\n              }\n            }\n          }\n          seriesList.push(newSeries);\n          break;\n        }\n      }\n    }\n  }\n\n  processAggregationDocs(\n    esAgg: any,\n    aggDef: ElasticsearchAggregation,\n    target: ElasticsearchQuery,\n    table: any,\n    props: any\n  ) {\n    // add columns\n    if (table.columns.length === 0) {\n      for (const propKey of keys(props)) {\n        table.addColumn({ text: propKey, filterable: true });\n      }\n      table.addColumn({ text: aggDef.field, filterable: true });\n    }\n\n    // helper func to add values to value array\n    const addMetricValue = (values: any[], metricName: string, value: any) => {\n      table.addColumn({ text: metricName });\n      values.push(value);\n    };\n    const buckets = isArray(esAgg.buckets) ? esAgg.buckets : [esAgg.buckets];\n    for (const bucket of buckets) {\n      const values = [];\n\n      for (const propValues of _values(props)) {\n        values.push(propValues);\n      }\n\n      // add bucket key (value)\n      values.push(bucket.key);\n\n      for (const metric of target.metrics || []) {\n        switch (metric.type) {\n          case 'count': {\n            addMetricValue(values, this.getMetricName(metric.type), bucket.doc_count);\n            break;\n          }\n          case 'extended_stats': {\n            for (const statName in metric.meta) {\n              if (!metric.meta[statName]) {\n                continue;\n              }\n\n              const stats = bucket[metric.id];\n              // add stats that are in nested obj to top level obj\n              stats.std_deviation_bounds_upper = stats.std_deviation_bounds.upper;\n              stats.std_deviation_bounds_lower = stats.std_deviation_bounds.lower;\n\n              addMetricValue(values, this.getMetricName(statName as ExtendedStatMetaType), stats[statName]);\n            }\n            break;\n          }\n          case 'percentiles': {\n            const percentiles = bucket[metric.id].values;\n\n            for (const percentileName in percentiles) {\n              addMetricValue(values, `p${percentileName} ${metric.field}`, percentiles[percentileName]);\n            }\n            break;\n          }\n          case 'top_metrics': {\n            const baseName = this.getMetricName(metric.type);\n\n            if (metric.settings?.metrics) {\n              for (const metricField of metric.settings.metrics) {\n                // If we selected more than one metric we also add each metric name\n                const metricName = metric.settings.metrics.length > 1 ? `${baseName} ${metricField}` : baseName;\n\n                const stats: TopMetricBucket = bucket[metric.id];\n\n                // Size of top_metrics is fixed to 1.\n                addMetricValue(values, metricName, stats.top[0].metrics[metricField]);\n              }\n            }\n\n            break;\n          }\n          default: {\n            let metricName = this.getMetricName(metric.type);\n            const otherMetrics = filter(target.metrics, { type: metric.type });\n\n            // if more of the same metric type include field field name in property\n            if (otherMetrics.length > 1) {\n              if (isMetricAggregationWithField(metric)) {\n                metricName += ' ' + metric.field;\n              }\n\n              if (metric.type === 'bucket_script') {\n                //Use the formula in the column name\n                metricName = getScriptValue(metric);\n              }\n            }\n\n            addMetricValue(values, metricName, bucket[metric.id].value);\n            break;\n          }\n        }\n      }\n\n      table.rows.push(values);\n    }\n  }\n\n  // This is quite complex\n  // need to recurse down the nested buckets to build series\n  processBuckets(aggs: any, target: ElasticsearchQuery, seriesList: any, table: TableModel, props: any, depth: number) {\n    let bucket, aggDef: any, esAgg, aggId;\n    const maxDepth = target.bucketAggs!.length - 1;\n\n    for (aggId in aggs) {\n      aggDef = find(target.bucketAggs, { id: aggId });\n      esAgg = aggs[aggId];\n\n      if (!aggDef) {\n        continue;\n      }\n\n      if (aggDef.type === 'nested') {\n        this.processBuckets(esAgg, target, seriesList, table, props, depth + 1);\n        continue;\n      }\n\n      if (depth === maxDepth) {\n        if (aggDef.type === 'date_histogram') {\n          this.processMetrics(esAgg, target, seriesList, props);\n        } else {\n          this.processAggregationDocs(esAgg, aggDef, target, table, props);\n        }\n      } else {\n        for (const nameIndex in esAgg.buckets) {\n          bucket = esAgg.buckets[nameIndex];\n          props = clone(props);\n          if (bucket.key !== void 0) {\n            props[aggDef.field] = bucket.key;\n          } else {\n            props['filter'] = nameIndex;\n          }\n          if (bucket.key_as_string) {\n            props[aggDef.field] = bucket.key_as_string;\n          }\n          this.processBuckets(bucket, target, seriesList, table, props, depth + 1);\n        }\n      }\n    }\n  }\n\n  private getMetricName(metric: string): string {\n    const metricDef = Object.entries(metricAggregationConfig)\n      .filter(([key]) => key === metric)\n      .map(([_, value]) => value)[0];\n\n    if (metricDef) {\n      return metricDef.label;\n    }\n\n    const extendedStat = queryDef.extendedStats.find((e) => e.value === metric);\n    if (extendedStat) {\n      return extendedStat.label;\n    }\n\n    return metric;\n  }\n\n  private getSeriesName(series: any, target: ElasticsearchQuery, dedup: boolean) {\n    let metricName = this.getMetricName(series.metric);\n\n    if (target.alias) {\n      const regex = /\\{\\{([\\s\\S]+?)\\}\\}/g;\n\n      return target.alias.replace(regex, (match, g1, g2) => {\n        const group = g1 || g2;\n\n        if (group.indexOf('term ') === 0) {\n          return series.props[group.substring(5)];\n        }\n        if (series.props[group] !== void 0) {\n          return series.props[group];\n        }\n        if (group === 'metric') {\n          return metricName;\n        }\n        if (group === 'field') {\n          return series.field || '';\n        }\n\n        return match;\n      });\n    }\n\n    if (queryDef.isPipelineAgg(series.metric)) {\n      if (series.metric && queryDef.isPipelineAggWithMultipleBucketPaths(series.metric)) {\n        const agg: any = find(target.metrics, { id: series.metricId });\n        if (agg && agg.settings.script) {\n          metricName = getScriptValue(agg);\n\n          for (const pv of agg.pipelineVariables) {\n            const appliedAgg = find(target.metrics, { id: pv.pipelineAgg });\n            if (appliedAgg) {\n              metricName = metricName.replace('params.' + pv.name, describeMetric(appliedAgg));\n            }\n          }\n        } else {\n          metricName = 'Unset';\n        }\n      } else {\n        const appliedAgg = find(target.metrics, { id: series.field });\n        if (appliedAgg) {\n          metricName += ' ' + describeMetric(appliedAgg);\n        } else {\n          metricName = 'Unset';\n        }\n      }\n    } else if (series.field) {\n      metricName += ' ' + series.field;\n    }\n\n    const propKeys = keys(series.props);\n    if (propKeys.length === 0) {\n      return metricName;\n    }\n\n    let name = '';\n    for (const propName in series.props) {\n      name += series.props[propName] + ' ';\n    }\n\n    if (dedup) {\n      return name.trim() + ' ' + metricName;\n    }\n\n    return name.trim();\n  }\n\n  nameSeries(seriesList: any, target: ElasticsearchQuery) {\n    const metricTypeCount = uniq(map(seriesList, 'metric')).length;\n    const hasTopMetricWithMultipleMetrics = (\n      target.metrics?.filter((m) => m.type === 'top_metrics') as TopMetrics[]\n    ).some((m) => (m?.settings?.metrics?.length || 0) > 1);\n\n    for (let i = 0; i < seriesList.length; i++) {\n      const series = seriesList[i];\n      series.target = this.getSeriesName(series, target, metricTypeCount > 1 || hasTopMetricWithMultipleMetrics);\n    }\n  }\n\n  processHits(hits: { total: { value: any }; hits: any[] }, seriesList: any[], target: ElasticsearchQuery) {\n    const hitsTotal = typeof hits.total === 'number' ? hits.total : hits.total.value; // <- Works with Elasticsearch 7.0+\n\n    const series: any = {\n      target: target.refId,\n      type: 'docs',\n      refId: target.refId,\n      datapoints: [],\n      total: hitsTotal,\n      filterable: true,\n    };\n    let propName, hit, doc: any, i;\n\n    for (i = 0; i < hits.hits.length; i++) {\n      hit = hits.hits[i];\n      doc = {\n        _id: hit._id,\n        _type: hit._type,\n        _index: hit._index,\n        sort: hit.sort,\n        highlight: hit.highlight,\n      };\n\n      if (hit._source) {\n        for (propName in hit._source) {\n          doc[propName] = hit._source[propName];\n        }\n      }\n\n      for (propName in hit.fields) {\n        doc[propName] = hit.fields[propName];\n      }\n      series.datapoints.push(doc);\n    }\n\n    seriesList.push(series);\n  }\n\n  trimDatapoints(aggregations: any, target: ElasticsearchQuery) {\n    const histogram: any = find(target.bucketAggs, { type: 'date_histogram' });\n\n    const shouldDropFirstAndLast = histogram && histogram.settings && histogram.settings.trimEdges;\n    if (shouldDropFirstAndLast) {\n      const trim = histogram.settings.trimEdges;\n      for (const prop in aggregations) {\n        const points = aggregations[prop];\n        if (points.datapoints.length > trim * 2) {\n          points.datapoints = points.datapoints.slice(trim, points.datapoints.length - trim);\n        }\n      }\n    }\n  }\n\n  getErrorFromElasticResponse(response: any, err: any) {\n    const result: any = {};\n    result.data = JSON.stringify(err, null, 4);\n    if (err.root_cause && err.root_cause.length > 0 && err.root_cause[0].reason) {\n      result.message = err.root_cause[0].reason;\n    } else {\n      result.message = err.reason || 'Unknown elastic error response';\n    }\n\n    if (response.$$config) {\n      result.config = response.$$config;\n    }\n\n    return result;\n  }\n\n  getTimeSeries() {\n    if (this.targets.some((target) => queryDef.hasMetricOfType(target, 'raw_data'))) {\n      return this.processResponseToDataFrames(false);\n    }\n    const result = this.processResponseToSeries();\n    return {\n      ...result,\n      data: result.data.map((item) => toDataFrame(item)),\n    };\n  }\n\n  getLogs(logMessageField?: string, logLevelField?: string): DataQueryResponse {\n    return this.processResponseToDataFrames(true, logMessageField, logLevelField);\n  }\n\n  private processResponseToDataFrames(\n    isLogsRequest: boolean,\n    logMessageField?: string,\n    logLevelField?: string\n  ): DataQueryResponse {\n    const dataFrame: DataFrame[] = [];\n    for (let n = 0; n < this.response.responses.length; n++) {\n      const response = this.response.responses[n];\n      if (response.error) {\n        throw this.getErrorFromElasticResponse(this.response, response.error);\n      }\n\n      if (response.hits) {\n        const { propNames, docs } = flattenHits(response.hits.hits);\n\n        const series = docs.length\n          ? createEmptyDataFrame(\n              propNames.map(toNameTypePair(docs)),\n              isLogsRequest,\n              this.targets[0].timeField,\n              logMessageField,\n              logLevelField\n            )\n          : createEmptyDataFrame([], isLogsRequest);\n\n        if (isLogsRequest) {\n          addPreferredVisualisationType(series, 'logs');\n        }\n\n        // Add a row for each document\n        for (const doc of docs) {\n          if (logLevelField) {\n            // Remap level field based on the datasource config. This field is\n            // then used in explore to figure out the log level. We may rewrite\n            // some actual data in the level field if they are different.\n            doc['level'] = doc[logLevelField];\n          }\n          // When highlighting exists, we need to collect all the highlighted\n          // phrases and add them to the DataFrame's meta.searchWords array.\n          if (doc.highlight) {\n            // There might be multiple words so we need two versions of the\n            // regular expression. One to match gobally, when used with part.match,\n            // it returns and array of matches. The second one is used to capture the\n            // values between the tags.\n            const globalHighlightWordRegex = new RegExp(HIGHLIGHT_TAGS_EXP, 'g');\n            const highlightWordRegex = new RegExp(HIGHLIGHT_TAGS_EXP);\n            const newSearchWords = Object.keys(doc.highlight)\n              .flatMap((key) => {\n                return doc.highlight[key].flatMap((line: string) => {\n                  const matchedPhrases = line.match(globalHighlightWordRegex);\n                  if (!matchedPhrases) {\n                    return [];\n                  }\n                  return matchedPhrases.map((part) => {\n                    const matches = part.match(highlightWordRegex);\n                    return (matches && matches[1]) || null;\n                  });\n                });\n              })\n              .filter(identity);\n            // If meta and searchWords already exists, add the words and\n            // deduplicate otherwise create a new set of search words.\n            const searchWords = series.meta?.searchWords\n              ? uniq([...series.meta.searchWords, ...newSearchWords])\n              : [...newSearchWords];\n            series.meta = series.meta ? { ...series.meta, searchWords } : { searchWords };\n          }\n          series.add(doc);\n        }\n\n        const target = this.targets[n];\n        series.refId = target.refId;\n        dataFrame.push(series);\n      }\n\n      if (response.aggregations) {\n        const aggregations = response.aggregations;\n        const target = this.targets[n];\n        const tmpSeriesList: any[] = [];\n        const table = new TableModel();\n\n        this.processBuckets(aggregations, target, tmpSeriesList, table, {}, 0);\n        this.trimDatapoints(tmpSeriesList, target);\n        this.nameSeries(tmpSeriesList, target);\n\n        if (table.rows.length > 0) {\n          const series = toDataFrame(table);\n          series.refId = target.refId;\n          dataFrame.push(series);\n        }\n\n        for (let y = 0; y < tmpSeriesList.length; y++) {\n          let series = toDataFrame(tmpSeriesList[y]);\n\n          // When log results, show aggregations only in graph. Log fields are then going to be shown in table.\n          if (isLogsRequest) {\n            addPreferredVisualisationType(series, 'graph');\n          }\n\n          series.refId = target.refId;\n          dataFrame.push(series);\n        }\n      }\n    }\n\n    for (let frame of dataFrame) {\n      for (let field of frame.fields) {\n        if (field.type === FieldType.time && typeof field.values[0] !== 'number') {\n          field.values = convertFieldType(field, { destinationType: FieldType.time }).values;\n        }\n      }\n    }\n\n    return { data: dataFrame };\n  }\n\n  processResponseToSeries = () => {\n    const seriesList = [];\n\n    for (let i = 0; i < this.response.responses.length; i++) {\n      const response = this.response.responses[i];\n      const target = this.targets[i];\n\n      if (response.error) {\n        throw this.getErrorFromElasticResponse(this.response, response.error);\n      }\n\n      if (response.hits && response.hits.hits.length > 0) {\n        this.processHits(response.hits, seriesList, target);\n      }\n\n      if (response.aggregations) {\n        const aggregations = response.aggregations;\n        const target = this.targets[i];\n        const tmpSeriesList: any[] = [];\n        const table = new TableModel();\n        table.refId = target.refId;\n\n        this.processBuckets(aggregations, target, tmpSeriesList, table, {}, 0);\n        this.trimDatapoints(tmpSeriesList, target);\n        this.nameSeries(tmpSeriesList, target);\n\n        for (let y = 0; y < tmpSeriesList.length; y++) {\n          seriesList.push(tmpSeriesList[y]);\n        }\n\n        if (table.rows.length > 0) {\n          seriesList.push(table);\n        }\n      }\n    }\n\n    return { data: seriesList };\n  };\n}\n\ntype Doc = {\n  _id: string;\n  _type: string;\n  _index: string;\n  _source?: any;\n  sort?: Array<string | number>;\n  highlight?: Record<string, string[]>;\n};\n\n/**\n * Flatten the docs from response mainly the _source part which can be nested. This flattens it so that it is one level\n * deep and the keys are: `level1Name.level2Name...`. Also returns list of all properties from all the docs (not all\n * docs have to have the same keys).\n * @param hits\n */\nconst flattenHits = (hits: Doc[]): { docs: Array<Record<string, any>>; propNames: string[] } => {\n  const docs: any[] = [];\n  // We keep a list of all props so that we can create all the fields in the dataFrame, this can lead\n  // to wide sparse dataframes in case the scheme is different per document.\n  let propNames: string[] = [];\n\n  for (const hit of hits) {\n    const flattened = hit._source ? flattenObject(hit._source) : {};\n    const doc = {\n      _id: hit._id,\n      _type: hit._type,\n      _index: hit._index,\n      sort: hit.sort,\n      highlight: hit.highlight,\n      _source: { ...flattened },\n      ...flattened,\n    };\n\n    for (const propName of Object.keys(doc)) {\n      if (propNames.indexOf(propName) === -1) {\n        propNames.push(propName);\n      }\n    }\n\n    docs.push(doc);\n  }\n\n  propNames.sort();\n  return { docs, propNames };\n};\n\n/**\n * Create empty dataframe but with created fields. Fields are based from propNames (should be from the response) and\n * also from configuration specified fields for message, time, and level.\n * @param propNames\n * @param timeField\n * @param logMessageField\n * @param logLevelField\n */\nconst createEmptyDataFrame = (\n  props: Array<[string, FieldType]>,\n  isLogsRequest: boolean,\n  timeField?: string,\n  logMessageField?: string,\n  logLevelField?: string\n): MutableDataFrame => {\n  const series = new MutableDataFrame({ fields: [] });\n\n  if (timeField) {\n    series.addField({\n      config: {\n        filterable: true,\n      },\n      name: timeField,\n      type: FieldType.time,\n    });\n  }\n\n  if (logMessageField) {\n    const f = series.addField({\n      name: logMessageField,\n      type: FieldType.string,\n    });\n    series.setParser(f, (v) => {\n      return v || '';\n    });\n  }\n\n  if (logLevelField) {\n    const f = series.addField({\n      name: 'level',\n      type: FieldType.string,\n    });\n    series.setParser(f, (v) => {\n      return v || '';\n    });\n  }\n\n  const fieldNames = series.fields.map((field) => field.name);\n\n  for (const [name, type] of props) {\n    // Do not duplicate fields. This can mean that we will shadow some fields.\n    if (fieldNames.includes(name)) {\n      continue;\n    }\n    // Do not add _source field (besides logs) as we are showing each _source field in table instead.\n    if (!isLogsRequest && name === '_source') {\n      continue;\n    }\n\n    const f = series.addField({\n      config: {\n        filterable: true,\n      },\n      name,\n      type,\n    });\n    series.setParser(f, (v) => {\n      return v || '';\n    });\n  }\n\n  return series;\n};\n\nconst addPreferredVisualisationType = (series: DataFrame, type: PreferredVisualisationType) => {\n  let s = series;\n  s.meta\n    ? (s.meta.preferredVisualisationType = type)\n    : (s.meta = {\n        preferredVisualisationType: type,\n      });\n};\n\nconst toNameTypePair =\n  (docs: Array<Record<string, unknown>>) =>\n  (propName: string): [string, FieldType] => [\n    propName,\n    guessType(docs.find((doc) => doc[propName] !== undefined)?.[propName]),\n  ];\n\n/**\n * Trying to guess data type from its value. This is far from perfect, as in order to have accurate guess\n * we should have access to the elasticsearch mapping, but it covers the most common use cases for numbers, strings & arrays.\n */\nconst guessType = (value: unknown): FieldType => {\n  switch (typeof value) {\n    case 'number':\n      return FieldType.number;\n    case 'string':\n      return FieldType.string;\n    default:\n      return FieldType.other;\n  }\n};\n","import { CoreApp, DashboardLoadedEvent, DataQueryRequest, DataQueryResponse } from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\n\nimport { REF_ID_STARTER_LOG_VOLUME } from './datasource';\nimport pluginJson from './plugin.json';\nimport { ElasticsearchAnnotationQuery, ElasticsearchQuery } from './types';\nimport { variableRegex } from './utils';\n\ntype ElasticSearchOnDashboardLoadedTrackingEvent = {\n  grafana_version?: string;\n  dashboard_id?: string;\n  org_id?: number;\n\n  /* The number of Elasticsearch queries present in the dashboard*/\n  queries_count: number;\n\n  /* The number of Elasticsearch logs queries present in the dashboard*/\n  logs_queries_count: number;\n\n  /* The number of Elasticsearch metric queries present in the dashboard*/\n  metric_queries_count: number;\n\n  /* The number of Elasticsearch raw data queries present in the dashboard*/\n  raw_data_queries_count: number;\n\n  /* The number of Elasticsearch raw documents queries present in the dashboard*/\n  raw_document_queries_count: number;\n\n  /* The number of Elasticsearch queries with used template variables present in the dashboard*/\n  queries_with_template_variables_count: number;\n\n  /* The number of Elasticsearch queries with changed line limit present in the dashboard*/\n  queries_with_changed_line_limit_count: number;\n\n  /* The number of Elasticsearch queries with lucene query present in the dashboard*/\n  queries_with_lucene_query_count: number;\n};\n\nexport const onDashboardLoadedHandler = ({\n  payload: { dashboardId, orgId, grafanaVersion, queries },\n}: DashboardLoadedEvent<ElasticsearchQuery>) => {\n  try {\n    // We only want to track visible ElasticSearch queries\n    const elasticsearchQueries = queries[pluginJson.id]?.filter((query) => !query.hide);\n    if (!elasticsearchQueries?.length) {\n      return;\n    }\n\n    const queriesWithTemplateVariables = elasticsearchQueries.filter(isQueryWithTemplateVariables);\n    const queriesWithLuceneQuery = elasticsearchQueries.filter((query) => !!query.query);\n    const logsQueries = elasticsearchQueries.filter((query) => getQueryType(query) === 'logs');\n    const metricQueries = elasticsearchQueries.filter((query) => getQueryType(query) === 'metric');\n    const rawDataQueries = elasticsearchQueries.filter((query) => getQueryType(query) === 'raw_data');\n    const rawDocumentQueries = elasticsearchQueries.filter((query) => getQueryType(query) === 'raw_document');\n    const queriesWithChangedLineLimit = elasticsearchQueries.filter(isQueryWithChangedLineLimit);\n\n    const event: ElasticSearchOnDashboardLoadedTrackingEvent = {\n      grafana_version: grafanaVersion,\n      dashboard_id: dashboardId,\n      org_id: orgId,\n      queries_count: elasticsearchQueries.length,\n      logs_queries_count: logsQueries.length,\n      metric_queries_count: metricQueries.length,\n      raw_data_queries_count: rawDataQueries.length,\n      raw_document_queries_count: rawDocumentQueries.length,\n      queries_with_template_variables_count: queriesWithTemplateVariables.length,\n      queries_with_changed_line_limit_count: queriesWithChangedLineLimit.length,\n      queries_with_lucene_query_count: queriesWithLuceneQuery.length,\n    };\n\n    reportInteraction('grafana_elasticsearch_dashboard_loaded', event);\n  } catch (error) {\n    console.error('error in elasticsearch tracking handler', error);\n  }\n};\n\nconst getQueryType = (query: ElasticsearchQuery): string | undefined => {\n  if (!query.metrics || !query.metrics.length) {\n    return undefined;\n  }\n  const nonMetricQueryTypes = ['logs', 'raw_data', 'raw_document'];\n  if (nonMetricQueryTypes.includes(query.metrics[0].type)) {\n    return query.metrics[0].type;\n  }\n  return 'metric';\n};\n\nconst getLineLimit = (query: ElasticsearchQuery): number | undefined => {\n  if (query.metrics?.[0]?.type !== 'logs') {\n    return undefined;\n  }\n\n  const lineLimit = query.metrics?.[0].settings?.limit;\n  return lineLimit ? parseInt(lineLimit, 10) : undefined;\n};\n\nconst isQueryWithChangedLineLimit = (query: ElasticsearchQuery): boolean => {\n  const lineLimit = getLineLimit(query);\n  return lineLimit !== undefined && lineLimit !== 500;\n};\n\nconst isQueryWithTemplateVariables = (query: ElasticsearchQuery): boolean => {\n  return variableRegex.test(query.query ?? '');\n};\n\nconst shouldNotReportBasedOnRefId = (refId: string): boolean => {\n  if (refId.startsWith(REF_ID_STARTER_LOG_VOLUME)) {\n    return true;\n  }\n  return false;\n};\n\nexport function trackQuery(\n  response: DataQueryResponse,\n  request: DataQueryRequest<ElasticsearchQuery> & { targets: ElasticsearchQuery[] },\n  startTime: Date\n): void {\n  const { targets: queries, app } = request;\n  if (app === CoreApp.Dashboard || app === CoreApp.PanelViewer) {\n    return;\n  }\n\n  for (const query of queries) {\n    if (shouldNotReportBasedOnRefId(query.refId)) {\n      return;\n    }\n    reportInteraction('grafana_elasticsearch_query_executed', {\n      app,\n      grafana_version: config.buildInfo.version,\n      with_lucene_query: query.query ? true : false,\n      query_type: getQueryType(query),\n      line_limit: getLineLimit(query),\n      alias: query.alias,\n      has_error: response.error !== undefined,\n      has_data: response.data.some((frame) => frame.length > 0),\n      simultaneously_sent_query_count: queries.length,\n      time_range_from: request?.range?.from?.toISOString(),\n      time_range_to: request?.range?.to?.toISOString(),\n      time_taken: Date.now() - startTime.getTime(),\n    });\n  }\n}\n\nexport function trackAnnotationQuery(annotation: ElasticsearchAnnotationQuery): void {\n  reportInteraction('grafana_elasticsearch_annotation_query_executed', {\n    grafana_version: config.buildInfo.version,\n    has_target_query: !!annotation.target?.query,\n    has_query: !!annotation.query,\n    has_time_field: !!annotation.timeField,\n    has_time_end_field: !!annotation.timeEndField,\n    has_tags_field: !!annotation.tagsField,\n    has_text_field: !!annotation.textField,\n    has_index: !!annotation.index,\n  });\n}\n","import { first as _first, cloneDeep } from 'lodash';\nimport { lastValueFrom, Observable, of, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport {\n  DataFrame,\n  DataQueryRequest,\n  DataQueryResponse,\n  dateTime,\n  ensureTimeField,\n  Field,\n  LogRowContextOptions,\n  LogRowContextQueryDirection,\n  LogRowModel,\n} from '@grafana/data';\nimport { BackendSrvRequest, getBackendSrv, TemplateSrv } from '@grafana/runtime';\n\nimport { ElasticResponse } from './ElasticResponse';\nimport { ElasticDatasource, enhanceDataFrameWithDataLinks } from './datasource';\nimport { defaultBucketAgg, hasMetricOfType } from './queryDef';\nimport { trackQuery } from './tracking';\nimport { DataLinkConfig, ElasticsearchQuery, Logs } from './types';\n\nexport class LegacyQueryRunner {\n  datasource: ElasticDatasource;\n  templateSrv: TemplateSrv;\n\n  constructor(datasource: ElasticDatasource, templateSrv: TemplateSrv) {\n    this.datasource = datasource;\n    this.templateSrv = templateSrv;\n  }\n\n  request(\n    method: string,\n    url: string,\n    data?: BackendSrvRequest['data'],\n    headers?: BackendSrvRequest['headers']\n  ): Observable<any> {\n    if (!this.datasource.isProxyAccess) {\n      const error = new Error(\n        'Browser access mode in the Elasticsearch datasource is no longer available. Switch to server access mode.'\n      );\n      return throwError(() => error);\n    }\n\n    const options: BackendSrvRequest = {\n      url: this.datasource.url + '/' + url,\n      method,\n      data,\n      headers,\n    };\n\n    if (method === 'POST') {\n      options.headers = options.headers ?? {};\n      options.headers['Content-Type'] = 'application/x-ndjson';\n    }\n\n    if (this.datasource.basicAuth || this.datasource.withCredentials) {\n      options.withCredentials = true;\n    }\n    if (this.datasource.basicAuth) {\n      options.headers = {\n        Authorization: this.datasource.basicAuth,\n      };\n    }\n\n    return getBackendSrv()\n      .fetch<any>(options)\n      .pipe(\n        map((results) => {\n          results.data.$$config = results.config;\n          return results.data;\n        }),\n        catchError((err) => {\n          if (err.data) {\n            const message = err.data.error?.reason ?? err.data.message ?? 'Unknown error';\n\n            return throwError({\n              message,\n              error: err.data.error,\n            });\n          }\n\n          return throwError(err);\n        })\n      );\n  }\n\n  async logContextQuery(row: LogRowModel, options?: LogRowContextOptions): Promise<{ data: DataFrame[] }> {\n    const sortField = row.dataFrame.fields.find((f) => f.name === 'sort');\n    const searchAfter = sortField?.values[row.rowIndex] || [row.timeEpochMs];\n    const sort = options?.direction === LogRowContextQueryDirection.Forward ? 'asc' : 'desc';\n\n    const header =\n      options?.direction === LogRowContextQueryDirection.Forward\n        ? this.datasource.getQueryHeader('query_then_fetch', dateTime(row.timeEpochMs))\n        : this.datasource.getQueryHeader('query_then_fetch', undefined, dateTime(row.timeEpochMs));\n\n    const limit = options?.limit ?? 10;\n    const esQuery = JSON.stringify({\n      size: limit,\n      query: {\n        bool: {\n          filter: [\n            {\n              range: {\n                [this.datasource.timeField]: {\n                  [options?.direction === LogRowContextQueryDirection.Forward ? 'gte' : 'lte']: row.timeEpochMs,\n                  format: 'epoch_millis',\n                },\n              },\n            },\n          ],\n        },\n      },\n      sort: [{ [this.datasource.timeField]: sort }, { _doc: sort }],\n      search_after: searchAfter,\n    });\n    const payload = [header, esQuery].join('\\n') + '\\n';\n    const url = this.datasource.getMultiSearchUrl();\n    const response = await lastValueFrom(this.request('POST', url, payload));\n    const targets: ElasticsearchQuery[] = [{ refId: `${row.dataFrame.refId}`, metrics: [{ type: 'logs', id: '1' }] }];\n    const elasticResponse = new ElasticResponse(targets, transformHitsBasedOnDirection(response, sort));\n    const logResponse = elasticResponse.getLogs(this.datasource.logMessageField, this.datasource.logLevelField);\n    const dataFrame = _first(logResponse.data);\n    if (!dataFrame) {\n      return { data: [] };\n    }\n    /**\n     * The LogRowContext requires there is a field in the dataFrame.fields\n     * named `ts` for timestamp and `line` for the actual log line to display.\n     * Unfortunatly these fields are hardcoded and are required for the lines to\n     * be properly displayed. This code just copies the fields based on this.timeField\n     * and this.logMessageField and recreates the dataFrame so it works.\n     */\n    const timestampField = dataFrame.fields.find((f: Field) => f.name === this.datasource.timeField);\n    const lineField = dataFrame.fields.find((f: Field) => f.name === this.datasource.logMessageField);\n    const otherFields = dataFrame.fields.filter((f: Field) => f !== timestampField && f !== lineField);\n    if (timestampField && lineField) {\n      return {\n        data: [\n          {\n            ...dataFrame,\n            fields: [ensureTimeField(timestampField), lineField, ...otherFields],\n          },\n        ],\n      };\n    }\n    return logResponse;\n  }\n\n  query(request: DataQueryRequest<ElasticsearchQuery>): Observable<DataQueryResponse> {\n    let payload = '';\n    const targets = this.datasource.interpolateVariablesInQueries(\n      cloneDeep(request.targets),\n      request.scopedVars,\n      request.filters\n    );\n    const sentTargets: ElasticsearchQuery[] = [];\n    let targetsContainsLogsQuery = targets.some((target) => hasMetricOfType(target, 'logs'));\n\n    const logLimits: Array<number | undefined> = [];\n\n    for (const target of targets) {\n      if (target.hide) {\n        continue;\n      }\n\n      let queryObj;\n      if (hasMetricOfType(target, 'logs')) {\n        // FIXME: All this logic here should be in the query builder.\n        // When moving to the BE-only implementation we should remove this and let the BE\n        // Handle this.\n        // TODO: defaultBucketAgg creates a dete_histogram aggregation without a field, so it fallbacks to\n        // the configured timeField. we should allow people to use a different time field here.\n        target.bucketAggs = [defaultBucketAgg()];\n\n        const log = target.metrics?.find((m) => m.type === 'logs') as Logs;\n        const limit = log.settings?.limit ? parseInt(log.settings?.limit, 10) : 500;\n        logLimits.push(limit);\n\n        target.metrics = [];\n        // Setting this for metrics queries that are typed as logs\n        queryObj = this.datasource.queryBuilder.getLogsQuery(target, limit);\n      } else {\n        logLimits.push();\n        if (target.alias) {\n          target.alias = this.datasource.interpolateLuceneQuery(target.alias, request.scopedVars);\n        }\n\n        queryObj = this.datasource.queryBuilder.build(target);\n      }\n\n      const esQuery = JSON.stringify(queryObj);\n\n      const searchType = 'query_then_fetch';\n      const header = this.datasource.getQueryHeader(searchType, request.range.from, request.range.to);\n      payload += header + '\\n';\n\n      payload += esQuery + '\\n';\n\n      sentTargets.push(target);\n    }\n\n    if (sentTargets.length === 0) {\n      return of({ data: [] });\n    }\n\n    // We replace the range here for actual values. We need to replace it together with enclosing \"\" so that we replace\n    // it as an integer not as string with digits. This is because elastic will convert the string only if the time\n    // field is specified as type date (which probably should) but can also be specified as integer (millisecond epoch)\n    // and then sending string will error out.\n    payload = payload.replace(/\"\\$timeFrom\"/g, request.range.from.valueOf().toString());\n    payload = payload.replace(/\"\\$timeTo\"/g, request.range.to.valueOf().toString());\n    payload = this.templateSrv.replace(payload, request.scopedVars);\n\n    const url = this.datasource.getMultiSearchUrl();\n\n    const start = new Date();\n    return this.request('POST', url, payload).pipe(\n      map((res) => {\n        const er = new ElasticResponse(sentTargets, res);\n\n        // TODO: This needs to be revisited, it seems wrong to process ALL the sent queries as logs if only one of them was a log query\n        if (targetsContainsLogsQuery) {\n          const response = er.getLogs(this.datasource.logMessageField, this.datasource.logLevelField);\n\n          response.data.forEach((dataFrame, index) => {\n            enhanceDataFrame(dataFrame, this.datasource.dataLinks, logLimits[index]);\n          });\n          return response;\n        }\n\n        return er.getTimeSeries();\n      }),\n      tap((response) => trackQuery(response, request, start))\n    );\n  }\n}\n\nfunction transformHitsBasedOnDirection(response: any, direction: 'asc' | 'desc') {\n  if (direction === 'desc') {\n    return response;\n  }\n  const actualResponse = response.responses[0];\n  return {\n    ...response,\n    responses: [\n      {\n        ...actualResponse,\n        hits: {\n          ...actualResponse.hits,\n          hits: actualResponse.hits.hits.reverse(),\n        },\n      },\n    ],\n  };\n}\n\n/**\n * Modifies dataFrame and adds dataLinks from the config.\n * Exported for tests.\n */\nexport function enhanceDataFrame(dataFrame: DataFrame, dataLinks: DataLinkConfig[], limit?: number) {\n  if (limit) {\n    dataFrame.meta = {\n      ...dataFrame.meta,\n      limit,\n    };\n  }\n  enhanceDataFrameWithDataLinks(dataFrame, dataLinks);\n}\n","import React from 'react';\n\nimport { AnnotationQuery } from '@grafana/data';\nimport { EditorField, EditorRow } from '@grafana/experimental';\nimport { Input, Stack } from '@grafana/ui';\n\nimport { ElasticsearchQuery } from '../../types';\n\nimport { ElasticQueryEditorProps, ElasticSearchQueryField } from './index';\n\ntype Props = ElasticQueryEditorProps & {\n  annotation?: AnnotationQuery<ElasticsearchQuery>;\n  onAnnotationChange?: (annotation: AnnotationQuery<ElasticsearchQuery>) => void;\n};\n\nexport function ElasticsearchAnnotationsQueryEditor(props: Props) {\n  const annotation = props.annotation!;\n  const onAnnotationChange = props.onAnnotationChange!;\n\n  return (\n    <Stack direction=\"column\" gap={5}>\n      <div>\n        <ElasticSearchQueryField\n          value={annotation.target?.query}\n          onChange={(query) => {\n            const currentTarget = annotation.target ?? { refId: 'annotation_query' };\n            const newTarget = {\n              ...currentTarget,\n              query,\n            };\n\n            onAnnotationChange({\n              ...annotation,\n              target: newTarget,\n            });\n          }}\n        />\n      </div>\n\n      <div>\n        <h6>Field mappings</h6>\n        <EditorRow>\n          <EditorField label=\"Time\">\n            <Input\n              type=\"text\"\n              placeholder=\"@timestamp\"\n              value={annotation.timeField}\n              onChange={(e) => {\n                onAnnotationChange({\n                  ...annotation,\n                  timeField: e.currentTarget.value,\n                });\n              }}\n            />\n          </EditorField>\n          <EditorField label=\"Time End\">\n            <Input\n              type=\"text\"\n              value={annotation.timeEndField}\n              onChange={(e) => {\n                onAnnotationChange({\n                  ...annotation,\n                  timeEndField: e.currentTarget.value,\n                });\n              }}\n            />\n          </EditorField>\n          <EditorField label=\"Text\">\n            <Input\n              type=\"text\"\n              value={annotation.textField}\n              onChange={(e) => {\n                onAnnotationChange({\n                  ...annotation,\n                  textField: e.currentTarget.value,\n                });\n              }}\n            />\n          </EditorField>\n          <EditorField label=\"Tags\">\n            <Input\n              type=\"text\"\n              placeholder=\"tags\"\n              value={annotation.tagsField}\n              onChange={(e) => {\n                onAnnotationChange({\n                  ...annotation,\n                  tagsField: e.currentTarget.value,\n                });\n              }}\n            />\n          </EditorField>\n        </EditorRow>\n      </div>\n\n      {/*Empty div to preserve the bottom margin */}\n      <div />\n    </Stack>\n  );\n}\n","import { ExtendedStats, MetricAggregation } from './dataquery.gen';\n\nexport function isMetricAggregationWithMeta(metric: MetricAggregation): metric is ExtendedStats {\n  if (!metric || typeof metric !== 'object') {\n    return false;\n  }\n  return 'meta' in metric;\n}\n","import { isEqual } from 'lodash';\nimport lucene, { AST, BinaryAST, LeftOnlyAST, NodeTerm } from 'lucene';\n\nimport { AdHocVariableFilter } from '@grafana/data';\n\ntype ModifierType = '' | '-';\n\n/**\n * Checks for the presence of a given label:\"value\" filter in the query.\n */\nexport function queryHasFilter(query: string, key: string, value: string, modifier: ModifierType = ''): boolean {\n  return findFilterNode(query, key, value, modifier) !== null;\n}\n\n/**\n * Given a query, find the NodeTerm that matches the given field and value.\n */\nexport function findFilterNode(\n  query: string,\n  key: string,\n  value: string,\n  modifier: ModifierType = ''\n): NodeTerm | null {\n  const field = `${modifier}${lucene.term.escape(key)}`;\n  value = lucene.phrase.escape(value);\n  let ast: AST | null = parseQuery(query);\n  if (!ast) {\n    return null;\n  }\n\n  return findNodeInTree(ast, field, value);\n}\n\nfunction findNodeInTree(ast: AST, field: string, value: string): NodeTerm | null {\n  // {}\n  if (Object.keys(ast).length === 0) {\n    return null;\n  }\n  // { left: {}, right: {} } or { left: {} }\n  if (isAST(ast.left)) {\n    return findNodeInTree(ast.left, field, value);\n  }\n  if (isNodeTerm(ast.left) && ast.left.field === field && ast.left.term === value) {\n    return ast.left;\n  }\n  if (isLeftOnlyAST(ast)) {\n    return null;\n  }\n  if (isNodeTerm(ast.right) && ast.right.field === field && ast.right.term === value) {\n    return ast.right;\n  }\n  if (isBinaryAST(ast.right)) {\n    return findNodeInTree(ast.right, field, value);\n  }\n  return null;\n}\n\n/**\n * Adds a label:\"value\" expression to the query.\n */\nexport function addFilterToQuery(query: string, key: string, value: string, modifier: ModifierType = ''): string {\n  if (queryHasFilter(query, key, value, modifier)) {\n    return query;\n  }\n\n  key = escapeFilter(key);\n  value = escapeFilterValue(value);\n  const filter = `${modifier}${key}:\"${value}\"`;\n\n  return concatenate(query, filter);\n}\n\n/**\n * Merge a query with a filter.\n */\nfunction concatenate(query: string, filter: string, condition = 'AND'): string {\n  if (!filter) {\n    return query;\n  }\n  return query.trim() === '' ? filter : `${query} ${condition} ${filter}`;\n}\n\n/**\n * Adds a label:\"value\" expression to the query.\n */\nexport function addAddHocFilter(query: string, filter: AdHocVariableFilter): string {\n  if (!filter.key || !filter.value) {\n    return query;\n  }\n\n  filter = {\n    ...filter,\n    // Type is defined as string, but it can be a number.\n    value: filter.value.toString(),\n  };\n\n  const equalityFilters = ['=', '!='];\n  if (equalityFilters.includes(filter.operator)) {\n    return addFilterToQuery(query, filter.key, filter.value, filter.operator === '=' ? '' : '-');\n  }\n  /**\n   * Keys and values in ad hoc filters may contain characters such as\n   * colons, which needs to be escaped.\n   */\n  const key = escapeFilter(filter.key);\n  const value = escapeFilterValue(filter.value);\n  let addHocFilter = '';\n  switch (filter.operator) {\n    case '=~':\n      addHocFilter = `${key}:/${value}/`;\n      break;\n    case '!~':\n      addHocFilter = `-${key}:/${value}/`;\n      break;\n    case '>':\n      addHocFilter = `${key}:>${value}`;\n      break;\n    case '<':\n      addHocFilter = `${key}:<${value}`;\n      break;\n  }\n  return concatenate(query, addHocFilter);\n}\n\n/**\n * Removes a label:\"value\" expression from the query.\n */\nexport function removeFilterFromQuery(query: string, key: string, value: string, modifier: ModifierType = ''): string {\n  const node = findFilterNode(query, key, value, modifier);\n  const ast = parseQuery(query);\n  if (!node || !ast) {\n    return query;\n  }\n\n  return lucene.toString(removeNodeFromTree(ast, node));\n}\n\nfunction removeNodeFromTree(ast: AST, node: NodeTerm): AST {\n  // {}\n  if (Object.keys(ast).length === 0) {\n    return ast;\n  }\n  // { left: {}, right: {} } or { left: {} }\n  if (isAST(ast.left)) {\n    ast.left = removeNodeFromTree(ast.left, node);\n    return ast;\n  }\n  if (isNodeTerm(ast.left) && isEqual(ast.left, node)) {\n    Object.assign(\n      ast,\n      {\n        left: undefined,\n        operator: undefined,\n        right: undefined,\n      },\n      'right' in ast ? ast.right : {}\n    );\n    return ast;\n  }\n  if (isLeftOnlyAST(ast)) {\n    return ast;\n  }\n  if (isNodeTerm(ast.right) && isEqual(ast.right, node)) {\n    Object.assign(ast, {\n      right: undefined,\n      operator: undefined,\n    });\n    return ast;\n  }\n  if (isBinaryAST(ast.right)) {\n    ast.right = removeNodeFromTree(ast.right, node);\n    return ast;\n  }\n  return ast;\n}\n\n/**\n * Filters can possibly reserved characters such as colons which are part of the Lucene syntax.\n * Use this function to escape filter keys.\n */\nexport function escapeFilter(value: string) {\n  return lucene.term.escape(value);\n}\n\n/**\n * Values can possibly reserved special characters such as quotes.\n * Use this function to escape filter values.\n */\nexport function escapeFilterValue(value: string) {\n  value = value.replace(/\\\\/g, '\\\\\\\\');\n  return lucene.phrase.escape(value);\n}\n\n/**\n * Normalizes the query by removing whitespace around colons, which breaks parsing.\n */\nfunction normalizeQuery(query: string) {\n  return query.replace(/(\\w+)\\s(:)/gi, '$1$2');\n}\n\nfunction isLeftOnlyAST(ast: unknown): ast is LeftOnlyAST {\n  if (!ast || typeof ast !== 'object') {\n    return false;\n  }\n\n  if ('left' in ast && !('right' in ast)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isBinaryAST(ast: unknown): ast is BinaryAST {\n  if (!ast || typeof ast !== 'object') {\n    return false;\n  }\n\n  if ('left' in ast && 'right' in ast) {\n    return true;\n  }\n  return false;\n}\n\nfunction isAST(ast: unknown): ast is AST {\n  return isLeftOnlyAST(ast) || isBinaryAST(ast);\n}\n\nfunction isNodeTerm(ast: unknown): ast is NodeTerm {\n  if (ast && typeof ast === 'object' && 'term' in ast) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction parseQuery(query: string) {\n  try {\n    return lucene.parse(normalizeQuery(query));\n  } catch (e) {\n    return null;\n  }\n}\n\nexport function addStringFilterToQuery(query: string, filter: string, contains = true) {\n  const expression = `\"${escapeFilterValue(filter)}\"`;\n  return query.trim() ? `${query} ${contains ? 'AND' : 'NOT'} ${expression}` : `${contains ? '' : 'NOT '}${expression}`;\n}\n","import { cloneDeep, find, first as _first, isNumber, isObject, isString, map as _map } from 'lodash';\nimport { from, generate, lastValueFrom, Observable, of } from 'rxjs';\nimport { catchError, first, map, mergeMap, skipWhile, throwIfEmpty, tap } from 'rxjs/operators';\nimport { SemVer } from 'semver';\n\nimport {\n  DataFrame,\n  DataLink,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceInstanceSettings,\n  DataSourceWithLogsContextSupport,\n  DataSourceWithQueryImportSupport,\n  DataSourceWithSupplementaryQueriesSupport,\n  DateTime,\n  dateTime,\n  getDefaultTimeRange,\n  AbstractQuery,\n  LogLevel,\n  LogRowModel,\n  MetricFindValue,\n  ScopedVars,\n  TimeRange,\n  QueryFixAction,\n  CoreApp,\n  SupplementaryQueryType,\n  DataQueryError,\n  rangeUtil,\n  LogRowContextQueryDirection,\n  LogRowContextOptions,\n  SupplementaryQueryOptions,\n  toUtc,\n  AnnotationEvent,\n  DataSourceWithToggleableQueryFiltersSupport,\n  QueryFilterOptions,\n  ToggleFilterAction,\n  DataSourceGetTagValuesOptions,\n  AdHocVariableFilter,\n  DataSourceWithQueryModificationSupport,\n  AdHocVariableModel,\n  TypedVariableModel,\n} from '@grafana/data';\nimport {\n  DataSourceWithBackend,\n  getDataSourceSrv,\n  config,\n  BackendSrvRequest,\n  TemplateSrv,\n  getTemplateSrv,\n} from '@grafana/runtime';\n\nimport { IndexPattern, intervalMap } from './IndexPattern';\nimport LanguageProvider from './LanguageProvider';\nimport { LegacyQueryRunner } from './LegacyQueryRunner';\nimport { ElasticQueryBuilder } from './QueryBuilder';\nimport { ElasticsearchAnnotationsQueryEditor } from './components/QueryEditor/AnnotationQueryEditor';\nimport { isBucketAggregationWithField } from './components/QueryEditor/BucketAggregationsEditor/aggregations';\nimport { bucketAggregationConfig } from './components/QueryEditor/BucketAggregationsEditor/utils';\nimport {\n  isMetricAggregationWithField,\n  isPipelineAggregationWithMultipleBucketPaths,\n} from './components/QueryEditor/MetricAggregationsEditor/aggregations';\nimport { metricAggregationConfig } from './components/QueryEditor/MetricAggregationsEditor/utils';\nimport { isMetricAggregationWithMeta } from './guards';\nimport {\n  addAddHocFilter,\n  addFilterToQuery,\n  addStringFilterToQuery,\n  queryHasFilter,\n  removeFilterFromQuery,\n} from './modifyQuery';\nimport { trackAnnotationQuery, trackQuery } from './tracking';\nimport {\n  Logs,\n  BucketAggregation,\n  DataLinkConfig,\n  ElasticsearchOptions,\n  ElasticsearchQuery,\n  TermsQuery,\n  Interval,\n  ElasticsearchAnnotationQuery,\n  RangeMap,\n} from './types';\nimport { getScriptValue, isSupportedVersion, isTimeSeriesQuery, unsupportedVersionMessage } from './utils';\n\nexport const REF_ID_STARTER_LOG_VOLUME = 'log-volume-';\nexport const REF_ID_STARTER_LOG_SAMPLE = 'log-sample-';\n\n// Those are metadata fields as defined in https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-fields.html#_identity_metadata_fields.\n// custom fields can start with underscores, therefore is not safe to exclude anything that starts with one.\nconst ELASTIC_META_FIELDS = [\n  '_index',\n  '_type',\n  '_id',\n  '_source',\n  '_size',\n  '_field_names',\n  '_ignored',\n  '_routing',\n  '_meta',\n];\n\nexport class ElasticDatasource\n  extends DataSourceWithBackend<ElasticsearchQuery, ElasticsearchOptions>\n  implements\n    DataSourceWithLogsContextSupport,\n    DataSourceWithQueryImportSupport<ElasticsearchQuery>,\n    DataSourceWithSupplementaryQueriesSupport<ElasticsearchQuery>,\n    DataSourceWithToggleableQueryFiltersSupport<ElasticsearchQuery>,\n    DataSourceWithQueryModificationSupport<ElasticsearchQuery>\n{\n  basicAuth?: string;\n  withCredentials?: boolean;\n  url: string;\n  name: string;\n  index: string;\n  timeField: string;\n  interval: string;\n  maxConcurrentShardRequests?: number;\n  queryBuilder: ElasticQueryBuilder;\n  indexPattern: IndexPattern;\n  intervalPattern?: Interval;\n  logMessageField?: string;\n  logLevelField?: string;\n  dataLinks: DataLinkConfig[];\n  languageProvider: LanguageProvider;\n  includeFrozen: boolean;\n  isProxyAccess: boolean;\n  databaseVersion: SemVer | null;\n  legacyQueryRunner: LegacyQueryRunner;\n\n  constructor(\n    instanceSettings: DataSourceInstanceSettings<ElasticsearchOptions>,\n    private readonly templateSrv: TemplateSrv = getTemplateSrv()\n  ) {\n    super(instanceSettings);\n    this.basicAuth = instanceSettings.basicAuth;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.url = instanceSettings.url!;\n    this.name = instanceSettings.name;\n    this.isProxyAccess = instanceSettings.access === 'proxy';\n    const settingsData = instanceSettings.jsonData || {};\n\n    this.index = settingsData.index ?? instanceSettings.database ?? '';\n    this.timeField = settingsData.timeField;\n    this.indexPattern = new IndexPattern(this.index, settingsData.interval);\n    this.intervalPattern = settingsData.interval;\n    this.interval = settingsData.timeInterval;\n    this.maxConcurrentShardRequests = settingsData.maxConcurrentShardRequests;\n    this.queryBuilder = new ElasticQueryBuilder({\n      timeField: this.timeField,\n    });\n    this.logMessageField = settingsData.logMessageField || '';\n    this.logLevelField = settingsData.logLevelField || '';\n    this.dataLinks = settingsData.dataLinks || [];\n    this.includeFrozen = settingsData.includeFrozen ?? false;\n    this.databaseVersion = null;\n    this.annotations = {\n      QueryEditor: ElasticsearchAnnotationsQueryEditor,\n    };\n\n    if (this.logMessageField === '') {\n      this.logMessageField = undefined;\n    }\n\n    if (this.logLevelField === '') {\n      this.logLevelField = undefined;\n    }\n    this.languageProvider = new LanguageProvider(this);\n    this.legacyQueryRunner = new LegacyQueryRunner(this, this.templateSrv);\n  }\n\n  getResourceRequest(path: string, params?: BackendSrvRequest['params'], options?: Partial<BackendSrvRequest>) {\n    return this.getResource(path, params, options);\n  }\n\n  postResourceRequest(path: string, data?: BackendSrvRequest['data'], options?: Partial<BackendSrvRequest>) {\n    const resourceOptions = options ?? {};\n    resourceOptions.headers = resourceOptions.headers ?? {};\n    resourceOptions.headers['content-type'] = 'application/x-ndjson';\n\n    return this.postResource(path, data, resourceOptions);\n  }\n\n  async importFromAbstractQueries(abstractQueries: AbstractQuery[]): Promise<ElasticsearchQuery[]> {\n    return abstractQueries.map((abstractQuery) => this.languageProvider.importFromAbstractQuery(abstractQuery));\n  }\n\n  /**\n   * Sends a GET request to the specified url on the newest matching and available index.\n   *\n   * When multiple indices span the provided time range, the request is sent starting from the newest index,\n   * and then going backwards until an index is found.\n   */\n  private requestAllIndices(range = getDefaultTimeRange()) {\n    let indexList = this.indexPattern.getIndexList(range.from, range.to);\n    if (!Array.isArray(indexList)) {\n      indexList = [this.indexPattern.getIndexForToday()];\n    }\n\n    const url = '_mapping';\n\n    const indexUrlList = indexList.map((index) => {\n      // make sure `index` does not end with a slash\n      index = index.replace(/\\/$/, '');\n      if (index === '') {\n        return url;\n      }\n\n      return `${index}/${url}`;\n    });\n\n    const maxTraversals = 7; // do not go beyond one week (for a daily pattern)\n    const listLen = indexUrlList.length;\n\n    return generate({\n      initialState: 0,\n      condition: (i) => i < Math.min(listLen, maxTraversals),\n      iterate: (i) => i + 1,\n    }).pipe(\n      mergeMap((index) => {\n        // catch all errors and emit an object with an err property to simplify checks later in the pipeline\n        const path = indexUrlList[listLen - index - 1];\n        const requestObservable = config.featureToggles.enableElasticsearchBackendQuerying\n          ? from(this.getResource(path))\n          : this.legacyQueryRunner.request('GET', path);\n\n        return requestObservable.pipe(catchError((err) => of({ err })));\n      }),\n      skipWhile((resp) => resp?.err?.status === 404), // skip all requests that fail because missing Elastic index\n      throwIfEmpty(() => 'Could not find an available index for this time range.'), // when i === Math.min(listLen, maxTraversals) generate will complete but without emitting any values which means we didn't find a valid index\n      first(), // take the first value that isn't skipped\n      map((resp) => {\n        if (resp.err) {\n          throw resp.err; // if there is some other error except 404 then we must throw it\n        }\n\n        return resp;\n      })\n    );\n  }\n\n  annotationQuery(options: any): Promise<AnnotationEvent[]> {\n    const payload = this.prepareAnnotationRequest(options);\n    trackAnnotationQuery(options.annotation);\n    const annotationObservable = config.featureToggles.enableElasticsearchBackendQuerying\n      ? // TODO: We should migrate this to use query and not resource call\n        // The plan is to look at this when we start to work on raw query editor for ES\n        // as we will have to explore how to handle any query\n        from(this.postResourceRequest('_msearch', payload))\n      : this.legacyQueryRunner.request('POST', '_msearch', payload);\n\n    return lastValueFrom(\n      annotationObservable.pipe(\n        map((res) => {\n          const hits = res.responses[0].hits.hits;\n          return this.processHitsToAnnotationEvents(options.annotation, hits);\n        })\n      )\n    );\n  }\n\n  private prepareAnnotationRequest(options: {\n    annotation: ElasticsearchAnnotationQuery;\n    // Should be DashboardModel but cannot import that here from the main app. This is a temporary solution as we need to move from deprecated annotations.\n    dashboard: { getVariables: () => TypedVariableModel[] };\n    range: TimeRange;\n  }) {\n    const annotation = options.annotation;\n    const timeField = annotation.timeField || '@timestamp';\n    const timeEndField = annotation.timeEndField || null;\n    const dashboard = options.dashboard;\n\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    const adhocVariables = dashboard.getVariables().filter((v) => v.type === 'adhoc') as AdHocVariableModel[];\n    const annotationRelatedVariables = adhocVariables.filter((v) => v.datasource?.uid === annotation.datasource.uid);\n    const filters = annotationRelatedVariables.map((v) => v.filters).flat();\n\n    // the `target.query` is the \"new\" location for the query.\n    // normally we would write this code as\n    // try-the-new-place-then-try-the-old-place,\n    // but we had the bug at\n    // https://github.com/grafana/grafana/issues/61107\n    // that may have stored annotations where\n    // both the old and the new place are set,\n    // and in that scenario the old place needs\n    // to have priority.\n    const queryString = annotation.query ?? annotation.target?.query ?? '';\n\n    const dateRanges = [];\n    const rangeStart: RangeMap = {};\n    rangeStart[timeField] = {\n      from: options.range.from.valueOf(),\n      to: options.range.to.valueOf(),\n      format: 'epoch_millis',\n    };\n    dateRanges.push({ range: rangeStart });\n\n    if (timeEndField) {\n      const rangeEnd: RangeMap = {};\n      rangeEnd[timeEndField] = {\n        from: options.range.from.valueOf(),\n        to: options.range.to.valueOf(),\n        format: 'epoch_millis',\n      };\n      dateRanges.push({ range: rangeEnd });\n    }\n\n    const queryInterpolated = this.interpolateLuceneQuery(queryString);\n    const finalQuery = this.addAdHocFilters(queryInterpolated, filters);\n\n    const query: {\n      bool: { filter: Array<Record<string, Record<string, string | number | Array<{ range: RangeMap }>>>> };\n    } = {\n      bool: {\n        filter: [\n          {\n            bool: {\n              should: dateRanges,\n              minimum_should_match: 1,\n            },\n          },\n        ],\n      },\n    };\n\n    if (finalQuery) {\n      query.bool.filter.push({\n        query_string: {\n          query: finalQuery,\n        },\n      });\n    }\n    const data = {\n      query,\n      size: 10000,\n    };\n\n    const header: Record<string, string | string[] | boolean> = {\n      search_type: 'query_then_fetch',\n      ignore_unavailable: true,\n    };\n\n    // @deprecated\n    // Field annotation.index is deprecated and will be removed in the future\n    if (annotation.index) {\n      header.index = annotation.index;\n    } else {\n      header.index = this.indexPattern.getIndexList(options.range.from, options.range.to);\n    }\n\n    const payload = JSON.stringify(header) + '\\n' + JSON.stringify(data) + '\\n';\n    return payload;\n  }\n\n  private processHitsToAnnotationEvents(\n    annotation: ElasticsearchAnnotationQuery,\n    hits: Array<Record<string, string | number | Record<string | number, string | number>>>\n  ) {\n    const timeField = annotation.timeField || '@timestamp';\n    const timeEndField = annotation.timeEndField || null;\n    const textField = annotation.textField || 'tags';\n    const tagsField = annotation.tagsField || null;\n    const list: AnnotationEvent[] = [];\n\n    const getFieldFromSource = (source: any, fieldName: string | null) => {\n      if (!fieldName) {\n        return;\n      }\n\n      const fieldNames = fieldName.split('.');\n      let fieldValue = source;\n\n      for (let i = 0; i < fieldNames.length; i++) {\n        fieldValue = fieldValue[fieldNames[i]];\n        if (!fieldValue) {\n          return '';\n        }\n      }\n\n      return fieldValue;\n    };\n\n    for (let i = 0; i < hits.length; i++) {\n      const source = hits[i]._source;\n      let time = getFieldFromSource(source, timeField);\n      if (typeof hits[i].fields !== 'undefined') {\n        const fields = hits[i].fields;\n        if (typeof fields === 'object' && (isString(fields[timeField]) || isNumber(fields[timeField]))) {\n          time = fields[timeField];\n        }\n      }\n\n      const event: AnnotationEvent = {\n        annotation: annotation,\n        time: toUtc(time).valueOf(),\n        text: getFieldFromSource(source, textField),\n      };\n\n      if (timeEndField) {\n        const timeEnd = getFieldFromSource(source, timeEndField);\n        if (timeEnd) {\n          event.timeEnd = toUtc(timeEnd).valueOf();\n        }\n      }\n\n      // legacy support for title field\n      if (annotation.titleField) {\n        const title = getFieldFromSource(source, annotation.titleField);\n        if (title) {\n          event.text = title + '\\n' + event.text;\n        }\n      }\n\n      const tags = getFieldFromSource(source, tagsField);\n      if (typeof tags === 'string') {\n        event.tags = tags.split(',');\n      } else {\n        event.tags = tags;\n      }\n\n      list.push(event);\n    }\n    return list;\n  }\n\n  interpolateLuceneQuery(queryString: string, scopedVars?: ScopedVars) {\n    return this.templateSrv.replace(queryString, scopedVars, 'lucene');\n  }\n\n  interpolateVariablesInQueries(\n    queries: ElasticsearchQuery[],\n    scopedVars: ScopedVars,\n    filters?: AdHocVariableFilter[]\n  ): ElasticsearchQuery[] {\n    return queries.map((q) => this.applyTemplateVariables(q, scopedVars, filters));\n  }\n\n  async testDatasource() {\n    // we explicitly ask for uncached, \"fresh\" data here\n    const dbVersion = await this.getDatabaseVersion(false);\n    // if we are not able to determine the elastic-version, we assume it is a good version.\n    const isSupported = dbVersion != null ? isSupportedVersion(dbVersion) : true;\n    const versionMessage = isSupported ? '' : `WARNING: ${unsupportedVersionMessage} `;\n    // validate that the index exist and has date field\n    return lastValueFrom(\n      this.getFields(['date']).pipe(\n        mergeMap((dateFields) => {\n          const timeField = find(dateFields, { text: this.timeField });\n          if (!timeField) {\n            return of({\n              status: 'error',\n              message: 'No date field named ' + this.timeField + ' found',\n            });\n          }\n          return of({ status: 'success', message: `${versionMessage}Data source successfully connected.` });\n        }),\n        catchError((err) => {\n          const infoInParentheses = err.message ? ` (${err.message})` : '';\n          const message = `Unable to connect with Elasticsearch${infoInParentheses}. Please check the server logs for more details.`;\n          return of({ status: 'error', message });\n        })\n      )\n    );\n  }\n\n  getQueryHeader(searchType: string, timeFrom?: DateTime, timeTo?: DateTime): string {\n    const queryHeader = {\n      search_type: searchType,\n      ignore_unavailable: true,\n      index: this.indexPattern.getIndexList(timeFrom, timeTo),\n    };\n\n    return JSON.stringify(queryHeader);\n  }\n\n  getQueryDisplayText(query: ElasticsearchQuery) {\n    // TODO: This might be refactored a bit.\n    const metricAggs = query.metrics;\n    const bucketAggs = query.bucketAggs;\n    let text = '';\n\n    if (query.query) {\n      text += 'Query: ' + query.query + ', ';\n    }\n\n    text += 'Metrics: ';\n\n    text += metricAggs?.reduce((acc, metric) => {\n      const metricConfig = metricAggregationConfig[metric.type];\n\n      let text = metricConfig.label + '(';\n\n      if (isMetricAggregationWithField(metric)) {\n        text += metric.field;\n      }\n      if (isPipelineAggregationWithMultipleBucketPaths(metric)) {\n        text += getScriptValue(metric).replace(new RegExp('params.', 'g'), '');\n      }\n      text += '), ';\n\n      return `${acc} ${text}`;\n    }, '');\n\n    text += bucketAggs?.reduce((acc, bucketAgg, index) => {\n      const bucketConfig = bucketAggregationConfig[bucketAgg.type];\n\n      let text = '';\n      if (index === 0) {\n        text += ' Group by: ';\n      }\n\n      text += bucketConfig.label + '(';\n      if (isBucketAggregationWithField(bucketAgg)) {\n        text += bucketAgg.field;\n      }\n\n      return `${acc} ${text}), `;\n    }, '');\n\n    if (query.alias) {\n      text += 'Alias: ' + query.alias;\n    }\n\n    return text;\n  }\n\n  getLogRowContext = async (row: LogRowModel, options?: LogRowContextOptions): Promise<{ data: DataFrame[] }> => {\n    const { enableElasticsearchBackendQuerying } = config.featureToggles;\n    if (enableElasticsearchBackendQuerying) {\n      const contextRequest = this.makeLogContextDataRequest(row, options);\n\n      return lastValueFrom(\n        this.query(contextRequest).pipe(\n          catchError((err) => {\n            const error: DataQueryError = {\n              message: 'Error during context query. Please check JS console logs.',\n              status: err.status,\n              statusText: err.statusText,\n            };\n            throw error;\n          })\n        )\n      );\n    } else {\n      return this.legacyQueryRunner.logContextQuery(row, options);\n    }\n  };\n\n  /**\n   * Implemented for DataSourceWithSupplementaryQueriesSupport.\n   * It generates a DataQueryRequest for a specific supplementary query type.\n   * @returns A DataQueryRequest for the supplementary queries or undefined if not supported.\n   */\n  getSupplementaryRequest(\n    type: SupplementaryQueryType,\n    request: DataQueryRequest<ElasticsearchQuery>\n  ): DataQueryRequest<ElasticsearchQuery> | undefined {\n    switch (type) {\n      case SupplementaryQueryType.LogsVolume:\n        return this.getLogsVolumeDataProvider(request);\n      case SupplementaryQueryType.LogsSample:\n        return this.getLogsSampleDataProvider(request);\n      default:\n        return undefined;\n    }\n  }\n\n  getSupportedSupplementaryQueryTypes(): SupplementaryQueryType[] {\n    return [SupplementaryQueryType.LogsVolume, SupplementaryQueryType.LogsSample];\n  }\n\n  getSupplementaryQuery(options: SupplementaryQueryOptions, query: ElasticsearchQuery): ElasticsearchQuery | undefined {\n    let isQuerySuitable = false;\n\n    switch (options.type) {\n      case SupplementaryQueryType.LogsVolume:\n        // it has to be a logs-producing range-query\n        isQuerySuitable = !!(query.metrics?.length === 1 && query.metrics[0].type === 'logs');\n        if (!isQuerySuitable) {\n          return undefined;\n        }\n        const bucketAggs: BucketAggregation[] = [];\n        const timeField = this.timeField ?? '@timestamp';\n\n        if (this.logLevelField) {\n          bucketAggs.push({\n            id: '2',\n            type: 'terms',\n            settings: {\n              min_doc_count: '0',\n              size: '0',\n              order: 'desc',\n              orderBy: '_count',\n              missing: LogLevel.unknown,\n            },\n            field: this.logLevelField,\n          });\n        }\n        bucketAggs.push({\n          id: '3',\n          type: 'date_histogram',\n          settings: {\n            interval: 'auto',\n            min_doc_count: '0',\n            trimEdges: '0',\n          },\n          field: timeField,\n        });\n\n        return {\n          refId: `${REF_ID_STARTER_LOG_VOLUME}${query.refId}`,\n          query: query.query,\n          metrics: [{ type: 'count', id: '1' }],\n          timeField,\n          bucketAggs,\n        };\n\n      case SupplementaryQueryType.LogsSample:\n        isQuerySuitable = isTimeSeriesQuery(query);\n\n        if (!isQuerySuitable) {\n          return undefined;\n        }\n\n        if (options.limit) {\n          return {\n            refId: `${REF_ID_STARTER_LOG_SAMPLE}${query.refId}`,\n            query: query.query,\n            metrics: [{ type: 'logs', id: '1', settings: { limit: options.limit.toString() } }],\n          };\n        }\n\n        return {\n          refId: `${REF_ID_STARTER_LOG_SAMPLE}${query.refId}`,\n          query: query.query,\n          metrics: [{ type: 'logs', id: '1' }],\n        };\n\n      default:\n        return undefined;\n    }\n  }\n\n  private getLogsVolumeDataProvider(\n    request: DataQueryRequest<ElasticsearchQuery>\n  ): DataQueryRequest<ElasticsearchQuery> | undefined {\n    const logsVolumeRequest = cloneDeep(request);\n    const targets = logsVolumeRequest.targets\n      .map((target) => this.getSupplementaryQuery({ type: SupplementaryQueryType.LogsVolume }, target))\n      .filter((query): query is ElasticsearchQuery => !!query);\n\n    if (!targets.length) {\n      return undefined;\n    }\n\n    return { ...logsVolumeRequest, targets };\n  }\n\n  private getLogsSampleDataProvider(\n    request: DataQueryRequest<ElasticsearchQuery>\n  ): DataQueryRequest<ElasticsearchQuery> | undefined {\n    const logsSampleRequest = cloneDeep(request);\n    const targets = logsSampleRequest.targets;\n    const queries = targets.map((query) => {\n      return this.getSupplementaryQuery({ type: SupplementaryQueryType.LogsSample, limit: 100 }, query);\n    });\n    const elasticQueries = queries.filter((query): query is ElasticsearchQuery => !!query);\n\n    if (!elasticQueries.length) {\n      return undefined;\n    }\n    return { ...logsSampleRequest, targets: elasticQueries };\n  }\n\n  query(request: DataQueryRequest<ElasticsearchQuery>): Observable<DataQueryResponse> {\n    const { enableElasticsearchBackendQuerying } = config.featureToggles;\n    if (enableElasticsearchBackendQuerying) {\n      const start = new Date();\n      return super.query(request).pipe(\n        tap((response) => trackQuery(response, request, start)),\n        map((response) => {\n          response.data.forEach((dataFrame) => {\n            enhanceDataFrameWithDataLinks(dataFrame, this.dataLinks);\n          });\n          return response;\n        })\n      );\n    }\n    return this.legacyQueryRunner.query(request);\n  }\n\n  filterQuery(query: ElasticsearchQuery): boolean {\n    if (query.hide) {\n      return false;\n    }\n    return true;\n  }\n\n  isMetadataField(fieldName: string) {\n    return ELASTIC_META_FIELDS.includes(fieldName);\n  }\n\n  // TODO: instead of being a string, this could be a custom type representing all the elastic types\n  // FIXME: This doesn't seem to return actual MetricFindValues, we should either change the return type\n  // or fix the implementation.\n  getFields(type?: string[], range?: TimeRange): Observable<MetricFindValue[]> {\n    const typeMap: Record<string, string> = {\n      float: 'number',\n      double: 'number',\n      integer: 'number',\n      long: 'number',\n      date: 'date',\n      date_nanos: 'date',\n      string: 'string',\n      text: 'string',\n      scaled_float: 'number',\n      nested: 'nested',\n      histogram: 'number',\n    };\n    return this.requestAllIndices(range).pipe(\n      map((result) => {\n        const shouldAddField = (obj: any, key: string) => {\n          if (this.isMetadataField(key)) {\n            return false;\n          }\n\n          if (!type || type.length === 0) {\n            return true;\n          }\n\n          // equal query type filter, or via type map translation\n          return type.includes(obj.type) || type.includes(typeMap[obj.type]);\n        };\n\n        // Store subfield names: [system, process, cpu, total] -> system.process.cpu.total\n        const fieldNameParts: string[] = [];\n        const fields: Record<string, { text: string; type: string }> = {};\n\n        function getFieldsRecursively(obj: any) {\n          for (const key in obj) {\n            const subObj = obj[key];\n\n            // Check mapping field for nested fields\n            if (isObject(subObj.properties)) {\n              fieldNameParts.push(key);\n              getFieldsRecursively(subObj.properties);\n            }\n\n            if (isObject(subObj.fields)) {\n              fieldNameParts.push(key);\n              getFieldsRecursively(subObj.fields);\n            }\n\n            if (isString(subObj.type)) {\n              const fieldName = fieldNameParts.concat(key).join('.');\n\n              // Hide meta-fields and check field type\n              if (shouldAddField(subObj, key)) {\n                fields[fieldName] = {\n                  text: fieldName,\n                  type: subObj.type,\n                };\n              }\n            }\n          }\n          fieldNameParts.pop();\n        }\n\n        for (const indexName in result) {\n          const index = result[indexName];\n          if (index && index.mappings) {\n            const mappings = index.mappings;\n\n            const properties = mappings.properties;\n            getFieldsRecursively(properties);\n          }\n        }\n\n        // transform to array\n        return _map(fields, (value) => {\n          return value;\n        });\n      })\n    );\n  }\n\n  getTerms(queryDef: TermsQuery, range = getDefaultTimeRange()): Observable<MetricFindValue[]> {\n    const searchType = 'query_then_fetch';\n    const header = this.getQueryHeader(searchType, range.from, range.to);\n    let esQuery = JSON.stringify(this.queryBuilder.getTermsQuery(queryDef));\n\n    esQuery = esQuery.replace(/\\$timeFrom/g, range.from.valueOf().toString());\n    esQuery = esQuery.replace(/\\$timeTo/g, range.to.valueOf().toString());\n    esQuery = header + '\\n' + esQuery + '\\n';\n\n    const url = this.getMultiSearchUrl();\n\n    const termsObservable = config.featureToggles.enableElasticsearchBackendQuerying\n      ? // TODO: This is run through resource call, but maybe should run through query\n        from(this.postResourceRequest(url, esQuery))\n      : this.legacyQueryRunner.request('POST', url, esQuery);\n\n    return termsObservable.pipe(\n      map((res) => {\n        if (!res.responses[0].aggregations) {\n          return [];\n        }\n\n        const buckets = res.responses[0].aggregations['1'].buckets;\n        return _map(buckets, (bucket) => {\n          return {\n            text: bucket.key_as_string || bucket.key,\n            value: bucket.key,\n          };\n        });\n      })\n    );\n  }\n\n  getMultiSearchUrl() {\n    const searchParams = new URLSearchParams();\n\n    if (this.maxConcurrentShardRequests) {\n      searchParams.append('max_concurrent_shard_requests', `${this.maxConcurrentShardRequests}`);\n    }\n\n    if (this.includeFrozen) {\n      searchParams.append('ignore_throttled', 'false');\n    }\n\n    return ('_msearch?' + searchParams.toString()).replace(/\\?$/, '');\n  }\n\n  metricFindQuery(query: string, options?: { range: TimeRange }): Promise<MetricFindValue[]> {\n    const range = options?.range;\n    const parsedQuery = JSON.parse(query);\n    if (query) {\n      if (parsedQuery.find === 'fields') {\n        parsedQuery.type = this.interpolateLuceneQuery(parsedQuery.type);\n        return lastValueFrom(this.getFields(parsedQuery.type, range));\n      }\n\n      if (parsedQuery.find === 'terms') {\n        parsedQuery.field = this.interpolateLuceneQuery(parsedQuery.field);\n        parsedQuery.query = this.interpolateLuceneQuery(parsedQuery.query);\n        return lastValueFrom(this.getTerms(parsedQuery, range));\n      }\n    }\n\n    return Promise.resolve([]);\n  }\n\n  getTagKeys() {\n    return lastValueFrom(this.getFields());\n  }\n\n  getTagValues(options: DataSourceGetTagValuesOptions) {\n    return lastValueFrom(this.getTerms({ field: options.key }, options.timeRange));\n  }\n\n  targetContainsTemplate(target: ElasticsearchQuery) {\n    if (this.templateSrv.containsTemplate(target.query) || this.templateSrv.containsTemplate(target.alias)) {\n      return true;\n    }\n\n    if (target.bucketAggs) {\n      for (const bucketAgg of target.bucketAggs) {\n        if (isBucketAggregationWithField(bucketAgg) && this.templateSrv.containsTemplate(bucketAgg.field)) {\n          return true;\n        }\n        if (this.objectContainsTemplate(bucketAgg.settings)) {\n          return true;\n        }\n      }\n    }\n\n    if (target.metrics) {\n      for (const metric of target.metrics) {\n        if (!isMetricAggregationWithField(metric)) {\n          continue;\n        }\n        if (metric.field && this.templateSrv.containsTemplate(metric.field)) {\n          return true;\n        }\n        if (metric.settings && this.objectContainsTemplate(metric.settings)) {\n          return true;\n        }\n        if (isMetricAggregationWithMeta(metric) && this.objectContainsTemplate(metric.meta)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  private objectContainsTemplate(obj: any) {\n    if (typeof obj === 'string') {\n      return this.templateSrv.containsTemplate(obj);\n    }\n    if (!obj || typeof obj !== 'object') {\n      return false;\n    }\n\n    for (const key of Object.keys(obj)) {\n      if (Array.isArray(obj[key])) {\n        for (const item of obj[key]) {\n          if (this.objectContainsTemplate(item)) {\n            return true;\n          }\n        }\n      } else if (this.objectContainsTemplate(obj[key])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  toggleQueryFilter(query: ElasticsearchQuery, filter: ToggleFilterAction): ElasticsearchQuery {\n    let expression = query.query ?? '';\n    switch (filter.type) {\n      case 'FILTER_FOR': {\n        // This gives the user the ability to toggle a filter on and off.\n        expression = queryHasFilter(expression, filter.options.key, filter.options.value)\n          ? removeFilterFromQuery(expression, filter.options.key, filter.options.value)\n          : addFilterToQuery(expression, filter.options.key, filter.options.value);\n        break;\n      }\n      case 'FILTER_OUT': {\n        // If the opposite filter is present, remove it before adding the new one.\n        if (queryHasFilter(expression, filter.options.key, filter.options.value)) {\n          expression = removeFilterFromQuery(expression, filter.options.key, filter.options.value);\n        }\n        expression = addFilterToQuery(expression, filter.options.key, filter.options.value, '-');\n        break;\n      }\n    }\n\n    return { ...query, query: expression };\n  }\n\n  queryHasFilter(query: ElasticsearchQuery, options: QueryFilterOptions): boolean {\n    let expression = query.query ?? '';\n    return queryHasFilter(expression, options.key, options.value);\n  }\n\n  modifyQuery(query: ElasticsearchQuery, action: QueryFixAction): ElasticsearchQuery {\n    if (!action.options) {\n      return query;\n    }\n\n    let expression = query.query ?? '';\n    switch (action.type) {\n      case 'ADD_FILTER': {\n        expression = addFilterToQuery(expression, action.options.key, action.options.value);\n        break;\n      }\n      case 'ADD_FILTER_OUT': {\n        expression = addFilterToQuery(expression, action.options.key, action.options.value, '-');\n        break;\n      }\n      case 'ADD_STRING_FILTER': {\n        expression = addStringFilterToQuery(expression, action.options.value);\n        break;\n      }\n      case 'ADD_STRING_FILTER_OUT': {\n        expression = addStringFilterToQuery(expression, action.options.value, false);\n        break;\n      }\n    }\n\n    return { ...query, query: expression };\n  }\n\n  getSupportedQueryModifications() {\n    return ['ADD_FILTER', 'ADD_FILTER_OUT', 'ADD_STRING_FILTER', 'ADD_STRING_FILTER_OUT'];\n  }\n\n  addAdHocFilters(query: string, adhocFilters?: AdHocVariableFilter[]) {\n    if (!adhocFilters) {\n      return query;\n    }\n    let finalQuery = query;\n    adhocFilters.forEach((filter) => {\n      finalQuery = addAddHocFilter(finalQuery, filter);\n    });\n\n    return finalQuery;\n  }\n\n  // Used when running queries through backend\n  applyTemplateVariables(\n    query: ElasticsearchQuery,\n    scopedVars: ScopedVars,\n    filters?: AdHocVariableFilter[]\n  ): ElasticsearchQuery {\n    // We need a separate interpolation format for lucene queries, therefore we first interpolate any\n    // lucene query string and then everything else\n    const interpolateBucketAgg = (bucketAgg: BucketAggregation): BucketAggregation => {\n      if (bucketAgg.type === 'filters') {\n        return {\n          ...bucketAgg,\n          settings: {\n            ...bucketAgg.settings,\n            filters: bucketAgg.settings?.filters?.map((filter) => ({\n              ...filter,\n              query: this.interpolateLuceneQuery(filter.query, scopedVars) || '*',\n            })),\n          },\n        };\n      }\n\n      return bucketAgg;\n    };\n\n    const expandedQuery = {\n      ...query,\n      datasource: this.getRef(),\n      query: this.addAdHocFilters(this.interpolateLuceneQuery(query.query || '', scopedVars), filters),\n      bucketAggs: query.bucketAggs?.map(interpolateBucketAgg),\n    };\n\n    const finalQuery = JSON.parse(this.templateSrv.replace(JSON.stringify(expandedQuery), scopedVars));\n    return finalQuery;\n  }\n\n  private getDatabaseVersionUncached(): Promise<SemVer | null> {\n    // we want this function to never fail\n    const getDbVersionObservable = config.featureToggles.enableElasticsearchBackendQuerying\n      ? from(this.getResourceRequest(''))\n      : this.legacyQueryRunner.request('GET', '/');\n\n    return lastValueFrom(getDbVersionObservable).then(\n      (data) => {\n        const versionNumber = data?.version?.number;\n        if (typeof versionNumber !== 'string') {\n          return null;\n        }\n        try {\n          return new SemVer(versionNumber);\n        } catch (error) {\n          console.error(error);\n          return null;\n        }\n      },\n      (error) => {\n        console.error(error);\n        return null;\n      }\n    );\n  }\n\n  async getDatabaseVersion(useCachedData = true): Promise<SemVer | null> {\n    if (useCachedData) {\n      const cached = this.databaseVersion;\n      if (cached != null) {\n        return cached;\n      }\n    }\n\n    const freshDatabaseVersion = await this.getDatabaseVersionUncached();\n    this.databaseVersion = freshDatabaseVersion;\n    return freshDatabaseVersion;\n  }\n\n  private makeLogContextDataRequest = (row: LogRowModel, options?: LogRowContextOptions) => {\n    const direction = options?.direction || LogRowContextQueryDirection.Backward;\n    const logQuery: Logs = {\n      type: 'logs',\n      id: '1',\n      settings: {\n        limit: options?.limit ? options?.limit.toString() : '10',\n        // Sorting of results in the context query\n        sortDirection: direction === LogRowContextQueryDirection.Backward ? 'desc' : 'asc',\n        // Used to get the next log lines before/after the current log line using sort field of selected log line\n        searchAfter: row.dataFrame.fields.find((f) => f.name === 'sort')?.values[row.rowIndex] ?? [row.timeEpochMs],\n      },\n    };\n\n    const query: ElasticsearchQuery = {\n      refId: `log-context-${row.dataFrame.refId}-${direction}`,\n      metrics: [logQuery],\n      query: '',\n    };\n\n    const timeRange = createContextTimeRange(row.timeEpochMs, direction, this.intervalPattern);\n    const range = {\n      from: timeRange.from,\n      to: timeRange.to,\n      raw: timeRange,\n    };\n\n    const interval = rangeUtil.calculateInterval(range, 1);\n\n    const contextRequest: DataQueryRequest<ElasticsearchQuery> = {\n      requestId: `log-context-request-${row.dataFrame.refId}-${options?.direction}`,\n      targets: [query],\n      interval: interval.interval,\n      intervalMs: interval.intervalMs,\n      range,\n      scopedVars: {},\n      timezone: 'UTC',\n      app: CoreApp.Explore,\n      startTime: Date.now(),\n      hideFromInspector: true,\n    };\n    return contextRequest;\n  };\n}\n\nexport function enhanceDataFrameWithDataLinks(dataFrame: DataFrame, dataLinks: DataLinkConfig[]) {\n  if (!dataLinks.length) {\n    return;\n  }\n\n  for (const field of dataFrame.fields) {\n    const linksToApply = dataLinks.filter((dataLink) => new RegExp(dataLink.field).test(field.name));\n\n    if (linksToApply.length === 0) {\n      continue;\n    }\n\n    field.config = field.config || {};\n    field.config.links = [...(field.config.links || [], linksToApply.map(generateDataLink))];\n  }\n}\n\nfunction generateDataLink(linkConfig: DataLinkConfig): DataLink {\n  const dataSourceSrv = getDataSourceSrv();\n\n  if (linkConfig.datasourceUid) {\n    const dsSettings = dataSourceSrv.getInstanceSettings(linkConfig.datasourceUid);\n\n    return {\n      title: linkConfig.urlDisplayLabel || '',\n      url: '',\n      internal: {\n        query: { query: linkConfig.url },\n        datasourceUid: linkConfig.datasourceUid,\n        datasourceName: dsSettings?.name ?? 'Data source not found',\n      },\n    };\n  } else {\n    return {\n      title: linkConfig.urlDisplayLabel || '',\n      url: linkConfig.url,\n    };\n  }\n}\n\nfunction createContextTimeRange(rowTimeEpochMs: number, direction: string, intervalPattern: Interval | undefined) {\n  const offset = 7;\n  // For log context, we want to request data from 7 subsequent/previous indices\n  if (intervalPattern) {\n    const intervalInfo = intervalMap[intervalPattern];\n    if (direction === LogRowContextQueryDirection.Forward) {\n      return {\n        from: dateTime(rowTimeEpochMs).utc(),\n        to: dateTime(rowTimeEpochMs).add(offset, intervalInfo.amount).utc().startOf(intervalInfo.startOf),\n      };\n    } else {\n      return {\n        from: dateTime(rowTimeEpochMs).subtract(offset, intervalInfo.amount).utc().startOf(intervalInfo.startOf),\n        to: dateTime(rowTimeEpochMs).utc(),\n      };\n    }\n    // If we don't have an interval pattern, we can't do this, so we just request data from 7h before/after\n  } else {\n    if (direction === LogRowContextQueryDirection.Forward) {\n      return {\n        from: dateTime(rowTimeEpochMs).utc(),\n        to: dateTime(rowTimeEpochMs).add(offset, 'hours').utc(),\n      };\n    } else {\n      return {\n        from: dateTime(rowTimeEpochMs).subtract(offset, 'hours').utc(),\n        to: dateTime(rowTimeEpochMs).utc(),\n      };\n    }\n  }\n}\n","import { DashboardLoadedEvent, DataSourcePlugin } from '@grafana/data';\nimport { getAppEvents } from '@grafana/runtime';\n\nimport { QueryEditor } from './components/QueryEditor';\nimport { ConfigEditor } from './configuration/ConfigEditor';\nimport { ElasticDatasource } from './datasource';\nimport { onDashboardLoadedHandler } from './tracking';\nimport { ElasticsearchQuery } from './types';\n\nexport const plugin = new DataSourcePlugin(ElasticDatasource).setQueryEditor(QueryEditor).setConfigEditor(ConfigEditor);\n\n// Subscribe to on dashboard loaded event so that we can track plugin adoption\ngetAppEvents().subscribe<DashboardLoadedEvent<ElasticsearchQuery>>(DashboardLoadedEvent, onDashboardLoadedHandler);\n","exports.escape = function escape(s) {\n  return s.replace(/[\\+\\-\\!\\(\\)\\{\\}\\[\\]\\^\\\"\\?\\:\\\\\\&\\|\\'\\/\\s\\*\\~]/g, prefixCharWithBackslashes);\n};\n\nfunction prefixCharWithBackslashes(char) {\n  return '\\\\' + char;\n}\n\nexports.unescape = function unescape(s) {\n  return s.replace(/\\\\([\\+\\-\\!\\(\\)\\{\\}\\[\\]\\^\\\"\\?\\:\\\\\\&\\|\\'\\/\\s\\*\\~])/g, extractChar);\n};\n\nfunction extractChar(match, char) {\n  return char;\n}\n\nexports.escapePhrase = function escapePhrase(s) {\n  return s.replace(/\"/g, prefixCharWithBackslashes);\n};\n\nexports.unescapePhrase = function unescapePhrase(s) {\n  return s.replace(/\\\\(\")/g, extractChar);\n};\n","'use strict';\n\nvar queryParser = require('./queryParser');\nvar escaping = require('./escaping');\n\nexports.parse = queryParser.parse.bind(queryParser);\nexports.toString = require('./toString');\n\nexports.term = {\n  escape: escaping.escape,\n  unescape: escaping.unescape\n};\n\nexports.phrase = {\n  escape: escaping.escapePhrase,\n  unescape: escaping.unescapePhrase\n};\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = function(node) {\n              return node[0];\n          },\n      peg$c1 = function() {\n              return {};\n          },\n      peg$c2 = function(operator) {\n              return {\n                  'operator': operator,\n              };\n          },\n      peg$c3 = function(start, left, operator, right) {\n              var node = {\n                  'start': start,\n                  'left': left,\n              };\n\n              var right =\n                      right.length == 0\n                      ? null\n                      : right[0]['right'] == null\n                          ? right[0]['left']\n                          : right[0];\n\n              if (right != null) {\n                  node['operator'] = operator == '' ? '<implicit>' : operator[0];\n                  node['right'] = right;\n              }\n\n              return node;\n          },\n      peg$c4 = function(operator, right) {\n              return right;\n          },\n      peg$c5 = function(left, operator, right) {\n              var node = {\n                  'left':left\n              };\n\n              var right =\n                      right.length == 0\n                      ? null\n                      : right[0]['right'] == null\n                          ? right[0]['left']\n                          : right[0];\n\n              if (right != null) {\n                  node['operator'] = operator == '' ? '<implicit>' : operator[0];\n                  node['right'] = right;\n              }\n\n              return node;\n          },\n      peg$c6 = function(field_exp) {\n              return field_exp;\n          },\n      peg$c7 = \"(\",\n      peg$c8 = peg$literalExpectation(\"(\", false),\n      peg$c9 = \")\",\n      peg$c10 = peg$literalExpectation(\")\", false),\n      peg$c11 = function(node) {\n              node[0]['parenthesized'] = true;\n              return node[0];\n          },\n      peg$c12 = function(fieldname, range) {\n              range['field'] =\n                  fieldname == null || fieldname.label == ''\n                      ? \"<implicit>\"\n                      : fieldname.label;\n              range['fieldLocation'] =\n              fieldname == null || fieldname.label == ''\n                  ? null\n                  : fieldname.location;\n\n              return range;\n          },\n      peg$c13 = function(fieldname, node) {\n              node['field']= fieldname.label;\n              node['fieldLocation'] = fieldname.location;\n              return node;\n          },\n      peg$c14 = function(fieldname, term) {\n              var fieldexp = {\n                  'field':\n                      fieldname == null || fieldname.label == ''\n                          ? \"<implicit>\"\n                          : fieldname.label,\n                  'fieldLocation':\n                      fieldname == null || fieldname.label == ''\n                          ? null\n                          : fieldname.location,\n\n\n                  };\n\n              for(var key in term)\n                  fieldexp[key] = term[key];\n\n              return fieldexp;\n          },\n      peg$c15 = /^[:]/,\n      peg$c16 = peg$classExpectation([\":\"], false, false),\n      peg$c17 = function(fieldname) {\n              return {\n                label: fieldname.label,\n                location: fieldname.location\n              }\n\n          },\n      peg$c18 = function(op, term, proximity, boost) {\n              var result = {\n                'term': term,\n                'quoted': true,\n                'regex' : false,\n                'termLocation': location()\n              };\n\n              if('' != proximity)\n              {\n                  result['proximity'] = proximity;\n              }\n              if('' != boost)\n              {\n                  result['boost'] = boost;\n              }\n              if('' != op)\n              {\n                  result['prefix'] = op;\n              }\n\n              return result;\n          },\n      peg$c19 = function(op, term) {\n              var result = {\n                'term': term,\n                'quoted': false,\n                'regex': true,\n                'termLocation': location()\n              };\n\n              return result;\n          },\n      peg$c20 = function(op, term, similarity, boost) {\n              var result = {\n                'term': term.label,\n                'quoted': false,\n                'regex': false,\n                'termLocation': location()\n              };\n              if('' != similarity)\n              {\n                  result['similarity'] = similarity;\n              }\n              if('' != boost)\n              {\n                  result['boost'] = boost;\n              }\n              if('' != op)\n              {\n                  result['prefix'] = op;\n              }\n              return result;\n          },\n      peg$c21 = \"\\\\\",\n      peg$c22 = peg$literalExpectation(\"\\\\\", false),\n      peg$c23 = function(sequence) { return '\\\\' + sequence; },\n      peg$c24 = \".\",\n      peg$c25 = peg$literalExpectation(\".\", false),\n      peg$c26 = /^[^ \\t\\r\\n\\f{}()\"\\/\\^~[\\]]/,\n      peg$c27 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\", \"\\f\", \"{\", \"}\", \"(\", \")\", \"\\\"\", \"/\", \"^\", \"~\", \"[\", \"]\"], true, false),\n      peg$c28 = function(term) {\n              return term.join('');\n          },\n      peg$c29 = function(term) {\n              return {\n                label: term.join(''),\n                location: location(),\n              };\n          },\n      peg$c30 = /^[^: \\t\\r\\n\\f{}()\"\\/\\^~[\\]]/,\n      peg$c31 = peg$classExpectation([\":\", \" \", \"\\t\", \"\\r\", \"\\n\", \"\\f\", \"{\", \"}\", \"(\", \")\", \"\\\"\", \"/\", \"^\", \"~\", \"[\", \"]\"], true, false),\n      peg$c32 = \"\\\"\",\n      peg$c33 = peg$literalExpectation(\"\\\"\", false),\n      peg$c34 = function(chars) { return chars.join(''); },\n      peg$c35 = \"/\",\n      peg$c36 = peg$literalExpectation(\"/\", false),\n      peg$c37 = function(chars) { return chars.join('') },\n      peg$c38 = peg$anyExpectation(),\n      peg$c39 = function(char) { return char; },\n      peg$c40 = \"+\",\n      peg$c41 = peg$literalExpectation(\"+\", false),\n      peg$c42 = \"-\",\n      peg$c43 = peg$literalExpectation(\"-\", false),\n      peg$c44 = \"!\",\n      peg$c45 = peg$literalExpectation(\"!\", false),\n      peg$c46 = \"{\",\n      peg$c47 = peg$literalExpectation(\"{\", false),\n      peg$c48 = \"}\",\n      peg$c49 = peg$literalExpectation(\"}\", false),\n      peg$c50 = \"[\",\n      peg$c51 = peg$literalExpectation(\"[\", false),\n      peg$c52 = \"]\",\n      peg$c53 = peg$literalExpectation(\"]\", false),\n      peg$c54 = \"^\",\n      peg$c55 = peg$literalExpectation(\"^\", false),\n      peg$c56 = \"?\",\n      peg$c57 = peg$literalExpectation(\"?\", false),\n      peg$c58 = \":\",\n      peg$c59 = peg$literalExpectation(\":\", false),\n      peg$c60 = \"&\",\n      peg$c61 = peg$literalExpectation(\"&\", false),\n      peg$c62 = \"|\",\n      peg$c63 = peg$literalExpectation(\"|\", false),\n      peg$c64 = \"'\",\n      peg$c65 = peg$literalExpectation(\"'\", false),\n      peg$c66 = \"~\",\n      peg$c67 = peg$literalExpectation(\"~\", false),\n      peg$c68 = \"*\",\n      peg$c69 = peg$literalExpectation(\"*\", false),\n      peg$c70 = \" \",\n      peg$c71 = peg$literalExpectation(\" \", false),\n      peg$c72 = function(proximity) {\n              return proximity;\n          },\n      peg$c73 = function(boost) {\n              return boost;\n          },\n      peg$c74 = function(fuzziness) {\n              return fuzziness == '' || fuzziness == null ? 0.5 : fuzziness;\n          },\n      peg$c75 = \"0.\",\n      peg$c76 = peg$literalExpectation(\"0.\", false),\n      peg$c77 = /^[0-9]/,\n      peg$c78 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c79 = function(val) {\n              return parseFloat(\"0.\" + val.join(''));\n          },\n      peg$c80 = function(val) {\n              return parseInt(val.join(''));\n          },\n      peg$c81 = \"TO\",\n      peg$c82 = peg$literalExpectation(\"TO\", false),\n      peg$c83 = function(term_min, term_max) {\n              return {\n                  'term_min': term_min,\n                  'term_max': term_max,\n                  'inclusive': 'both'\n              };\n          },\n      peg$c84 = function(term_min, term_max) {\n              return {\n                  'term_min': term_min,\n                  'term_max': term_max,\n                  'inclusive': 'none'\n              };\n          },\n      peg$c85 = function(term_min, term_max) {\n              return {\n                  'term_min': term_min,\n                  'term_max': term_max,\n                  'inclusive': 'left'\n              };\n          },\n      peg$c86 = function(term_min, term_max) {\n              return {\n                  'term_min': term_min,\n                  'term_max': term_max,\n                  'inclusive': 'right'\n              };\n          },\n      peg$c87 = function(operator) {\n              return operator;\n          },\n      peg$c88 = \"OR NOT\",\n      peg$c89 = peg$literalExpectation(\"OR NOT\", false),\n      peg$c90 = \"AND NOT\",\n      peg$c91 = peg$literalExpectation(\"AND NOT\", false),\n      peg$c92 = \"OR\",\n      peg$c93 = peg$literalExpectation(\"OR\", false),\n      peg$c94 = \"AND\",\n      peg$c95 = peg$literalExpectation(\"AND\", false),\n      peg$c96 = \"NOT\",\n      peg$c97 = peg$literalExpectation(\"NOT\", false),\n      peg$c98 = \"||\",\n      peg$c99 = peg$literalExpectation(\"||\", false),\n      peg$c100 = \"&&\",\n      peg$c101 = peg$literalExpectation(\"&&\", false),\n      peg$c102 = peg$otherExpectation(\"whitespace\"),\n      peg$c103 = /^[ \\t\\r\\n\\f]/,\n      peg$c104 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\", \"\\f\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parse_();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parse_();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsenode();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsenode();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parse_();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parse_();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c1();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseEOF();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c1();\n        }\n        s0 = s1;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenode() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseoperator_exp();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEOF();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseoperator_exp();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsegroup_exp();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseoperator_exp();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseoperator_exp();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parsenode();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parsenode();\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c3(s1, s2, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseoperator_exp();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsenode();\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c4(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsegroup_exp();\n          if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parseoperator_exp();\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n              s3 = peg$parseoperator_exp();\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = [];\n              s4 = peg$parsenode();\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n                s4 = peg$parsenode();\n              }\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s1, s2, s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsegroup_exp() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsefield_exp();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parse_();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parse_();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c6(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseparen_exp();\n    }\n\n    return s0;\n  }\n\n  function peg$parseparen_exp() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c7;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parse_();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parse_();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsenode();\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsenode();\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s4 = peg$c9;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c10); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parse_();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parse_();\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c11(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefield_exp() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsefieldname();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parserange_operator_exp();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c12(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsefieldname();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseparen_exp();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c13(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsefieldname();\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseterm();\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c14(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefieldname() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseunquoted_term();\n    if (s1 !== peg$FAILED) {\n      if (peg$c15.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c16); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parse_();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parse_();\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c17(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseterm() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseprefix_operator_exp();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsequoted_term();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseproximity_modifier();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseboost_modifier();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parse_();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parse_();\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c18(s1, s2, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseprefix_operator_exp();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseregex_term();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parse_();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parse_();\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c19(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseprefix_operator_exp();\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseunquoted_term();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsefuzzy_modifier();\n            if (s3 === peg$FAILED) {\n              s3 = null;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseboost_modifier();\n              if (s4 === peg$FAILED) {\n                s4 = null;\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = [];\n                s6 = peg$parse_();\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parse_();\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c20(s1, s2, s3, s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parserterm_char() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 92) {\n      s1 = peg$c21;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEscapeSequence();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c23(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s0 = peg$c24;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c25); }\n      }\n      if (s0 === peg$FAILED) {\n        if (peg$c26.test(input.charAt(peg$currPos))) {\n          s0 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c27); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseranged_term() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parserterm_char();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parserterm_char();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c28(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseunquoted_term() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseterm_char();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseterm_char();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c29(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseterm_char() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 92) {\n      s1 = peg$c21;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEscapeSequence();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c23(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s0 = peg$c24;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c25); }\n      }\n      if (s0 === peg$FAILED) {\n        if (peg$c30.test(input.charAt(peg$currPos))) {\n          s0 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c31); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsequoted_term() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c32;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c33); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseDoubleStringCharacter();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseDoubleStringCharacter();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s3 = peg$c32;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c33); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c34(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseregex_term() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 47) {\n      s1 = peg$c35;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseRegexCharacter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseRegexCharacter();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 47) {\n          s3 = peg$c35;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c36); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c37(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDoubleStringCharacter() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s2 = peg$c32;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c33); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c21;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c39(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c21;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseEscapeSequence();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c23(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseRegexCharacter() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 47) {\n      s2 = peg$c35;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c21;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c39(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c21;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseEscapeSequence();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c23(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEscapeSequence() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c40;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c42;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s0 = peg$c44;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c45); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s0 = peg$c7;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s0 = peg$c9;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c10); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 123) {\n                s0 = peg$c46;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c47); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 125) {\n                  s0 = peg$c48;\n                  peg$currPos++;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c49); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 91) {\n                    s0 = peg$c50;\n                    peg$currPos++;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c51); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s0 = peg$c52;\n                      peg$currPos++;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c53); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 94) {\n                        s0 = peg$c54;\n                        peg$currPos++;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c55); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 34) {\n                          s0 = peg$c32;\n                          peg$currPos++;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c33); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 63) {\n                            s0 = peg$c56;\n                            peg$currPos++;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c57); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 58) {\n                              s0 = peg$c58;\n                              peg$currPos++;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c59); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 92) {\n                                s0 = peg$c21;\n                                peg$currPos++;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 38) {\n                                  s0 = peg$c60;\n                                  peg$currPos++;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c61); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.charCodeAt(peg$currPos) === 124) {\n                                    s0 = peg$c62;\n                                    peg$currPos++;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c63); }\n                                  }\n                                  if (s0 === peg$FAILED) {\n                                    if (input.charCodeAt(peg$currPos) === 39) {\n                                      s0 = peg$c64;\n                                      peg$currPos++;\n                                    } else {\n                                      s0 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c65); }\n                                    }\n                                    if (s0 === peg$FAILED) {\n                                      if (input.charCodeAt(peg$currPos) === 47) {\n                                        s0 = peg$c35;\n                                        peg$currPos++;\n                                      } else {\n                                        s0 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n                                      }\n                                      if (s0 === peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 126) {\n                                          s0 = peg$c66;\n                                          peg$currPos++;\n                                        } else {\n                                          s0 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n                                        }\n                                        if (s0 === peg$FAILED) {\n                                          if (input.charCodeAt(peg$currPos) === 42) {\n                                            s0 = peg$c68;\n                                            peg$currPos++;\n                                          } else {\n                                            s0 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c69); }\n                                          }\n                                          if (s0 === peg$FAILED) {\n                                            if (input.charCodeAt(peg$currPos) === 32) {\n                                              s0 = peg$c70;\n                                              peg$currPos++;\n                                            } else {\n                                              s0 = peg$FAILED;\n                                              if (peg$silentFails === 0) { peg$fail(peg$c71); }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseproximity_modifier() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 126) {\n      s1 = peg$c66;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseint_exp();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c72(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseboost_modifier() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 94) {\n      s1 = peg$c54;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c55); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsedecimal_or_int_exp();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c73(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefuzzy_modifier() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 126) {\n      s1 = peg$c66;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsedecimal_exp();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c74(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedecimal_or_int_exp() {\n    var s0;\n\n    s0 = peg$parsedecimal_exp();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseint_exp();\n    }\n\n    return s0;\n  }\n\n  function peg$parsedecimal_exp() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c75) {\n      s1 = peg$c75;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c76); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c77.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c78); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c77.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c78); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c79(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseint_exp() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c77.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c78); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c77.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c78); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c80(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parserange_operator_exp() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c50;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c51); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseranged_term();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parse_();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parse_();\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c81) {\n            s4 = peg$c81;\n            peg$currPos += 2;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c82); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parse_();\n              }\n            } else {\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseranged_term();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 93) {\n                  s7 = peg$c52;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c53); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c83(s2, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c46;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c47); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseranged_term();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parse_();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parse_();\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c81) {\n              s4 = peg$c81;\n              peg$currPos += 2;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c82); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parse_();\n                }\n              } else {\n                s5 = peg$FAILED;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseranged_term();\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 125) {\n                    s7 = peg$c48;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c49); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c84(s2, s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 91) {\n          s1 = peg$c50;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseranged_term();\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            s4 = peg$parse_();\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parse_();\n            }\n            if (s3 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c81) {\n                s4 = peg$c81;\n                peg$currPos += 2;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c82); }\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = [];\n                s6 = peg$parse_();\n                if (s6 !== peg$FAILED) {\n                  while (s6 !== peg$FAILED) {\n                    s5.push(s6);\n                    s6 = peg$parse_();\n                  }\n                } else {\n                  s5 = peg$FAILED;\n                }\n                if (s5 !== peg$FAILED) {\n                  s6 = peg$parseranged_term();\n                  if (s6 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s7 = peg$c48;\n                      peg$currPos++;\n                    } else {\n                      s7 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c49); }\n                    }\n                    if (s7 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c85(s2, s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c46;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c47); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseranged_term();\n            if (s2 !== peg$FAILED) {\n              s3 = [];\n              s4 = peg$parse_();\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n                s4 = peg$parse_();\n              }\n              if (s3 !== peg$FAILED) {\n                if (input.substr(peg$currPos, 2) === peg$c81) {\n                  s4 = peg$c81;\n                  peg$currPos += 2;\n                } else {\n                  s4 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c82); }\n                }\n                if (s4 !== peg$FAILED) {\n                  s5 = [];\n                  s6 = peg$parse_();\n                  if (s6 !== peg$FAILED) {\n                    while (s6 !== peg$FAILED) {\n                      s5.push(s6);\n                      s6 = peg$parse_();\n                    }\n                  } else {\n                    s5 = peg$FAILED;\n                  }\n                  if (s5 !== peg$FAILED) {\n                    s6 = peg$parseranged_term();\n                    if (s6 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 93) {\n                        s7 = peg$c52;\n                        peg$currPos++;\n                      } else {\n                        s7 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c53); }\n                      }\n                      if (s7 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c86(s2, s6);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseoperator_exp() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parse_();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parse_();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseoperator();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parse_();\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c87(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parse_();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parse_();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseoperator();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseEOF();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c87(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseoperator() {\n    var s0;\n\n    if (input.substr(peg$currPos, 6) === peg$c88) {\n      s0 = peg$c88;\n      peg$currPos += 6;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c89); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c90) {\n        s0 = peg$c90;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c91); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c92) {\n          s0 = peg$c92;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c93); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c94) {\n            s0 = peg$c94;\n            peg$currPos += 3;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c95); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c96) {\n              s0 = peg$c96;\n              peg$currPos += 3;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c97); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c98) {\n                s0 = peg$c98;\n                peg$currPos += 2;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c99); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 2) === peg$c100) {\n                  s0 = peg$c100;\n                  peg$currPos += 2;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c101); }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseprefix_operator_exp() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parse_();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parse_();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseprefix_operator();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c87(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseprefix_operator() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c40;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c42;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s0 = peg$c44;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c45); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c103.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c104); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c103.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c104); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c102); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c38); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","'use strict';\n\nvar implicit = '<implicit>';\n\nmodule.exports = function toString(ast) {\n  if (!ast) {\n    return '';\n  }\n\n  var result = '';\n\n  if (ast.start != null) {\n    result += (ast.parenthesized ? '(' : '') + ast.start + ' ';\n  }\n\n  if (ast.field && ast.field !== implicit) {\n    result += ast.field + ':';\n  }\n\n  if (ast.left) {\n    if (ast.parenthesized && !ast.start) {\n      result += '(';\n    }\n    result += toString(ast.left);\n\n    if (ast.parenthesized && !ast.right) {\n      result += ')';\n    }\n  }\n\n  if (ast.operator) {\n    if (ast.left) {\n      result += ' ';\n    }\n\n    if (ast.operator !== implicit) {\n      result += ast.operator;\n    }\n  }\n\n  if (ast.right) {\n    if (ast.operator && ast.operator !== implicit) {\n      result += ' ';\n    }\n    result += toString(ast.right);\n\n    if (ast.parenthesized) {\n      result += ')';\n    }\n  }\n\n  if (ast.term || (ast.term === '' && ast.quoted)) {\n    if (ast.prefix) {\n      result += ast.prefix;\n    }\n    if (ast.quoted) {\n      result += '\"';\n      result += ast.term;\n      result += '\"';\n    } else if (ast.regex) {\n      result += '/';\n      result += ast.term;\n      result += '/';\n    } else {\n      result += ast.term;\n    }\n\n    if (ast.proximity != null) {\n      result += '~' + ast.proximity;\n    }\n\n    if (ast.boost != null) {\n      result += '^' + ast.boost;\n    }\n  }\n\n  if (ast.term_min) {\n    if (ast.inclusive === 'both' || ast.inclusive === 'left') {\n      result += '[';\n    } else {\n      result += '{';\n    }\n\n    result += ast.term_min;\n    result += ' TO ';\n    result += ast.term_max;\n\n    if (ast.inclusive === 'both' || ast.inclusive === 'right') {\n      result += ']';\n    } else {\n      result += '}';\n    }\n  }\n\n  if (ast.similarity) {\n    result += '~';\n\n    if (ast.similarity !== 0.5) {\n      result += ast.similarity;\n    }\n  }\n\n  return result;\n};\n"],"names":["__defProp","__defProps","__getOwnPropDescs","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","obj","key","value","__spreadValues","a","b","prop","__spreadProps","AdvancedHttpSettings","config","onChange","className","onCookiesChange","cookies","onTimeoutChange","event","styles","ConfigDescriptionLink","props","description","suffix","feature","text","getStyles","theme","combineReducers","reducers","state","action","newState","useStatelessReducer","reducer","DispatchContext","useDispatch","dispatch","defaultPipelineVariable","name","generatePipelineVariableName","pipelineVars","v","isEWMAMovingAverage","metric","isHoltMovingAverage","isHoltWintersMovingAverage","isMovingAverageWithModelSettings","isMetricAggregationWithField","metricAggregationConfig","isPipelineAggregation","isPipelineAggregationWithMultipleBucketPaths","isMetricAggregationWithMissingSupport","isMetricAggregationWithSettings","isMetricAggregationWithMeta","isMetricAggregationWithInlineScript","METRIC_AGGREGATION_TYPES","isMetricAggregationType","s","pipelineOptions","getChildren","metrics","children","m","pv","child","extendedStats","movingAvgModelOptions","highlightTags","defaultGeoHashPrecisionString","defaultMetricAgg","id","defaultBucketAgg","findMetricById","hasMetricOfType","target","type","isPipelineAgg","metricType","isPipelineAggWithMultipleBucketPaths","describeMetric","removeEmpty","acc","cleanObj","convertOrderByToMetricId","orderBy","metricIdMatches","getScriptValue","isSupportedVersion","version","unsupportedVersionMessage","isTimeSeriesQuery","query","variableRegex","flattenObject","opts","delimiter","maxDepth","currentDepth","output","step","object","prev","isarray","isobject","newKey","addMetric","removeMetric","toggleMetricVisibility","changeMetricField","changeMetricType","changeMetricAttribute","changeMetricSetting","changeMetricMeta","initQuery","changeQuery","changeAliasPattern","queryReducer","prevQuery","aliasPatternReducer","prevAliasPattern","defaultFilter","bucketAggregationConfig","orderByOptions","orderOptions","sizeOptions","addBucketAggregation","removeBucketAggregation","changeBucketAggregationType","changeBucketAggregationField","changeBucketAggregationSetting","createReducer","defaultTimeField","newAgg","lastAgg","bucketAgg","newSettings","metricToRemove","metricsToRemove","resultingMetrics","toRemove","newMetric","DatasourceContext","QueryContext","RangeContext","ElasticsearchProvider","onRunQuery","datasource","range","onStateChange","isUninitialized","shouldRunInit","setShouldRunInit","getHook","c","contextValue","useQuery","useDatasource","useRange","toId","e","toInt","idString","useNextId","bucketAggs","QueryEditorRow","label","onRemoveClick","onHideClick","hidden","InlineFieldRow","InlineSegmentGroup","InlineLabel","IconButton","isBucketAggregationWithField","BUCKET_AGGREGATION_TYPES","isBucketAggregationType","getFilter","toSelectableValue","useFields","filter","rawFields","q","lastValueFrom","segmentStyles","SettingsEditorContainer","open","setOpen","Icon","calendarIntervals","ElasticQueryBuilder","options","aggDef","queryNode","size","metricId","esAgg","settings","interval","filterObj","i","j","nestedAggs","aggField","metricAgg","appliedAgg","_","k","settingName","stringValue","field","script","parsedValue","queryDef","order","keyname","limit","hasValue","searchValue","getInitialState","initialOptions","initialValue","useCreatableSelectPersistedBehaviour","setOptions","addOption","newValue","defaultIntervalOptions","isValidNewOption","inputValue","optionStartsWithValue","option","getIntervalType","DateHistogramSettingsEditor","baseId","handleIntervalChange","intervalType","InlineField","inlineFieldProps","Select","Input","TimeZonePicker","timeZone","AddRemove","index","onAdd","onRemove","elements","Button","addFilter","removeFilter","changeFilter","FiltersSettingsEditor","upperStateDispatch","QueryField","TermsSettingsEditor","createOrderByOptions","createOrderByOptionsForExtendedStats","method","createOrderByOptionsForPercentiles","percent","percentString","isValidOrderTarget","metricOptions","useDescription","minDocCount","orderByOption","trimEdges","SettingsEditor","settingsDescription","bucketAggOptions","toOption","BucketAggregationEditor","getFields","Segment","SegmentAsync","BucketAggregationsEditor","nextId","totalBucketAggs","noWrap","toOptions","MetricPicker","selectedOption","SettingField","placeholder","tooltip","defaultValue","addPipelineVariable","removePipelineVariable","renamePipelineVariable","changePipelineVariableMetric","pipelineVariable","BucketScriptSettingsEditor","previousMetrics","pipelineVar","MovingAverageSettingsEditor","toMultiSelectValue","TopMetricsSettingsEditor","getOrderByOptions","getMetricsOptions","selectedStats","sizeFieldId","unitFieldId","modeFieldId","rateAggUnitOptions","rateAggModeOptions","stat","ExtendedStatSetting","QueryEditorSpecialMetricRow","isBasicAggregation","getTypeOptions","esVersion","includePipelineAggregations","versionRange","MetricEditor","getTypeOptionsAsync","dbVersion","loadOptions","remoteFields","MetricAggregationsEditor","totalMetrics","Alert","OPTIONS","queryTypeToMetricType","QueryTypeSelector","firstMetric","queryType","newQueryType","RadioButtonGroup","useElasticVersion","setVersion","canceled","error","QueryEditor","elasticVersion","showUnsupportedMessage","QueryEditorForm","ElasticSearchQueryField","inputId","isTimeSeries","showBucketAggregationsEditor","DataLink","onDelete","suggestions","showInternalLink","setShowInternalLink","useInternalLink","handleChange","DataLinkInput","DataSourcePicker","ds","datasourceUid","previousUid","usePrevious","DataLinks","ConfigSubSection","newField","newDataLinks","indexPatternTypes","ElasticDetails","indexChangeHandler","pattern","intervalHandler","jsonDataChangeHandler","jsonDataSwitchChangeHandler","newInterval","currentIndex","newDatabase","defaultMaxConcurrentShardRequests","LogsConfig","changeHandler","coerceOptions","isValidOptions","ConfigEditor","onOptionsChange","authProps","DataSourceDescription","Divider","ConnectionSettings","Auth","ConfigSection","Stack","SecureSocksProxySettings","intervalMap","IndexPattern","from","to","intervalInfo","start","endEpoch","indexList","ElasticsearchLanguageProvider","initialValues","abstractQuery","labels","HIGHLIGHT_TAGS_EXP","ElasticResponse","targets","response","seriesList","aggregations","tmpSeriesList","table","TableModel","y","newSeries","bucket","percentiles","percentileName","values","statName","stats","metricField","hit","point","propKey","addMetricValue","metricName","buckets","propValues","baseName","aggs","depth","aggId","nameIndex","metricDef","extendedStat","series","dedup","regex","match","g1","g2","group","agg","propName","metricTypeCount","hasTopMetricWithMultipleMetrics","hits","hitsTotal","doc","histogram","trim","points","err","result","item","logMessageField","logLevelField","isLogsRequest","dataFrame","n","propNames","docs","flattenHits","createEmptyDataFrame","toNameTypePair","addPreferredVisualisationType","globalHighlightWordRegex","highlightWordRegex","newSearchWords","line","matchedPhrases","part","matches","searchWords","frame","convertFieldType","flattened","timeField","MutableDataFrame","f","fieldNames","guessType","onDashboardLoadedHandler","dashboardId","orgId","grafanaVersion","queries","elasticsearchQueries","queriesWithTemplateVariables","isQueryWithTemplateVariables","queriesWithLuceneQuery","logsQueries","getQueryType","metricQueries","rawDataQueries","rawDocumentQueries","queriesWithChangedLineLimit","isQueryWithChangedLineLimit","getLineLimit","lineLimit","shouldNotReportBasedOnRefId","refId","REF_ID_STARTER_LOG_VOLUME","trackQuery","request","startTime","app","trackAnnotationQuery","annotation","LegacyQueryRunner","templateSrv","url","data","headers","throwError","map","results","catchError","message","row","searchAfter","sort","header","esQuery","payload","logResponse","transformHitsBasedOnDirection","timestampField","lineField","otherFields","sentTargets","targetsContainsLogsQuery","logLimits","queryObj","log","of","res","er","enhanceDataFrame","tap","direction","actualResponse","dataLinks","enhanceDataFrameWithDataLinks","ElasticsearchAnnotationsQueryEditor","onAnnotationChange","newTarget","EditorRow","EditorField","queryHasFilter","modifier","findFilterNode","lucene","ast","parseQuery","findNodeInTree","isAST","isNodeTerm","isLeftOnlyAST","isBinaryAST","addFilterToQuery","escapeFilter","escapeFilterValue","concatenate","condition","addAddHocFilter","addHocFilter","removeFilterFromQuery","node","removeNodeFromTree","normalizeQuery","addStringFilterToQuery","contains","expression","REF_ID_STARTER_LOG_SAMPLE","ELASTIC_META_FIELDS","ElasticDatasource","DataSourceWithBackend","instanceSettings","enableElasticsearchBackendQuerying","contextRequest","logQuery","timeRange","createContextTimeRange","settingsData","path","params","resourceOptions","abstractQueries","indexUrlList","maxTraversals","listLen","generate","mergeMap","skipWhile","resp","throwIfEmpty","first","annotationObservable","timeEndField","filters","queryString","dateRanges","rangeStart","rangeEnd","queryInterpolated","finalQuery","textField","tagsField","list","getFieldFromSource","source","fieldName","fieldValue","time","fields","timeEnd","title","tags","scopedVars","versionMessage","dateFields","searchType","timeFrom","timeTo","queryHeader","metricAggs","bucketConfig","isQuerySuitable","logsVolumeRequest","logsSampleRequest","elasticQueries","typeMap","shouldAddField","fieldNameParts","getFieldsRecursively","subObj","indexName","properties","searchParams","parsedQuery","adhocFilters","interpolateBucketAgg","expandedQuery","getDbVersionObservable","versionNumber","useCachedData","cached","freshDatabaseVersion","linksToApply","dataLink","generateDataLink","linkConfig","dataSourceSrv","dsSettings","rowTimeEpochMs","intervalPattern","exports","prefixCharWithBackslashes","char","extractChar","queryParser","escaping","peg$subclass","parent","ctor","peg$SyntaxError","expected","found","location","DESCRIBE_EXPECTATION_FNS","expectation","literalEscape","escapedParts","classEscape","hex","ch","describeExpectation","describeExpected","descriptions","describeFound","peg$parse","input","peg$FAILED","peg$startRuleFunctions","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","operator","peg$c3","left","right","peg$c4","peg$c5","peg$c6","field_exp","peg$c7","peg$c8","peg$literalExpectation","peg$c9","peg$c10","peg$c11","peg$c12","fieldname","peg$c13","peg$c14","term","fieldexp","peg$c15","peg$c16","peg$classExpectation","peg$c17","peg$c18","op","proximity","boost","peg$c19","peg$c20","similarity","peg$c21","peg$c22","peg$c23","sequence","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","chars","peg$c35","peg$c36","peg$c37","peg$c38","peg$anyExpectation","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","peg$c74","fuzziness","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","val","peg$c80","peg$c81","peg$c82","peg$c83","term_min","term_max","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$c98","peg$c99","peg$c100","peg$c101","peg$c102","peg$otherExpectation","peg$c103","peg$c104","peg$currPos","peg$savedPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","peg$computeLocation","peg$buildStructuredError","peg$buildSimpleError","ignoreCase","parts","inverted","peg$endExpectation","peg$computePosDetails","pos","details","p","startPos","endPos","startPosDetails","endPosDetails","peg$fail","s0","s1","s2","s3","peg$parse_","peg$parsenode","peg$parseEOF","s4","s5","peg$parseoperator_exp","peg$parsegroup_exp","peg$parsefield_exp","peg$parseparen_exp","s6","peg$parsefieldname","peg$parserange_operator_exp","peg$parseterm","peg$parseunquoted_term","peg$parseprefix_operator_exp","peg$parsequoted_term","peg$parseproximity_modifier","peg$parseboost_modifier","peg$parseregex_term","peg$parsefuzzy_modifier","peg$parserterm_char","peg$parseEscapeSequence","peg$parseranged_term","peg$parseterm_char","peg$parseDoubleStringCharacter","peg$parseRegexCharacter","peg$parseint_exp","peg$parsedecimal_or_int_exp","peg$parsedecimal_exp","s7","peg$parseoperator","peg$parseprefix_operator","module","implicit","toString"],"sourceRoot":""}