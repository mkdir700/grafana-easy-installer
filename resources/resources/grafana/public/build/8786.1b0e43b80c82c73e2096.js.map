{"version":3,"file":"8786.1b0e43b80c82c73e2096.js","mappings":"wSAaO,MAAMA,EAAc,IAAM,CAC/B,MAAMC,KAAY,MAAmB,EAC/B,CACJ,aAAAC,EACA,SAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,CACtB,KAAI,MAAkB,EAChB,CAACC,EAAWC,CAAY,KAAI,YAAS,EAAK,EAE1CC,EAAYC,GAAwB,IACxC,MAAc,EACX,KAAK,mBAAoBA,CAAS,EAClC,KAAK,IAAM,CACVF,EAAa,EAAI,CACnB,CAAC,EACA,MAAOG,GAAQ,CACd,MAAMC,EAAMD,EAAI,MAAM,SAAWA,EACjCR,EAAU,QAAQS,CAAG,CACvB,CAAC,CACL,EAEA,OAAIL,EAEA,gBAAC,WACC,gBAAC,SAAE,sGAAoG,EACvG,gBAAC,KAAS,CAAC,OAAO,IAAK,GACvB,gBAAC,KAAU,CAAC,QAAQ,UAAU,QAAM,MAAU,EAAE,UAAY,WAAW,iBAEvE,CACF,EAKF,gBAAC,QAAK,SAAUH,EAAaK,CAAQ,GACnC,gBAACI,EAAA,EAAM,KAAC,cAAY,EACpB,gBAACC,EAAA,GACC,MAAM,QACN,YAAY,kEACZ,QAAS,CAAC,CAACR,EAAO,MAClB,MAAOA,EAAO,OAAO,SAErB,gBAACS,EAAA,GACC,GAAG,QACF,GAAGV,EAAS,QAAS,CACpB,SAAU,oBACV,QAAS,CACP,MAAO,KACP,QAAS,kBACX,CACF,CAAC,EACD,YAAY,QACd,CACF,EACA,gBAACW,EAAA,EAAK,KACJ,gBAACC,EAAA,GAAM,CAAC,KAAK,UAAS,yBAAuB,EAC7C,gBAAC,KAAU,CAAC,KAAK,OAAO,QAAM,MAAU,EAAE,UAAY,UAAU,eAEhE,CACF,CACF,CAEJ,ECrEaC,EAAkB,IAE3B,gBAACC,EAAA,GAAW,KACV,gBAAC,KAAQ,KACP,gBAACjB,EAAW,IAAC,CACf,CACF,EAIJ,EAAegB,C","sources":["webpack://grafana/./public/app/core/components/Signup/VerifyEmail.tsx","webpack://grafana/./public/app/core/components/Signup/VerifyEmailPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Field, Input, Button, Legend, Container, LinkButton, Stack } from '@grafana/ui';\nimport { getConfig } from 'app/core/config';\nimport { useAppNotification } from 'app/core/copy/appNotification';\nimport { w3cStandardEmailValidator } from 'app/features/admin/utils';\n\ninterface EmailDTO {\n  email: string;\n}\n\nexport const VerifyEmail = () => {\n  const notifyApp = useAppNotification();\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm<EmailDTO>();\n  const [emailSent, setEmailSent] = useState(false);\n\n  const onSubmit = (formModel: EmailDTO) => {\n    getBackendSrv()\n      .post('/api/user/signup', formModel)\n      .then(() => {\n        setEmailSent(true);\n      })\n      .catch((err) => {\n        const msg = err.data?.message || err;\n        notifyApp.warning(msg);\n      });\n  };\n\n  if (emailSent) {\n    return (\n      <div>\n        <p>An email with a verification link has been sent to the email address. You should receive it shortly.</p>\n        <Container margin=\"md\" />\n        <LinkButton variant=\"primary\" href={getConfig().appSubUrl + '/signup'}>\n          Complete Signup\n        </LinkButton>\n      </div>\n    );\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Legend>Verify Email</Legend>\n      <Field\n        label=\"Email\"\n        description=\"Enter your email address to get a verification link sent to you\"\n        invalid={!!errors.email}\n        error={errors.email?.message}\n      >\n        <Input\n          id=\"email\"\n          {...register('email', {\n            required: 'Email is required',\n            pattern: {\n              value: w3cStandardEmailValidator,\n              message: 'Email is invalid',\n            },\n          })}\n          placeholder=\"Email\"\n        />\n      </Field>\n      <Stack>\n        <Button type=\"submit\">Send verification email</Button>\n        <LinkButton fill=\"text\" href={getConfig().appSubUrl + '/login'}>\n          Back to login\n        </LinkButton>\n      </Stack>\n    </form>\n  );\n};\n","import React from 'react';\n\nimport { LoginLayout, InnerBox } from '../Login/LoginLayout';\n\nimport { VerifyEmail } from './VerifyEmail';\n\nexport const VerifyEmailPage = () => {\n  return (\n    <LoginLayout>\n      <InnerBox>\n        <VerifyEmail />\n      </InnerBox>\n    </LoginLayout>\n  );\n};\n\nexport default VerifyEmailPage;\n"],"names":["VerifyEmail","notifyApp","handleSubmit","register","errors","emailSent","setEmailSent","onSubmit","formModel","err","msg","Legend","Field","Input","Stack","Button","VerifyEmailPage","LoginLayout"],"sourceRoot":""}