{"version":3,"file":"explore.c3a6326421dfc5ba6afb.js","mappings":"wJAmCO,SAASA,EACdC,EACoC,CACpC,OAAQA,EAAW,CACjB,KAAK,KAA4B,OAC/B,MAAO,CACL,SAAO,KAAE,0CAA2C,QAAQ,EAC5D,MAAO,KAA4B,OACnC,eAAa,KACX,gDACA,mDACF,EACA,kBAAmB,CAAE,KAAM,EAAM,EACjC,gBAAiB,CAAE,KAAM,EAAM,CACjC,EACF,KAAK,KAA4B,MAC/B,MAAO,CACL,SAAO,KAAE,yCAA0C,oBAAoB,EACvE,MAAO,KAA4B,MACnC,eAAa,KACX,+CACA,0LACF,EACA,kBAAmB,CACjB,KAAM,GACN,SAAU,GACV,YAAU,KACR,8CACA,uDACF,CACF,EACA,gBAAiB,CACf,KAAM,GACN,SAAU,GACV,YAAU,KACR,8CACA,qEACF,CACF,CACF,EACF,QACE,MAAO,CACL,MAAOA,EACP,MAAOA,EACP,kBAAmB,CAAE,KAAM,EAAM,EACjC,gBAAiB,CAAE,KAAM,EAAM,CACjC,CACJ,CACF,CAEO,MAAMC,EAAsB,IAC1B,OAAO,OAAO,IAA2B,EAAE,IAAKC,GAAuB,CAC5E,MAAMF,GAAYD,EAA6BG,CAAkB,EACjE,MAAO,CACL,MAAOF,GAAU,MACjB,MAAOA,GAAU,MACjB,YAAaA,GAAU,WACzB,CACF,CAAC,C,sLC3FCG,GAAkB,SAAUC,EAASC,EAAS,CAC1CD,IAAY,SAAUA,EAAU,IACpC,IAAIE,KAAU,eAAY,SAAUC,EAAO,CACvC,IAAIC,EAAe,OAAOJ,GAAY,WAAaA,EAAQ,EAAI,GAC/D,GAAKI,EAGL,OAAAD,EAAM,eAAe,EACjBF,IACAE,EAAM,YAAcF,GAEjBA,CACX,EAAG,CAACD,EAASC,CAAO,CAAC,KACrB,aAAU,UAAY,CAClB,GAAKD,EAGL,gBAAG,OAAQ,eAAgBE,CAAO,EAC3B,UAAY,CAAE,SAAO,OAAI,OAAQ,eAAgBA,CAAO,CAAG,CACtE,EAAG,CAACF,EAASE,CAAO,CAAC,CACzB,EACA,SAAeH,G,kGCXR,MAAMM,GAAiC,CAAC,CAAE,OAAAC,EAAQ,UAAAC,EAAW,SAAAC,EAAU,QAAAP,CAAQ,IAElF,gBAACQ,GAAA,GACC,OAAQ,GACR,MAAO,iCACP,UAAWD,EACX,KAAK,uBACL,aAAW,OAAI,CAAE,MAAO,OAAQ,CAAC,GAEjC,gBAAC,UAAIP,CAAQ,EACb,gBAACQ,GAAA,EAAM,UAAN,KACC,gBAACC,EAAA,GAAM,CAAC,QAAQ,YAAY,QAASF,EAAU,KAAK,WAAU,QAE9D,EACA,gBAACE,EAAA,GAAM,CAAC,QAAQ,cAAc,QAASH,CAAA,EAAW,yBAElD,EACA,gBAACG,EAAA,GAAM,CAAC,QAAQ,UAAU,QAASJ,CAAA,EAAQ,kBAE3C,CACF,CACF,E,eC7BCK,IAAAA,IACHA,EAAA,qBAAuB,8EACvBA,EAAA,gBAAkB,yBAClBA,EAAA,eAAiB,+CACjBA,EAAA,YAAc,sEAJXA,IAAAA,IAAA,IASE,MAAMC,GAAmB,CAC9BC,EACAC,EACAC,EACAC,IACG,CACH,MAAMC,KAAkB,aACtB,wFACF,EACA,IAAIC,EAAY,GACZC,EAAiB,GAGrB,GAAIN,IAAW,yCAAuC,WAEpD,GADAK,EAAY,mBACRJ,EACF,GAAIC,EACFI,EAAiB,uDACRH,EACTG,EAAiB,kFAEjB,gBAIEJ,EACFI,EAAiB,uDACRH,EACTG,EAAiB,6BAEjB,gBAGKN,IAAW,yCAAuC,kBAE3D,GADAK,EAAY,0BACRJ,EACF,GAAIC,EACFI,EAAiB,mDAEjB,gBAIEH,EACFG,EAAiB,6BAEjB,gBAGKN,IAAW,yCAAuC,aAE3D,GADAK,EAAY,qBACRH,EACFI,EAAiB,uDACRH,EACTG,EAAiB,0EAEjB,QAGJ,OAAOF,EAAgB,CAAE,UAAAC,EAAW,eAAAC,CAAe,CAAC,CACtD,E,sECtDO,MAAMC,GAA2B,CAAC,CAAE,MAAAC,CAAM,IAAoD,CACnG,MAAMC,KAAW,eAAY,EACvBC,KAAS,MAAWC,EAAS,EAC7BC,KAAqB,eAAY,IAAwB,EACzDC,KAAkB,eAAY,IAAqB,EACnD,CAACC,EAAaC,CAAc,KAAI,YAA6B,MAAS,EAG5E,GAAgBH,GAAoB,kBAAoB,GAAO,mBAAmB,EAClF,GACG,CAACA,GAAoB,kBAAoBA,GAAoB,kBAAqB,GACnF,mEACF,KAGA,aAAU,IAAM,CACd,GAAIA,GAAoB,UAAW,CACjC,KAAM,CAAE,iBAAAI,EAAkB,iBAAAC,CAAiB,EAAIL,EAC/C,IAAIX,EACAD,EACAY,EAAmB,mBACrBX,EAAeW,EAAmB,kBAAkB,aACpDZ,EAASY,EAAmB,kBAAkB,SAG9CZ,EAAS,yCAAuC,aAChDC,EAAe,IAGjB,MAAMiB,EAAenB,GAAiBC,EAAQC,EAAce,EAAkBC,CAAgB,EAC9F,GAAIC,IAAiB,OACnBH,EAAeG,CAAY,UAIzBlB,IAAW,yCAAuC,mBAClDY,EAAmB,kBACnB,CACA,KAAM,CAAE,UAAAO,EAAW,oBAAAC,CAAoB,EAAIR,GAAoB,kBAC3DO,GAAaC,IACfX,KACE,OAAiB,CAAE,UAAAU,EAAW,WAAYC,EAAqB,QAAS,CAAE,cAAe,EAAK,CAAE,CAAC,CACnG,EACAX,KACE,MAA+B,CAC7B,UAAW,EACb,CAAC,CACH,EAEJ,SACET,IAAW,yCAAuC,YAClDY,EAAmB,kBACnB,CACA,KAAM,CAAE,UAAAO,CAAU,EAAIP,GAAoB,kBACtCO,IAAc,SAChBV,KAAS,MAAWU,CAAS,CAAC,EAC9BV,KACE,MAA+B,CAC7B,UAAW,EACb,CAAC,CACH,EAEJ,MAAWT,IAAW,yCAAuC,cAC3DS,KACE,MAA+B,CAC7B,WAAY,EACd,CAAC,CACH,CAGN,CACF,EAAG,CAACG,EAAoBH,EAAUI,CAAe,CAAC,KAGlDQ,GAAA,GAAW,IAAM,CACfZ,KACE,MAA+B,CAC7B,WAAY,GACZ,UAAW,GACX,iBAAkB,GAClB,MAAO,OACP,YAAa,OACb,QAAS,EACX,CAAC,CACH,EAEAD,EAAM,QAASc,GAAS,CACtBb,KACE,OAA4B,CAC1B,UAAWa,EAAK,CAAC,EACjB,4BAA6B,MAC/B,CAAC,CACH,EACAb,KAAS,MAAW,CAAE,UAAWa,EAAK,CAAC,CAAE,CAAC,CAAC,CAC7C,CAAC,CACH,CAAC,EAED,MAAMC,EAAc,IAAM,CACxBd,KACE,MAA+B,CAC7B,WAAY,GACZ,UAAW,GACX,iBAAkB,GAClB,MAAO,OACP,YAAa,OACb,QAAS,EACX,CAAC,CACH,EAEAD,EAAM,QAASc,GAAS,CACtBb,KACE,OAA4B,CAC1B,UAAWa,EAAK,CAAC,EACjB,4BAA6B,MAC/B,CAAC,CACH,EACAb,KAAS,MAAW,CAAE,UAAWa,EAAK,CAAC,CAAE,CAAC,CAAC,CAC7C,CAAC,CACH,EAEME,EAAaL,GAAsB,CACvCJ,EAAe,MAAS,EACxBN,KAAS,MAAWU,CAAS,CAAC,KAC9B,MAAkB,mCAAmC,CACvD,EAEMM,EAA6B,CAACN,EAAmBO,IAA0B,CAC/EX,EAAe,MAAS,EACxBN,KAAS,OAAiB,CAAE,UAAAU,EAAW,WAAYO,EAAe,QAAS,CAAE,cAAe,EAAK,CAAE,CAAC,CAAC,CACvG,EAEMC,EAA6BC,GAAmC,CAQpE,GAPAnB,KACE,MACEG,GAAoB,MACpBA,GAAoB,YACpBA,GAAoB,eACtB,CACF,EACI,CAACgB,GAAyBhB,GAAoB,oBAAsB,OAAW,CACjF,KAAM,CAAE,UAAAO,EAAW,OAAAnB,EAAQ,oBAAAoB,CAAoB,EAAIR,GAAoB,kBACnEZ,IAAW,yCAAuC,YACpDwB,EAAUL,CAAS,EACnBI,EAAY,GAEZvB,IAAW,yCAAuC,mBAClDoB,IAAwB,YAExB,OAAiB,CAAE,UAAAD,EAAW,WAAYC,CAAoB,CAAC,EAC/DG,EAAY,EAEhB,MACEd,KAAS,MAA+B,CAAE,WAAY,GAAO,iBAAkB,GAAO,UAAW,EAAM,CAAC,CAAC,CAE7G,EAEA,OACE,gCAEE,gBAAC,OACC,QAAUoB,GAENA,EAAS,WAAa,YACrBjB,GAAoB,YACpBA,GAAoB,iBAEd,+CAEA,EAEX,CACF,EAECE,IAAgB,QACf,gBAACtB,GAAA,CACC,UAAW,IAAM,CACf,GAAIoB,GAAoB,oBAAsB,OAAW,CACvD,KAAM,CAAE,UAAAO,EAAW,OAAAnB,EAAQ,oBAAAoB,CAAoB,EAAIR,GAAoB,kBACnEZ,IAAW,yCAAuC,WACpDwB,EAAUL,CAAS,EAEnBnB,IAAW,yCAAuC,mBAClDoB,IAAwB,QAExBK,EAA2BN,EAAWC,CAAmB,EAE3DX,KAAS,MAA+B,CAAE,UAAW,EAAM,CAAC,CAAC,CAC/D,MAIEA,KACE,MAA+B,CAC7B,WAAY,GACZ,iBAAkB,GAClB,UAAW,EACb,CAAC,CACH,CAEJ,EACA,SAAU,IAAM,CAEdA,KAAS,MAA+B,CAAE,UAAW,EAAM,CAAC,CAAC,EAC7DM,EAAe,MAAS,CAC1B,EACA,OAAQ,IAAM,CACZY,EAA0B,EAAK,CACjC,EACA,QAASb,CAAA,CACX,EAEF,gBAAC,OAAI,UAAWJ,EAAO,sBACrB,gBAAC,MAAe,CAAC,QAAQ,KAAK,QAAQ,YACpC,gBAACoB,GAAA,EAAO,CAAC,QAAQ,8DACf,gBAACC,GAAA,EAAI,CAAC,UAAWrB,EAAO,UAAW,KAAK,cAAc,KAAK,IAAK,EAClE,EACA,gBAACb,EAAA,IACC,QAAQ,YACR,SAAU,CAACe,GAAoB,QAC/B,KAAK,UACL,UAAWA,GAAoB,QAAUF,EAAO,YAAcA,EAAO,oBACrE,QAAS,IAAM,CACbiB,EAA0B,EAAI,CAChC,GACD,MAED,EACA,gBAAC9B,EAAA,IACC,QAAQ,YACR,KAAK,UACL,UAAWa,EAAO,YAClB,KAAK,QACL,QAAS,IAAM,CACbD,KAAS,MAA+B,CAAE,UAAW,EAAK,CAAC,CAAC,KAC5D,MAAkB,iDAAiD,CACrE,GACD,yBAED,CACF,CACF,CACF,CAEJ,EAEME,GAAaqB,GAAyB,CAC1C,MAAMC,EAAgBD,EAAM,OAAO,gBAAgBA,EAAM,OAAO,QAAQ,IAAI,EACtEE,EAAyBC,GAAiB,QAAQH,EAAM,OAAO,QAAQ,KAAM,EAAG,EAChFI,EAAwBD,GAAiB,OAAOH,EAAM,OAAO,QAAQ,KAAM,EAAG,EAE9EK,EAAgBF,GAAiB,OAAOF,EAAe,EAAG,EAEhE,MAAO,CACL,wBAAsB,OAAI,CACxB,gBAAiBD,EAAM,OAAO,QAAQ,KACtC,UAAW,MACX,QAASA,EAAM,QAAQ,CAAC,CAC1B,CAAC,EACD,aAAW,OAAI,CACb,MAAOC,CACT,CAAC,EACD,eAAa,OAAI,CACf,MAAOA,EACP,YAAaA,EACb,UAAW,CACT,MAAOA,EACP,YAAaA,EACb,gBAAiBC,CACnB,CACF,CAAC,EAED,uBAAqB,OAAI,CACvB,MAAO,GAAGG,CAAa,cACvB,gBAAiB,GAAGD,CAAqB,aAC3C,CAAC,CACH,CACF,E,uCC1RO,MAAME,GAAiB,IAAM,CAClC,KAAM,CAACC,EAASC,CAAU,KAAI,YAAmB,CAAC,CAAC,EAC7C,CAAE,MAAAC,CAAM,KAAI,YAAQ,EACpBhC,KAAW,eAAY,EACvBD,KAAQ,eAAY,IAAW,EAC/BkC,KAAW,eAAY,IAAO,EAE9BC,EAAuB,MAAW,cAAc,sBAAoB,gBAAgB,EAE1F,sBAAU,IAAM,CACd,MAAMC,EAAO,OAAO,KAAKpC,CAAK,EACxBqC,EAAiB,CACrB,KAAM,UACN,SAAU,YAAS,KAAO,CAC5B,EAEMC,EAAuB,CAAC,EAE9B,GAAIJ,EACFI,EAAW,KAAK,CACd,GAAI,yBACJ,KAAM,mBACN,SAAU,aACV,QAAS,IAAM,CACbrC,KAAS,MAAW,CAAE,UAAWmC,EAAK,CAAC,CAAE,CAAC,CAAC,CAC7C,EACA,QAASC,CACX,CAAC,EACIrC,EAAM,CAAC,EAEVsC,EAAW,KAAK,CACd,GAAI,0BACJ,KAAM,oBACN,SAAU,cACV,QAAS,IAAM,CACbrC,KAAS,MAAW,CAAE,UAAWmC,EAAK,CAAC,CAAE,CAAC,CAAC,CAC7C,EACA,QAASC,CACX,CAAC,EACDC,EAAW,KAAK,CACd,GAAI,gCACJ,KAAM,wBACN,SAAU,QACV,QAAS,IAAM,CACbrC,KAAS,MAAWmC,EAAK,CAAC,CAAC,CAAC,CAC9B,EACA,QAASC,CACX,CAAC,EACDC,EAAW,KAAK,CACd,GAAI,iCACJ,KAAM,yBACN,SAAU,QACV,QAAS,IAAM,CACbrC,KAAS,MAAWmC,EAAK,CAAC,CAAC,CAAC,CAC9B,EACA,QAASC,CACX,CAAC,MAEE,CAEL,MAAME,EAAW,OAAO,OAAOvC,CAAK,EAAE,KAAMc,GACnCA,GAAM,oBAAoB,MAAQ,KAC1C,EAEG0B,EAAA,EAAO,eAAe,cAAgBL,GAAwB,CAACI,GACjED,EAAW,KAAK,CACd,GAAI,8BACJ,KAAM,sBACN,QAAS,IAAM,CACbrC,KAAS,MAA+B,CAAE,WAAY,EAAK,CAAC,CAAC,EAC7DA,KAAS,MAAW,CAAE,UAAWmC,EAAK,CAAC,CAAE,CAAC,CAAC,CAC7C,EACA,QAASC,CACX,CAAC,EAGHC,EAAW,KAAK,CACd,GAAI,oBACJ,KAAM,YACN,SAAU,QACV,QAAS,IAAM,CACbrC,KAAS,MAAW,CAAE,UAAWmC,EAAK,CAAC,CAAE,CAAC,CAAC,CAC7C,EACA,QAASC,CACX,CAAC,EACDC,EAAW,KAAK,CACd,GAAI,0BACJ,KAAM,kBACN,SAAU,QACV,QAAS,IAAM,CACbrC,KAAS,MAAU,CAAC,CACtB,EACA,QAASoC,CACX,CAAC,CACH,CACAL,EAAWM,CAAU,CACvB,EAAG,CAACtC,EAAOkC,EAAUD,EAAOhC,EAAUkC,CAAoB,CAAC,KAE3D,uBAAoBF,EAAaF,EAAL,CAAC,EAAa,CAACA,EAASE,CAAK,CAAC,EAEnD,IACT,E,8MC/GIQ,GAAY,SAAUC,EAAK,CAM3B,IAAIC,KAAKC,GAAA,GAAY,CACjB,EAAG,EACH,EAAG,CACP,CAAC,EAAGC,EAAQF,EAAG,CAAC,EAAGG,EAAWH,EAAG,CAAC,EAClC,sBAAU,UAAY,CAClB,IAAI9D,EAAU,UAAY,CAClB6D,EAAI,SACJI,EAAS,CACL,EAAGJ,EAAI,QAAQ,WACf,EAAGA,EAAI,QAAQ,SACnB,CAAC,CAET,EACA,OAAIA,EAAI,YACJ,OAAGA,EAAI,QAAS,SAAU7D,EAAS,CAC/B,QAAS,GACT,QAAS,EACb,CAAC,EAEE,UAAY,CACX6D,EAAI,YACJ,OAAIA,EAAI,QAAS,SAAU7D,CAAO,CAE1C,CACJ,EAAG,CAAC6D,CAAG,CAAC,EACDG,CACX,EACA,SAAeJ,GCHTM,MAAwB,iBAAsD,MAAS,EAEtF,SAASC,GAA8B,CAAE,SAAAC,EAAU,oBAAAC,CAAoB,EAAuC,CACnH,KAAM,CAACC,EAAcC,CAAe,KAAI,YAA2C,CAAC,CAAC,EAC/EC,KAAqB,UAAwB,CAAC,CAAC,EAE/CC,KAA6B,eAAaC,GAAgB,CAC9D,MAAMC,KAAK,aAAS,GAAGD,EAAY,OAAO,IAAIA,EAAY,KAAK,IAAIA,EAAY,IAAI,GAAG,EAEtF,OAAAH,EAAiBK,GAAc,CAC7B,GAAIF,EAAY,QAAU,OAAQ,CAChC,MAAMG,EAAmBC,GAAsBN,EAAoBE,CAAW,EAW9E,MAVqB,CACnB,GAAGE,EACH,CACE,GAAGF,EACH,GAAAC,EACA,SAAUH,EAAmB,QAAQE,EAAY,OAAO,GAAK,CAAC,EAC9D,iBAAAG,CACF,CACF,EAEoB,KAAKE,EAA8B,CACzD,CAEA,GAAIL,EAAY,QAAU,QAAS,CACjC,MAAMM,EAAcJ,EAAU,UAC3BK,GAASA,EAAK,UAAYP,EAAY,SAAWO,EAAK,QAAU,MACnE,EACA,GAAID,IAAgB,GAKlB,OAJ8B,OAAO,KAAKR,EAAmB,OAAO,EAAE,KACnEU,GAAQA,IAAQR,EAAY,OAC/B,EAGEF,EAAmB,QAAQE,EAAY,OAAO,EAAE,KAAK,CACnD,GAAGA,EACH,GAAAC,CACF,CAAC,EAEDH,EAAmB,QAAQE,EAAY,OAAO,EAAI,CAChD,CACE,GAAGA,EACH,GAAAC,CACF,CACF,EAEK,CAAC,GAAGC,CAAS,EAGtB,MAAMO,EAAW,CAAC,GAAGP,CAAS,EACxBQ,EAAS,CAAE,GAAGD,EAASH,CAAW,CAAE,EACpCK,EAAkB,CAAC,GAAID,EAAO,UAAY,CAAC,EAAI,CAAE,GAAGV,EAAa,GAAAC,CAAG,CAAC,EAC3EU,EAAgB,KAAKN,EAA8B,EACnD,MAAMF,EAAmBC,GAAsBN,EAAoBY,CAAM,EAEzE,OAAAD,EAASH,CAAW,EAAI,CACtB,GAAGI,EACH,SAAUC,EACV,iBAAAR,CACF,EAEOM,CACT,CAEA,MAAO,CAAC,GAAGP,CAAS,CACtB,CAAC,EAEMD,CACT,EAAG,CAAC,CAAC,EAECW,KAAa,eAAaX,GAAe,CAC7CJ,EAAiBK,GACfA,EACG,OAAQK,GAASA,EAAK,KAAON,CAAE,EAC/B,IAAKM,IACAA,EAAK,WACPA,EAAK,SAAWA,EAAK,SAAS,OAAQM,GAAUA,EAAM,KAAOZ,CAAE,GAE1DM,EACR,CACL,CACF,EAAG,CAAC,CAAC,EAECO,KAAqB,eAAaL,GAA+C,CACrFZ,EAAgBY,CAAQ,CAC1B,EAAG,CAAC,CAAC,EAEL,sBAAU,IAAM,CACdZ,EAAiBK,GAAc,CAC7B,MAAMO,EAAW,CAAC,GAAGP,CAAS,EAC9B,UAAWK,KAAQE,EACjBF,EAAK,UAAU,KAAKF,EAA8B,EAEpD,OAAOI,CACT,CAAC,CACH,EAAG,CAACd,CAAmB,CAAC,EAGtB,gBAACH,GAAsB,SAAtB,CAA+B,MAAO,CAAE,aAAAI,EAAc,SAAAG,EAAU,WAAAa,EAAY,mBAAAE,CAAmB,GAC7FpB,CACH,CAEJ,CAEO,SAASW,GAA+BU,EAAmCC,EAAmC,CACnH,GAAID,EAAE,KAAOC,EAAE,IAAK,CAClB,MAAMC,EAAOF,EAAE,IAAI,wBAAwBC,EAAE,GAAG,EAChD,GAAIC,IAAS,KAAK,4BAChB,MAAO,GACF,GAAIA,IAAS,KAAK,4BACvB,MAAO,EAEX,CACA,MAAO,EACT,CAEA,SAASb,GACPN,EACAE,EACA,CAIA,OAHiBF,EAAmB,QAAQE,EAAY,OAAO,GAAK,CAAC,GACnC,SAAW,GAAKA,EAAY,gBAGhE,CAEO,SAASkB,IAA2B,CACzC,SAAO,cAAW1B,EAAqB,CACzC,C,eC1IO,SAAS2B,GAAyB,CACvC,uBAAAC,EACA,MAAAC,EACA,KAAAC,EACA,QAAAC,EACA,iBAAAC,EAAmB,SACnB,UAAAC,EACA,YAAAC,EACA,YAAAC,EACA,UAAAC,EACA,SAAAC,EACA,UAAAC,EACA,gBAAAC,EACA,GAAGC,CACL,EAAkC,CAChC,MAAMrF,KAAS,MAAW,EAAS,EAE7BsF,KAAe,MAAGtF,EAAO,OAAQ8E,CAAS,EAE1CS,KAAU,UAAoB,IAAI,EAClC,CAACC,EAAeC,CAAgB,KAAI,YAAS,EAAK,KAExD,aAAU,IAAM,CACVF,EAAQ,SACVE,EAAiBF,EAAQ,SAAS,YAAcA,EAAQ,SAAS,WAAW,CAEhF,EAAG,CAACb,CAAK,CAAC,EAEV,MAAMgB,EACJ,gBAAC,OAAI,aAAW,MAAG1F,EAAO,gBAAiB+E,CAAW,GACnDC,GACC,gBAAC,UACC,UAAWhF,EAAO,eAClB,QAASoF,EACT,aAAW,uCACX,gBAAe,CAACH,EAChB,gBAAeE,CAAA,EAEf,gBAACQ,GAAA,CAAY,KAAMV,EAAY,cAAgB,aAAc,CAC/D,EAEF,gBAAC,UACC,aAAW,MAAGK,EAAc,CAC1B,CAACtF,EAAO,MAAM,EAAGkF,CACnB,CAAC,EACD,aAAYN,EACX,GAAGS,CAAA,EAEJ,gBAACM,GAAA,CAAY,KAAAhB,CAAA,CAAY,EACxBD,GACC,gBAAC,QAAK,UAAW1E,EAAO,cAAe,IAAKuF,CAAA,EACzCb,CACH,CAEJ,CACF,EAMF,OAFoBE,IAAY,CAACH,GAA0Be,GAGzD,gBAACpE,GAAA,EAAO,CAAC,QAASwD,EAAS,UAAWC,CAAA,EACnCa,CACH,EAEAA,CAEJ,CAEA,SAASC,GAAY,CAAE,KAAAhB,CAAK,EAAyC,CACnE,OAAKA,KAID,OAAWA,CAAI,EACV,gBAACtD,GAAA,EAAI,CAAC,KAAMsD,EAAM,KAAM,KAAM,MAAOA,CAAA,CAAM,EAG7CA,EAPE,IAQX,CAEA,MAAM,GAAarD,IACV,CACL,mBAAiB,OAAI,CACnB,SAAU,WACV,QAAS,OACT,WAAY,SACZ,SAAU,EACV,IAAKA,EAAM,QAAQ,CAAC,EACpB,SAAU,SACV,MAAO,MACT,CAAC,EACD,UAAQ,OAAI,CACV,MAAO,8BACP,QAAS,OACT,WAAY,SACZ,OAAQA,EAAM,QAAQA,EAAM,WAAW,OAAO,EAAE,EAChD,QAASA,EAAM,QAAQ,EAAG,CAAC,EAC3B,IAAKA,EAAM,QAAQ,CAAC,EACpB,MAAOA,EAAM,OAAO,KAAK,UACzB,MAAO,OACP,WAAY,cACZ,OAAQ,MACV,CAAC,EACD,kBAAgB,OAAI,CAClB,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,MAAOA,EAAM,QAAQ,CAAC,EACtB,OAAQA,EAAM,QAAQ,CAAC,EACvB,aAAcA,EAAM,MAAM,OAAO,QACjC,MAAOA,EAAM,OAAO,KAAK,UACzB,WAAY,cACZ,OAAQ,OAER,UAAW,CACT,MAAOA,EAAM,OAAO,KAAK,QACzB,WAAYA,EAAM,OAAO,UAAU,KACrC,CACF,CAAC,EACD,iBAAe,OAAI,CACjB,WAAY,SACZ,SAAU,SACV,aAAc,UAChB,CAAC,EACD,UAAQ,OAAI,CACV,gBAAiBA,EAAM,OAAO,WAAW,UACzC,qBAAsBA,EAAM,MAAM,OAAO,QACzC,wBAAyBA,EAAM,MAAM,OAAO,QAC5C,SAAU,WAEV,YAAa,CACX,gBAAiBA,EAAM,OAAO,UAAU,cACxC,aAAcA,EAAM,MAAM,OAAO,QACjC,QAAS,MACT,QAAS,QACT,OAAQ,OACR,SAAU,WACV,UAAW,mBACX,MAAOA,EAAM,QAAQ,EAAG,EACxB,KAAM,KACR,CACF,CAAC,CACH,GC7JK,SAASsE,GAAe,CAAE,SAAAC,EAAU,QAAAC,CAAQ,EAA2D,CAC5G,KAAM,CAACrB,EAAwBsB,CAA4B,KAAIC,GAAA,GAAU,EAAK,EACxEhG,KAAS,MAAW,GAAWyE,CAAsB,EACrDwB,KAAc,UAAOJ,GAAY,IAAI,EACrC,CAAE,EAAGK,CAAe,EAAI,GAAUD,CAAW,EAC7C,CAAE,aAAAhD,CAAa,EAAIsB,GAAyB,GAAK,CAAE,aAAc,CAAC,CAAE,EACpE,CAAC4B,EAAiBC,CAAkB,KAAI,YAASnD,EAAa,CAAC,GAAG,EAAE,EACpE,CAACoD,EAAsBC,CAAuB,KAAI,YAASrD,EAAa,CAAC,GAAG,WAAW,CAAC,GAAG,EAAE,EAE7FsD,EAA2BtD,EAAa,KAC3CW,GAASA,EAAK,UAAY,EAAEA,EAAK,kBAAoBA,EAAK,UAAU,SAAW,IAAMA,EAAK,SAAS,OAAS,CAC/G,EAEM,CAAC4C,EAAkBC,CAAmB,KAAI,YAAS,IAChDxD,EAAa,OAAO,CAACyD,EAAiC9C,KAC3D8C,EAAI9C,EAAK,EAAE,EAAI,GACR8C,GACN,CAAC,CAAC,CACN,EAEKC,EAAiB,CAACnE,EAAyBoE,EAAqBC,EAAkB,IAAM,CAC5F,IAAIC,EAAc,EACdC,EAAqCvE,EAEzC,GACEsE,GAAeC,GAAI,WAAa,EAChCA,EAAKA,GAAI,mBACFA,GAAMA,IAAOlB,GAEtBA,GAAU,OAAO,CACf,IAAKiB,EAAcD,EACnB,SAAU,QACZ,CAAC,KAED,MAAkB,yCAA0C,CAC1D,KAAM,iBACN,KAAMD,CACR,CAAC,CACH,EAEMI,EAAS,IAAM,CACnBjB,EAA6B,KAC7B,MAAkB,yCAA0C,CAC1D,KAAM,UACN,KAAMtB,EAAyB,WAAa,QAC9C,CAAC,CACH,EAEMwC,EAAiBC,GAAmB,CACxCT,EAAqBU,IAAU,CAC7B,GAAGA,EACH,CAACD,CAAM,EAAG,CAACC,EAAKD,CAAM,CACxB,EAAE,KACF,MAAkB,yCAA0C,CAC1D,KAAM,UACN,KAAOV,EAAiBU,CAAM,EAAiB,SAAb,UACpC,CAAC,CACH,EAEA,sBAAU,IAAM,CACd,IAAIE,EAEJ,UAAWxD,KAAQX,EAAc,CAC/B,IAAIoE,EAAMzD,GAAM,KAAK,sBAAsB,EAAE,IAGzCyD,GAAOA,GAAO,IAChBD,EAAaxD,GAIf,MAAM0D,EAAc1D,EAAK,UAAU,KAAMM,GAAU,CACjD,MAAMqD,EAAYrD,EAAM,iBAAmB,EAC3C,IAAIsD,EAAWtD,GAAO,KAAK,sBAAsB,EAAE,IACnD,OAAOsD,GAAYA,GAAYD,CACjC,CAAC,EAED,GAAID,EAAa,CACfhB,EAAwBgB,EAAY,EAAE,EACtClB,EAAmBxC,EAAK,EAAE,EAC1B,KACF,CAEA,GAAIwD,EAAY,CACdhB,EAAmBgB,EAAW,EAAE,EAChCd,EAAwB,MAAS,EACjC,KACF,CACF,CACF,EAAG,CAACrD,EAAciD,CAAc,CAAC,EAG/B,gBAACuB,GAAA,EAAc,CAAC,UAAWzH,EAAO,QAAS,GAAI8F,CAAA,EAC7C,gBAAC4B,GAAA,EAAe,KACd,gBAAC,OAAI,UAAW1H,EAAO,SACrB,gBAACwE,GAAA,CACC,KAAM,mBACN,QAASC,EAAyB,mBAAqB,iBACvD,iBAAkBA,EAAyB,QAAU,SACrD,QAASuC,EACT,aAAW,MAAGhH,EAAO,2BAA4B,CAC/C,CAACA,EAAO,aAAa,EAAG,CAACyE,GAA0B,CAAC8B,CACtD,CAAC,EACD,gBAAe9B,CAAA,CACjB,EAECxB,EAAa,IAAKW,GACjB,gBAAC,YAAe,IAAKA,EAAK,IACxB,gBAACY,GAAA,CACC,IAAKZ,EAAK,GACV,MAAOa,EAAyBb,EAAK,MAAQ,OAC7C,uBAAAa,EACA,aAAW,MAAGzE,EAAO,aAAc,CACjC,CAACA,EAAO,aAAa,EAAG,CAACyE,EACzB,CAACzE,EAAO,kBAAkB,EAAG2H,GAAc/D,EAAMyC,CAAoB,GAAK,CAAC5B,CAC7E,CAAC,EACD,eAAa,MAAG,CACd,CAACzE,EAAO,UAAU,EAAGuG,GAA4B3C,EAAK,UAAU,SAAW,EAC3E,CAAC5D,EAAO,kBAAkB,EACxB2H,GAAc/D,EAAMyC,CAAoB,GAAK,CAAC5B,GAA0B+B,EAAiB5C,EAAK,EAAE,CACpG,CAAC,EACD,KAAMA,EAAK,KACX,QAAS,IAAM+C,EAAe/C,EAAK,IAAKA,EAAK,OAAO,EACpD,QAASA,EAAK,MACd,YAAagE,GAAchE,CAAI,EAC/B,UAAW,CAAC4C,EAAiB5C,EAAK,EAAE,EACpC,gBAAiB,IAAMqD,EAAcrD,EAAK,EAAE,EAC5C,SACG+D,GAAc/D,EAAMyC,CAAoB,GAAK,CAACG,EAAiB5C,EAAK,EAAE,GACtEuC,IAAoBvC,EAAK,IAAM,CAAC4C,EAAiB5C,EAAK,EAAE,EAE3D,UAAWA,EAAK,GAClB,EACA,gBAAC,OAAI,GAAIA,EAAK,GAAI,cAAa,mBAAmBA,EAAK,EAAE,IACtDA,EAAK,WACH,CAACA,EAAK,kBAAoBA,EAAK,SAAS,SAAW,IACpD4C,EAAiB5C,EAAK,EAAE,GACxBA,EAAK,SAAS,IAAI,CAACM,EAAO2D,IACxB,gBAAC,OAAI,IAAK3D,EAAM,GAAI,UAAWlE,EAAO,aACnCyE,GACC,gBAAC,OACC,aAAW,MAAGzE,EAAO,cAAe,CAClC,CAACA,EAAO,kBAAkB,EAAG6H,IAAM,EACnC,CAAC7H,EAAO,iBAAiB,EAAG6H,KAAOjE,EAAK,UAAU,QAAU,GAAK,CACnE,CAAC,EACH,EAEF,gBAACY,GAAA,CACC,IAAKN,EAAM,GACX,MAAOO,EAAyBP,EAAM,MAAQ,OAC9C,uBAAAO,EACA,KAAMA,EAAyB,OAAYb,EAAK,KAChD,aAAW,MAAG5D,EAAO,aAAc,CACjC,CAACA,EAAO,aAAa,EAAG,CAACyE,EACzB,CAACzE,EAAO,kBAAkB,EACxB2H,GAAc/D,EAAMyC,CAAoB,GAAK,CAAC5B,CAClD,CAAC,EACD,YAAazE,EAAO,YACpB,QAAS,IAAM2G,EAAezC,EAAM,IAAKA,EAAM,QAASA,EAAM,eAAe,EAC7E,QAASA,EAAM,MACf,SAAUmC,IAAyBnC,EAAM,GAC3C,CACF,CACD,CACL,CACF,CACD,CACH,CACF,CACF,CAEJ,CAEA,MAAM,GAAY,CAAC5C,EAAsBwG,KAChC,CACL,WAAS,OAAI,CACX,MAAO,UACP,SAAU,WACV,QAAS,OACT,eAAgB,SAChB,YAAaxG,EAAM,QAAQ,CAAC,EAC5B,OAAQ,OACR,gBAAiBA,EAAM,OAAO,WAAW,QACzC,MAAOwG,EAAW,QAAU,OAC5B,SAAUA,EAAW,QAAU,MACjC,CAAC,EACD,WAAS,OAAI,CACX,MAAO,UACP,WAAYxG,EAAM,QAAQ,EAAG,EAC7B,IAAK,CACP,CAAC,EACD,gBAAc,OAAI,CAChB,QAAS,OACT,UAAW,CACT,MAAOA,EAAM,OAAO,KAAK,QACzB,eAAgB,WAClB,CACF,CAAC,EACD,8BAA4B,OAAI,CAC9B,UAAW,CACT,MAAOA,EAAM,OAAO,KAAK,OAC3B,EACA,UAAWwG,EAAW,iBAAmB,GACzC,YAAaA,EAAWxG,EAAM,QAAQ,EAAG,EAAI,MAC/C,CAAC,EACD,cAAY,OAAI,CACd,YAAaA,EAAM,QAAQ,CAAC,CAC9B,CAAC,EACD,eAAa,OAAI,CACf,YAAawG,EAAWxG,EAAM,QAAQ,CAAC,EAAIA,EAAM,QAAQ,CAAC,CAC5D,CAAC,EACD,eAAa,OAAI,CACf,QAAS,OACT,OAAQA,EAAM,QAAQ,CAAC,EACvB,WAAY,QACd,CAAC,EACD,iBAAe,OAAI,CACjB,SAAU,WACV,OAAQ,OACR,MAAOA,EAAM,QAAQ,GAAG,EACxB,YAAa,CACX,YAAa,aAAaA,EAAM,OAAO,OAAO,MAAM,GACpD,QAAS,KACT,OAAQ,OACR,KAAM,GACN,SAAU,WACV,UAAW,iBACb,CACF,CAAC,EACD,sBAAoB,OAAI,CACtB,YAAa,CACX,IAAKA,EAAM,QAAQ,CAAC,EACpB,OAAQ,eAAeA,EAAM,QAAQ,CAAC,CAAC,GACzC,CACF,CAAC,EACD,qBAAmB,OAAI,CACrB,YAAa,CACX,OAAQ,eAAeA,EAAM,QAAQ,CAAC,CAAC,GACzC,CACF,CAAC,EACD,iBAAe,OAAI,CACjB,eAAgB,QAClB,CAAC,EACD,sBAAoB,OAAI,CACtB,gBAAiBA,EAAM,OAAO,WAAW,SAC3C,CAAC,CACH,GAGF,SAASsG,GAAchE,EAA+C,CACpE,MAAO,CAAC,EAAEA,EAAK,UAAYA,EAAK,SAAS,OAAS,IAAM,CAACA,EAAK,kBAAoBA,EAAK,SAAS,SAAW,GAC7G,CAEA,SAAS+D,GAAc/D,EAAsCyC,EAA0C,CACrG,OAAOzC,EAAK,UAAU,KAAMM,GAAUA,EAAM,KAAOmC,CAAoB,CACzE,CCxOO,SAAS0B,GAAmB,CACjC,QAAAjC,EACA,MAAApB,EACA,KAAAC,EACA,gBAAAqD,EACA,SAAAjF,EACA,UAAA+B,EACA,MAAAmD,EAAQ,OACR,iBAAAzE,CACF,EAA4B,CAC1B,KAAM,CAAE,SAAAJ,EAAU,WAAAa,CAAW,EAAIM,GAAyB,GAAK,CAAC,EAC1D/B,KAAM,UAAO,IAAI,EAEvB,sBAAU,IAAM,CACd,GAAI,CAACY,GAAY,CAACa,EAChB,OAIF,MAAMX,EAAKF,EAAS,CAClB,QAAA0C,EACA,MAAApB,EACA,KAAAC,EACA,IAAKnC,EAAI,QACT,gBAAAwF,EACA,MAAAC,EACA,iBAAAzE,CACF,CAAC,EAGD,MAAO,IAAMS,EAAWX,CAAE,CAC5B,EAAG,CAACwC,EAASpB,EAAOC,EAAMqD,EAAiBC,EAAOzE,EAAkBJ,EAAUa,CAAU,CAAC,EAGvF,gBAAC,OAAI,UAAAa,EAAsB,IAAAtC,CAAA,EACxBO,CACH,CAEJ,C,8MC7CA,MAAMmF,GAAmB,CAAC,CAAE,MAAAC,EAAO,YAAAC,CAAY,IAC7C,gBAACC,GAAA,EAAK,CAAC,IAAK,EAAG,UAAU,MAAM,KAAK,OAAO,WAAW,cACpD,gBAACC,GAAA,EAAK,KAAEH,CAAM,EACd,gBAAC/G,GAAA,EAAO,CAAC,QAASgH,CAAA,EAChB,gBAAC/G,GAAA,EAAI,CAAC,KAAK,cAAc,KAAK,IAAK,EACrC,CACF,EAGWkH,GAAoC,CAAC,CAChD,OAAAxJ,EACA,SAAAE,EACA,UAAAuJ,EACA,qBAAAC,CACF,IAA8C,CAC5C,KAAM,CAACC,EAAcC,CAAe,KAAI,YAA6B,MAAS,EACxE,CAACC,EAAoBC,CAAqB,KAAI,YAAqB,CAAC,CAAC,EACrE,CAACC,EAAeC,CAAgB,KAAI,YAAyB,CACjE,gBAAiB,CAAE,KAAM,EAAM,EAC/B,kBAAmB,CAAE,KAAM,EAAM,CACnC,CAAC,EACK,CAACC,EAAYC,CAAa,KAAI,YAAS,EAAK,EAC5C,CAACC,EAAaC,CAAc,KAAI,YAAS,EAAK,EAC9C,CAAE,UAAAC,EAAW,QAAAC,EAAS,SAAAjG,EAAU,MAAAkG,CAAM,KAAI,OAAsC,CACpF,iBAAe,WAAQ,IAAM,CAC3B,GAAIb,EAAsB,CACxB,MAAMc,EAAaf,EAAUC,GAAsB,KAAM,EACzDE,EAAgBY,CAAU,EACtBd,GAAsB,YACxBQ,EAAc,EAAI,EAEpB,MAAMO,KAA4B,MAA6Bf,GAAsB,IAAK,EAC1FM,EAAiB,CACf,gBAAiBS,EAA0B,gBAC3C,kBAAmBA,EAA0B,iBAC/C,CAAC,EAED,MAAMZ,KAAqB,MACzB,CACE,KAAMH,GAAsB,KAC5B,WAAYA,GAAsB,WAClC,SAAUA,GAAsB,QAClC,EACAc,GAAc,GACdd,GAAsB,KACxB,EACA,OAAAI,EAAsB,CAAE,GAAGD,CAAmB,CAAC,EAC/CO,EAAe,EAAI,EACZ,CACL,KAAMV,GAAsB,KAC5B,MAAOA,GAAsB,MAC7B,SAAUA,GAAsB,SAChC,WAAYA,GAAsB,UACpC,CACF,KACE,OAEJ,EAAG,CAACD,EAAWC,CAAoB,CAAC,CACtC,CAAC,EACKnF,KAAK,SAAM,EAEjB,sBAAU,IAAM,CACd,MAAMmG,EAAeH,EAAOI,GAAe,CACzC,MAAMC,EAAaD,EAAW,WAC9B,IAAIE,EAAoB,GACxB,GAAID,IAAe,OAAW,CAC5BC,EAAoB,GACpB,GAAI,CACF,IAAI,OAAOD,CAAU,CACvB,MAAY,CACVC,EAAoB,EACtB,CACF,MACEA,EAAoB,CAACd,EAAc,kBAAkB,KAEvDG,EAAcW,CAAiB,EAC/B,IAAIC,EAAY,CAAC,EACjB,GAAIH,EAAW,KAAM,CACnB,MAAMd,KAAqB,MACzB,CACE,KAAMc,EAAW,KACjB,WAAYE,EAAoBD,EAAa,GAC7C,SAAUD,EAAW,QACvB,EACAlB,EAAUkB,EAAW,KAAM,GAAK,GAChCA,EAAW,KACb,EAEAG,EAAY,OAAO,KAAKjB,CAAkB,EAC1CC,EAAsBgB,EAAU,OAAS,EAAI,CAAE,GAAGjB,CAAmB,EAAI,CAAC,CAAC,CAC7E,CAEIiB,EAAU,SAAW,GAAK,CAACD,EAC7BT,EAAe,EAAK,EAEpBA,EAAe,EAAI,CAEvB,CAAC,EACD,MAAO,IAAMM,EAAa,YAAY,CACxC,EAAG,CAACjB,EAAWM,EAAc,kBAAkB,KAAMQ,CAAK,CAAC,EAGzD,gBAACpK,GAAA,GACC,OAAQ,GACR,MAAO,GAAGuJ,EAAuB,OAAS,KAAK,kBAC/C,UAAWxJ,EACX,aAAW,OAAI,CAAE,MAAO,OAAQ,CAAC,GAEjC,gBAAC,SAAE,+HAGH,EACA,gBAAC6K,GAAA,EAAK,CAAC,MAAM,SACX,gBAAC,OACC,QAAAT,EACA,OAAQ,CAAC,CAAE,MAAO,CAAE,SAAAU,EAAU,IAAAvH,EAAK,GAAGwH,CAAM,CAAE,IAC5C,gBAACC,GAAA,IACE,GAAGD,EACJ,SAAWE,GAAU,CACfA,EAAM,QACRH,EAASG,EAAM,KAAK,EACpBvB,EAAgBH,EAAU0B,EAAM,KAAK,CAAC,EAE1C,EACA,QAAS,OAAO,QAAQ1B,CAAS,EAAE,IAAK2B,IAC/B,CAAE,MAAOA,EAAM,CAAC,EAAG,MAAOA,EAAM,CAAC,CAAE,EAC3C,EACD,aAAW,QACb,EAEF,KAAM,QACR,CACF,EAECzB,GACC,gCACE,gBAAC,WACC,gBAAC,MACC,gBAAiBA,EACjB,YAAa,CAACM,EAAaI,EAAU,YAAY,GAAK,GAAK,EAAE,EAC7D,WAAY,GACd,CACF,EACA,gBAACU,GAAA,EAAK,CAAC,MAAM,QACX,gBAAC,OACC,QAAAT,EACA,OAAQ,CAAC,CAAE,MAAO,CAAE,SAAAU,EAAU,IAAAvH,EAAK,GAAGwH,CAAM,CAAE,IAC5C,gBAACC,GAAA,IACE,GAAGD,EACJ,SAAWE,GAAU,CACnBH,EAASG,EAAM,KAAK,EACpB,MAAMV,KAA4B,MAA6BU,EAAM,KAAM,EAC3EnB,EAAiB,CACf,gBAAiBS,EAA0B,gBAC3C,kBAAmBA,EAA0B,iBAC/C,CAAC,CACH,EACA,WAAS,MAAoB,EAC7B,aAAW,OACb,EAEF,KAAM,OACR,CACF,EACCV,EAAc,kBAAkB,MAC/B,gBAACgB,GAAA,GACC,MACEhB,EAAc,kBAAkB,SAC9B,gBAACZ,GAAA,CAAiB,MAAM,aAAa,YAAaY,EAAc,kBAAkB,SAAU,EAE5F,aAGJ,QAAS,GAAGxF,CAAE,cACd,SAAUwF,EAAc,kBAAkB,UAE1C,gBAACsB,GAAA,EAAK,CAAE,GAAGhH,EAAS,YAAY,EAAG,GAAI,GAAGE,CAAE,cAAe,CAC7D,EAEDwF,EAAc,gBAAgB,MAC7B,gBAACgB,GAAA,GACC,MACEhB,EAAc,gBAAgB,SAC5B,gBAACZ,GAAA,CAAiB,MAAM,gBAAgB,YAAaY,EAAc,gBAAgB,SAAU,EAE7F,gBAGJ,QAAS,GAAGxF,CAAE,aAEd,gBAAC8G,GAAA,EAAK,CAAE,GAAGhH,EAAS,UAAU,EAAG,GAAI,GAAGE,CAAE,YAAa,CACzD,EAED,OAAO,QAAQsF,CAAkB,EAAE,OAAS,GAC3C,gCAAE,wDAEA,gBAAC,WACE,OAAO,QAAQA,CAAkB,EAAE,IAAKuB,GAChC,MAAOA,EAAM,CAAC,CAAC,OAAQA,EAAM,CAAC,GAAG,KAAK;AAAA,CAC9C,CACH,CACF,CAEJ,EAEF,gBAACjL,GAAA,EAAM,UAAN,KACC,gBAACC,EAAA,GAAM,CAAC,QAAQ,YAAY,QAASF,EAAU,KAAK,WAAU,QAE9D,EACA,gBAACE,EAAA,GAAM,CAAC,QAAQ,UAAU,QAAS,IAAMJ,EAAOqK,EAAU,CAAC,EAAG,SAAU,CAACF,CAAA,EACtET,EAAuB,sBAAwB,mCAClD,CACF,CACF,CAEJ,EC1Ma4B,GAAoB,CAAC,CAAE,UAAA5J,EAAW,aAAA6J,CAAa,IAAa,CACvE,MAAMvK,KAAW,eAAY,EACvBC,KAAS,MAAW,EAAS,EAC7BF,KAAQ,eAAY,IAAW,EAC/ByK,EAAY,OAAO,OAAOzK,CAAK,EAC/B,CAAE,MAAO0K,EAAc,QAASC,CAAa,KAAIC,GAAA,GACrD,SAAY,QAAM,OAAqBH,EAAU,CAAC,EAAIA,EAAU,CAAC,CAAE,EACnE,CACEA,EAAU,CAAC,GAAG,mBACdA,EAAU,CAAC,GAAG,QAAQ,CAAC,EAAE,WACzBA,EAAU,CAAC,GAAG,mBACdA,EAAU,CAAC,GAAG,QAAQ,CAAC,EAAE,UAC3B,CACF,EAEM,CAAE,SAAAnH,EAAU,MAAAkG,EAAO,UAAAF,EAAW,SAAAuB,CAAS,KAAI,OAAoB,EAC/D,CAACC,EAAiBC,CAAkB,KAAI,YAAS,EAAK,EACtD,CAACC,EAAiBC,CAAkB,KAAI,YAAS,EAAK,EACtD,CAACC,EAA4BC,CAA6B,KAAI,YAAS,EAAK,EAC5E,CAACC,EAAiBC,CAAkB,KAAI,YAAyC,CAAC,CAAC,EACnF,CAACC,EAAyBC,CAA0B,KAAI,YAA6B,MAAS,EAC9FnL,KAAqB,eAAY,IAAwB,EACzDoD,KAAK,SAAM,EAGjB,sBAAU,KACRvD,KAAS,MAA+B,CAAE,QAAS,EAAK,CAAC,CAAC,EACnD,IAAM,CACXA,KAAS,MAA+B,CAAE,QAAS,EAAM,CAAC,CAAC,CAC7D,GACC,CAACA,CAAQ,CAAC,KAEb,aAAU,IAAM,CAEZ,CAAC0K,GACDD,IAAiB,QACjB,CAACtK,GAAoB,kBACrBkJ,EAAU,OAAO,IAAM,IAEvBuB,EAAS,QAASH,CAAY,CAElC,EAAG,CAACtK,GAAoB,iBAAkBsK,EAAcpB,EAAWqB,EAAcE,CAAQ,CAAC,KAE1F,aAAU,IAAM,CACd,MAAMlB,EAAeH,EAAOY,GAAU,CACpC,IAAIoB,EAAQpL,GAAoB,kBAAoB,GAChDqL,EAAcrB,EAAM,aAAe,GACnC,CAACoB,IAAUpB,EAAM,QAAUM,GAAgBe,IAAgB,IAC7DD,EAAQ,GACCA,GAASpB,EAAM,QAAUM,GAAgBe,EAAY,KAAK,IAAM,KACzED,EAAQ,IAEVvL,KACE,MAA+B,CAAE,MAAOmK,EAAM,MAAO,YAAaA,EAAM,YAAa,iBAAkBoB,CAAM,CAAC,CAChH,CACF,CAAC,EACD,MAAO,IAAM7B,EAAa,YAAY,CACxC,EAAG,CAACvJ,GAAoB,iBAAkBsK,EAAczK,EAAUuJ,CAAK,CAAC,KAExE,aAAU,IAAM,CACd,MAAMgC,EACJ,CAACpL,GAAoB,kBAAoBgL,EAAgB,OAAS,EAAI,GAAOhL,GAAoB,iBACnGH,KAAS,MAA+B,CAAE,gBAAAmL,EAAkC,iBAAkBI,CAAM,CAAC,CAAC,EACtG,IAAIE,EAA0C,CAAC,EAC/CN,EAAgB,QAASO,GAAmB,CAC1C,MAAM7C,KAAqB,MACzB,CACE,KAAM6C,EAAe,KACrB,WAAYA,EAAe,WAC3B,SAAUA,EAAe,QAC3B,EACAnB,EAAa,KAAKmB,EAAe,KAAM,EACvCA,EAAe,KACjB,EAEA,OAAO,KAAK7C,CAAkB,EAAE,QAAS/E,GAAQ,CAC/C2H,EAAgB3H,CAAG,EAAI+E,EAAmB/E,CAAG,GAAG,KAClD,CAAC,CACH,CAAC,EAED9D,KACE,OAA4B,CAC1B,UAAAU,EACA,4BAA6B,CAC3B,YAAa6J,EAAa,YAC1B,SAAUA,EAAa,SACvB,KAAM,CAAE,GAAGA,EAAa,SAAU,GAAGkB,CAAgB,CACvD,CACF,CAAC,CACH,CAEF,EAAG,CAACzL,EAAUmL,CAAe,CAAC,EAG5B,gCACGF,GACC,gBAACzC,GAAA,CACC,SAAU,IAAM,CACd8C,EAA2B,MAAS,EACpCJ,EAA8B,EAAK,CACrC,EACA,OAASQ,GAAiD,CACxD,GAAIL,IAA4B,OAAW,CACzC,MAAMM,EAAsB,CAAC,GAAGR,CAAe,EAC/CQ,EAAoBN,CAAuB,EAAIK,EAC/CN,EAAmBO,CAAmB,EACtCL,EAA2B,MAAS,CACtC,MACEF,EAAmB,CAAC,GAAGD,EAAiBO,CAAc,CAAC,EAEzDR,EAA8B,EAAK,CACrC,EACA,UAAWX,EAAa,SACxB,qBACEc,IAA4B,OAAYF,EAAgBE,CAAuB,EAAI,OAEvF,EAEF,gBAACO,GAAA,EAAK,CAAC,MAAM,sBAAsB,SAAS,QAAO,2CACT,gBAAC,YAAMrB,EAAa,WAAY,EAAO,2EAE/E,gBAAC,WACE,OAAO,QAAQA,EAAa,IAAI,EAAE,IAAKH,GAC/B,MAAOA,EAAM,CAAC,CAAC,OAAQA,EAAM,CAAC,CAAC;AAAA,CACvC,CACH,EACA,gBAACyB,GAAA,GACC,YAAW,GACX,OAAQhB,EACR,SAAU,IAAM,CACdC,EAAmB,CAACD,CAAe,CACrC,EACA,MACE,gBAACvC,GAAA,EAAK,CAAC,IAAK,EAAG,UAAU,MAAM,KAAK,OAAO,WAAW,UAAS,sBAE5D,CAACuC,GAAmB,CAACH,GACpB,gBAAC,QAAK,UAAWzK,EAAO,sBAAuB,UAAUoJ,EAAU,OAAO,GAAKoB,CAAY,EAAG,CAElG,GAGF,gBAACV,GAAA,EAAK,CAAC,MAAM,QAAQ,QAAS,GAAGxG,CAAE,UACjC,gBAAC8G,GAAA,GACE,GAAGhH,EAAS,OAAO,EACpB,GAAI,GAAGE,CAAE,SACT,OAAQ,IAAM,CACR8F,EAAU,OAAO,IAAM,IAAMoB,IAAiB,QAChDG,EAAS,QAASH,CAAY,CAElC,EACF,CACF,EACA,gBAACV,GAAA,EAAK,CAAC,MAAM,cAAc,QAAS,GAAGxG,CAAE,gBACvC,gBAAC8G,GAAA,EAAK,CAAE,GAAGhH,EAAS,aAAa,EAAG,GAAI,GAAGE,CAAE,eAAgB,CAC/D,CACF,EACA,gBAACsI,GAAA,GACC,YAAW,GACX,OAAQd,EACR,SAAU,IAAM,CACdC,EAAmB,CAACD,CAAe,CACrC,EACA,MACE,gBAACzC,GAAA,EAAK,CAAC,IAAK,EAAG,UAAU,MAAM,KAAK,OAAO,WAAW,UAAS,kBAE7D,gBAACjH,GAAA,EAAO,CAAC,QAAQ,0EACf,gBAACC,GAAA,EAAI,CAAC,KAAK,cAAc,KAAK,IAAK,EACrC,CACF,GAGF,gBAAClC,EAAA,IACC,QAAQ,YACR,KAAK,UACL,QAAS,IAAM,CACb8L,EAA8B,EAAI,CACpC,EACA,UAAWjL,EAAO,sBACnB,oBAED,EACCkL,EAAgB,IAAI,CAACO,EAAgB5D,IAAM,CAC1C,KAAM,CAAE,KAAAgE,EAAM,MAAA7B,EAAO,WAAAL,EAAY,SAAAmC,CAAS,EAAIL,EACxCM,EAAgB,EACnBD,GAAY,IAAI,OAAS,EAAI,kBAAkBA,CAAQ,GAAK,QAC5DnC,GAAc,IAAI,OAAS,EAC1B,gCAAE,eACY,gBAAC,YAAMA,CAAW,CAChC,EACE,MACN,EAAE,OAAQqC,IAAQA,EAAG,EACrB,OACE,gBAACC,GAAA,EAAI,CAAC,IAAK,SAASpE,CAAC,IACnB,gBAACoE,GAAA,EAAK,QAAL,KACEjC,EAAM,KAAG6B,CACZ,EACCE,EAAc,OAAS,GACtB,gBAACE,GAAA,EAAK,KAAL,CAAU,UAAWjM,EAAO,oBAAqB+L,CAAc,EAElE,gBAACE,GAAA,EAAK,iBAAL,KACC,gBAACC,GAAA,GACC,IAAI,OACJ,KAAK,OACL,aAAW,sBACX,QAAS,IAAM,CACbb,EAA2BxD,CAAC,EAC5BoD,EAA8B,EAAI,CACpC,EACF,EACA,gBAACkB,GAAA,GACC,aAAW,wBACX,UAAW,IAAMhB,EAAmBD,EAAgB,OAAO,CAACkB,GAAGC,IAAQxE,IAAMwE,CAAG,CAAC,EACjF,eAAc,GAChB,CACF,CACF,CAEJ,CAAC,CACH,CACF,CACF,CAEJ,EAEM,GAAa/K,IACV,CACL,wBAAsB,OAAI,CACxB,WAAYA,EAAM,QAAQ,CAAC,EAC3B,GAAGA,EAAM,WAAW,UACpB,UAAW,QACb,CAAC,EACD,wBAAsB,OAAI,CACxB,aAAcA,EAAM,QAAQ,CAAC,CAC/B,CAAC,EACD,sBAAoB,OAAI,CACtB,WAAY,UACd,CAAC,CACH,G,4EC/PK,SAASgL,GAAgB,CAC9B,MAAAC,EACA,OAAAC,EACA,SAAAC,EACA,MAAA9J,EACA,SAAA+J,EACA,OAAAC,EACA,cAAAC,EACA,YAAAC,EACA,SAAAC,CACF,EAAU,CACR,MAAMC,KAAY,WAChB,KAAO,CACL,QAAM,OAASH,EAAc,IAAI,EACjC,MAAI,OAASA,EAAc,EAAE,EAC7B,IAAK,CACH,QAAM,OAASA,EAAc,IAAI,EACjC,MAAI,OAASA,EAAc,EAAE,CAC/B,CACF,GACA,CAACA,EAAc,KAAMA,EAAc,EAAE,CACvC,EAEMI,KAAS,OAAmBN,CAAQ,EAIpCO,EAA6B,CACjC,yBAH4BC,GAAA,GAAgCL,EAAaE,CAAS,EAIlF,SAAAD,EACA,YAAa,SACf,EAEA,OACE,gBAACK,GAAA,GAAoB,CAAC,MAAOF,CAAA,EAC3B,gBAACG,GAAA,GAAW,CAAC,MAAOJ,EAAO,KAAM,MAAAT,EAAc,OAAAC,EAAgB,aAAc7J,CAAA,EAC1E,CAAC0K,EAAYC,IACZ,gBAACC,GAAA,GACC,KAAM,CAAE,OAAQZ,EAAQ,MAAAhK,EAAc,UAAAoK,CAAU,EAChD,SAAAL,EACA,MAAM,GACN,MAAOW,EACP,OAAQC,EACR,SAAAb,CAAA,CACF,CAEJ,CACF,CAEJ,C,mDCvEIe,GAAyC,UAAY,CACrD,IAAIC,EAAgB,SAAUC,EAAGrJ,EAAG,CAChC,OAAAoJ,EAAgB,OAAO,gBAClB,CAAE,UAAW,CAAC,CAAE,YAAa,OAAS,SAAUC,EAAGrJ,EAAG,CAAEqJ,EAAE,UAAYrJ,CAAG,GAC1E,SAAUqJ,EAAGrJ,EAAG,CAAE,QAASsJ,KAAKtJ,EAAO,OAAO,UAAU,eAAe,KAAKA,EAAGsJ,CAAC,IAAGD,EAAEC,CAAC,EAAItJ,EAAEsJ,CAAC,EAAG,EAC7FF,EAAcC,EAAGrJ,CAAC,CAC7B,EACA,OAAO,SAAUqJ,EAAGrJ,EAAG,CACnBoJ,EAAcC,EAAGrJ,CAAC,EAClB,SAASuJ,GAAK,CAAE,KAAK,YAAcF,CAAG,CACtCA,EAAE,UAAYrJ,IAAM,KAAO,OAAO,OAAOA,CAAC,GAAKuJ,EAAG,UAAYvJ,EAAE,UAAW,IAAIuJ,EACnF,CACJ,EAAG,EACCC,EAAsC,UAAY,CAClD,OAAAA,EAAW,OAAO,QAAU,SAASC,EAAG,CACpC,QAASC,EAAGlG,EAAI,EAAGmG,EAAI,UAAU,OAAQnG,EAAImG,EAAGnG,IAAK,CACjDkG,EAAI,UAAUlG,CAAC,EACf,QAAS8F,KAAKI,EAAO,OAAO,UAAU,eAAe,KAAKA,EAAGJ,CAAC,IAC1DG,EAAEH,CAAC,EAAII,EAAEJ,CAAC,EAClB,CACA,OAAOG,CACX,EACOD,EAAS,MAAM,KAAM,SAAS,CACzC,EAEII,GAAc,CACd,MAAO,OACP,OAAQ,OACR,IAAK,MACL,KAAM,MACN,OAAQ,YACZ,EACIC,GAAc,CACd,MAAO,OACP,OAAQ,OACR,IAAK,MACL,KAAM,MACN,OAAQ,YACZ,EACIC,GAAW,CACX,MAAO,OACP,OAAQ,OACR,SAAU,UACd,EACInO,GAAS,CACT,IAAK6N,EAASA,EAAS,CAAC,EAAGI,EAAW,EAAG,CAAE,IAAK,MAAO,CAAC,EACxD,MAAOJ,EAASA,EAAS,CAAC,EAAGK,EAAW,EAAG,CAAE,KAAM,OAAW,MAAO,MAAO,CAAC,EAC7E,OAAQL,EAASA,EAAS,CAAC,EAAGI,EAAW,EAAG,CAAE,IAAK,OAAW,OAAQ,MAAO,CAAC,EAC9E,KAAMJ,EAASA,EAAS,CAAC,EAAGK,EAAW,EAAG,CAAE,KAAM,MAAO,CAAC,EAC1D,SAAUL,EAASA,EAAS,CAAC,EAAGM,EAAQ,EAAG,CAAE,MAAO,QAAS,IAAK,QAAS,OAAQ,WAAY,CAAC,EAChG,YAAaN,EAASA,EAAS,CAAC,EAAGM,EAAQ,EAAG,CAAE,MAAO,QAAS,OAAQ,QAAS,OAAQ,WAAY,CAAC,EACtG,WAAYN,EAASA,EAAS,CAAC,EAAGM,EAAQ,EAAG,CAAE,KAAM,QAAS,OAAQ,QAAS,OAAQ,WAAY,CAAC,EACpG,QAASN,EAASA,EAAS,CAAC,EAAGM,EAAQ,EAAG,CAAE,KAAM,QAAS,IAAK,QAAS,OAAQ,WAAY,CAAC,CAClG,EACIC,GAAyB,SAAUC,EAAQ,CAC3Cb,GAAUY,EAASC,CAAM,EACzB,SAASD,GAAU,CACf,IAAIE,EAAQD,IAAW,MAAQA,EAAO,MAAM,KAAM,SAAS,GAAK,KAChE,OAAAC,EAAM,YAAc,SAAUC,EAAG,CAC7BD,EAAM,MAAM,cAAcC,EAAGD,EAAM,MAAM,SAAS,CACtD,EACAA,EAAM,aAAe,SAAUC,EAAG,CAC9BD,EAAM,MAAM,cAAcC,EAAGD,EAAM,MAAM,SAAS,CACtD,EACOA,CACX,CACA,OAAAF,EAAQ,UAAU,OAAS,UAAY,CACnC,OAAQ,gBAAoB,MAAO,CAAE,UAAW,KAAK,MAAM,WAAa,GAAI,MAAOP,EAASA,EAAS,CAAE,SAAU,WAAY,WAAY,MAAO,EAAG7N,GAAO,KAAK,MAAM,SAAS,CAAC,EAAI,KAAK,MAAM,eAAiB,CAAC,CAAE,EAAG,YAAa,KAAK,YAAa,aAAc,KAAK,YAAa,EAAG,KAAK,MAAM,QAAQ,CAC9S,EACOoO,CACX,EAAE,eAAmB,ECtEjB,GAAyC,UAAY,CACrD,IAAIX,EAAgB,SAAUC,EAAGrJ,EAAG,CAChC,OAAAoJ,EAAgB,OAAO,gBAClB,CAAE,UAAW,CAAC,CAAE,YAAa,OAAS,SAAUC,EAAGrJ,EAAG,CAAEqJ,EAAE,UAAYrJ,CAAG,GAC1E,SAAUqJ,EAAGrJ,EAAG,CAAE,QAASsJ,KAAKtJ,EAAO,OAAO,UAAU,eAAe,KAAKA,EAAGsJ,CAAC,IAAGD,EAAEC,CAAC,EAAItJ,EAAEsJ,CAAC,EAAG,EAC7FF,EAAcC,EAAGrJ,CAAC,CAC7B,EACA,OAAO,SAAUqJ,EAAGrJ,EAAG,CACnBoJ,EAAcC,EAAGrJ,CAAC,EAClB,SAASuJ,GAAK,CAAE,KAAK,YAAcF,CAAG,CACtCA,EAAE,UAAYrJ,IAAM,KAAO,OAAO,OAAOA,CAAC,GAAKuJ,EAAG,UAAYvJ,EAAE,UAAW,IAAIuJ,EACnF,CACJ,EAAG,EACC,GAAsC,UAAY,CAClD,UAAW,OAAO,QAAU,SAASE,EAAG,CACpC,QAASC,EAAGlG,EAAI,EAAGmG,EAAI,UAAU,OAAQnG,EAAImG,EAAGnG,IAAK,CACjDkG,EAAI,UAAUlG,CAAC,EACf,QAAS8F,KAAKI,EAAO,OAAO,UAAU,eAAe,KAAKA,EAAGJ,CAAC,IAC1DG,EAAEH,CAAC,EAAII,EAAEJ,CAAC,EAClB,CACA,OAAOG,CACX,EACO,GAAS,MAAM,KAAM,SAAS,CACzC,EAIIU,GAAe,CACf,MAAO,OACP,OAAQ,MACZ,EACIC,GAAQ,SAAUT,EAAGU,EAAKC,EAAK,CAAE,OAAO,KAAK,IAAI,KAAK,IAAIX,EAAGW,CAAG,EAAGD,CAAG,CAAG,EACzEE,GAAO,SAAUZ,EAAGa,EAAM,CAAE,OAAO,KAAK,MAAMb,EAAIa,CAAI,EAAIA,CAAM,EAChEC,GAAe,SAAUC,EAAKC,EAAQ,CACtC,OAAO,IAAI,OAAOD,EAAK,GAAG,EAAE,KAAKC,CAAM,CAC3C,EAEIC,GAAe,SAAUrQ,EAAO,CAChC,MAAO,GAAQA,EAAM,SAAWA,EAAM,QAAQ,OAClD,EACIsQ,GAAe,SAAUtQ,EAAO,CAChC,MAAO,IAASA,EAAM,SAAWA,EAAM,UAAY,KAC9CA,EAAM,SAAWA,EAAM,UAAY,GAC5C,EACIuQ,GAAkB,SAAUnB,EAAGoB,EAAWC,EAAS,CAC/CA,IAAY,SAAUA,EAAU,GACpC,IAAIC,EAAkBF,EAAU,OAAO,SAAUjI,EAAMoI,EAAMC,EAAO,CAAE,OAAQ,KAAK,IAAID,EAAOvB,CAAC,EAAI,KAAK,IAAIoB,EAAUjI,CAAI,EAAI6G,CAAC,EAAIwB,EAAQrI,CAAO,EAAG,CAAC,EAClJsI,EAAM,KAAK,IAAIL,EAAUE,CAAe,EAAItB,CAAC,EACjD,OAAOqB,IAAY,GAAKI,EAAMJ,EAAUD,EAAUE,CAAe,EAAItB,CACzE,EACI0B,GAAgB,SAAU1B,EAAG,CAoB7B,OAnBAA,EAAIA,EAAE,SAAS,EACXA,IAAM,QAGNA,EAAE,SAAS,IAAI,GAGfA,EAAE,SAAS,GAAG,GAGdA,EAAE,SAAS,IAAI,GAGfA,EAAE,SAAS,IAAI,GAGfA,EAAE,SAAS,MAAM,GAGjBA,EAAE,SAAS,MAAM,EACVA,EAEJA,EAAI,IACf,EACI2B,GAAe,SAAUd,EAAMe,EAAYvC,EAAYC,EAAa,CACpE,GAAIuB,GAAQ,OAAOA,GAAS,SAAU,CAClC,GAAIA,EAAK,SAAS,IAAI,EAClB,OAAO,OAAOA,EAAK,QAAQ,KAAM,EAAE,CAAC,EAExC,GAAIA,EAAK,SAAS,GAAG,EAAG,CACpB,IAAIgB,EAAQ,OAAOhB,EAAK,QAAQ,IAAK,EAAE,CAAC,EAAI,IAC5C,OAAOe,EAAaC,CACxB,CACA,GAAIhB,EAAK,SAAS,IAAI,EAAG,CACrB,IAAIgB,EAAQ,OAAOhB,EAAK,QAAQ,KAAM,EAAE,CAAC,EAAI,IAC7C,OAAOxB,EAAawC,CACxB,CACA,GAAIhB,EAAK,SAAS,IAAI,EAAG,CACrB,IAAIgB,EAAQ,OAAOhB,EAAK,QAAQ,KAAM,EAAE,CAAC,EAAI,IAC7C,OAAOvB,EAAcuC,CACzB,CACJ,CACA,OAAOhB,CACX,EACIiB,GAAkB,SAAUF,EAAYvC,EAAYC,EAAayC,EAAUC,EAAWC,EAAUC,EAAW,CAC3G,OAAAH,EAAWJ,GAAaI,EAAUH,EAAW,MAAOvC,EAAYC,CAAW,EAC3E0C,EAAYL,GAAaK,EAAWJ,EAAW,OAAQvC,EAAYC,CAAW,EAC9E2C,EAAWN,GAAaM,EAAUL,EAAW,MAAOvC,EAAYC,CAAW,EAC3E4C,EAAYP,GAAaO,EAAWN,EAAW,OAAQvC,EAAYC,CAAW,EACvE,CACH,SAAU,OAAOyC,EAAa,IAAc,OAAY,OAAOA,CAAQ,EACvE,UAAW,OAAOC,EAAc,IAAc,OAAY,OAAOA,CAAS,EAC1E,SAAU,OAAOC,EAAa,IAAc,OAAY,OAAOA,CAAQ,EACvE,UAAW,OAAOC,EAAc,IAAc,OAAY,OAAOA,CAAS,CAC9E,CACJ,EACIC,GAAe,CACf,KACA,QACA,YACA,OACA,OACA,SACA,oBACA,OACA,cACA,WACA,YACA,WACA,YACA,kBACA,4BACA,6BACA,SACA,eACA,gBACA,qBACA,qBACA,WACA,gBACA,WACA,eACA,kBACA,QACA,cACA,SACJ,EAEIC,GAAgB,qBAChBC,GAA2B,SAAUhC,EAAQ,CAC7C,GAAUgC,EAAWhC,CAAM,EAC3B,SAASgC,EAAUC,EAAO,CACtB,IAAIhC,EAAQD,EAAO,KAAK,KAAMiC,CAAK,GAAK,KACxC,OAAAhC,EAAM,MAAQ,EACdA,EAAM,UAAY,KAElBA,EAAM,WAAa,EACnBA,EAAM,UAAY,EAElBA,EAAM,cAAgB,EACtBA,EAAM,eAAiB,EACvBA,EAAM,aAAe,EACrBA,EAAM,gBAAkB,EAExBA,EAAM,WAAa,EACnBA,EAAM,UAAY,EAClBA,EAAM,WAAa,UAAY,CAC3B,GAAI,CAACA,EAAM,WAAa,CAACA,EAAM,OAC3B,OAAO,KAEX,IAAIvK,EAASuK,EAAM,WACnB,GAAI,CAACvK,EACD,OAAO,KAEX,IAAIwM,EAAUjC,EAAM,OAAO,SAAS,cAAc,KAAK,EACvD,OAAAiC,EAAQ,MAAM,MAAQ,OACtBA,EAAQ,MAAM,OAAS,OACvBA,EAAQ,MAAM,SAAW,WACzBA,EAAQ,MAAM,UAAY,cAC1BA,EAAQ,MAAM,KAAO,IACrBA,EAAQ,MAAM,KAAO,WACjBA,EAAQ,UACRA,EAAQ,UAAU,IAAIH,EAAa,EAGnCG,EAAQ,WAAaH,GAEzBrM,EAAO,YAAYwM,CAAO,EACnBA,CACX,EACAjC,EAAM,WAAa,SAAUkC,EAAM,CAC/B,IAAIzM,EAASuK,EAAM,WACdvK,GAGLA,EAAO,YAAYyM,CAAI,CAC3B,EACAlC,EAAM,IAAM,SAAUmC,EAAG,CACjBA,IACAnC,EAAM,UAAYmC,EAE1B,EACAnC,EAAM,MAAQ,CACV,WAAY,GACZ,MAAO,OAAQA,EAAM,WAAaA,EAAM,UAAU,OAAW,IACvD,OACAA,EAAM,WAAaA,EAAM,UAAU,MACzC,OAAQ,OAAQA,EAAM,WAAaA,EAAM,UAAU,QAAY,IACzD,OACAA,EAAM,WAAaA,EAAM,UAAU,OACzC,UAAW,QACX,SAAU,CACN,EAAG,EACH,EAAG,EACH,MAAO,EACP,OAAQ,CACZ,EACA,gBAAiB,CACb,OAAQ,OACR,MAAO,OACP,gBAAiB,gBACjB,OAAQ,OACR,QAAS,EACT,SAAU,QACV,OAAQ,KACR,IAAK,IACL,KAAM,IACN,OAAQ,IACR,MAAO,GACX,EACA,UAAW,MACf,EACAA,EAAM,cAAgBA,EAAM,cAAc,KAAKA,CAAK,EACpDA,EAAM,YAAcA,EAAM,YAAY,KAAKA,CAAK,EAChDA,EAAM,UAAYA,EAAM,UAAU,KAAKA,CAAK,EACrCA,CACX,CACA,cAAO,eAAe+B,EAAU,UAAW,aAAc,CACrD,IAAK,UAAY,CACb,OAAK,KAAK,UAGH,KAAK,UAAU,WAFX,IAGf,EACA,WAAY,GACZ,aAAc,EAClB,CAAC,EACD,OAAO,eAAeA,EAAU,UAAW,SAAU,CACjD,IAAK,UAAY,CAIb,MAHI,CAAC,KAAK,WAGN,CAAC,KAAK,UAAU,cACT,KAEJ,KAAK,UAAU,cAAc,WACxC,EACA,WAAY,GACZ,aAAc,EAClB,CAAC,EACD,OAAO,eAAeA,EAAU,UAAW,YAAa,CACpD,IAAK,UAAY,CACb,OAAO,KAAK,MAAM,MAAQ,KAAK,MAAM,aAAe7B,EACxD,EACA,WAAY,GACZ,aAAc,EAClB,CAAC,EACD,OAAO,eAAe6B,EAAU,UAAW,OAAQ,CAC/C,IAAK,UAAY,CACb,IAAI9D,EAAQ,EACRC,EAAS,EACb,GAAI,KAAK,WAAa,KAAK,OAAQ,CAC/B,IAAIkE,EAAW,KAAK,UAAU,YAC1BC,EAAY,KAAK,UAAU,aAG3BC,EAAc,KAAK,UAAU,MAAM,SACnCA,IAAgB,aAChB,KAAK,UAAU,MAAM,SAAW,YAGpCrE,EAAQ,KAAK,UAAU,MAAM,QAAU,OAAS,KAAK,UAAU,YAAcmE,EAC7ElE,EAAS,KAAK,UAAU,MAAM,SAAW,OAAS,KAAK,UAAU,aAAemE,EAEhF,KAAK,UAAU,MAAM,SAAWC,CACpC,CACA,MAAO,CAAE,MAAOrE,EAAO,OAAQC,CAAO,CAC1C,EACA,WAAY,GACZ,aAAc,EAClB,CAAC,EACD,OAAO,eAAe6D,EAAU,UAAW,YAAa,CACpD,IAAK,UAAY,CACb,IAAI/B,EAAQ,KACRO,EAAO,KAAK,MAAM,KAClBgC,EAAU,SAAUhN,EAAK,CACzB,GAAI,OAAOyK,EAAM,MAAMzK,CAAG,EAAM,KAAeyK,EAAM,MAAMzK,CAAG,IAAM,OAChE,MAAO,OAEX,GAAIyK,EAAM,WAAaA,EAAM,UAAUzK,CAAG,GAAKyK,EAAM,UAAUzK,CAAG,EAAE,SAAS,EAAE,SAAS,GAAG,EAAG,CAC1F,GAAIyK,EAAM,MAAMzK,CAAG,EAAE,SAAS,EAAE,SAAS,GAAG,EACxC,OAAOyK,EAAM,MAAMzK,CAAG,EAAE,SAAS,EAErC,IAAI+L,EAAatB,EAAM,cAAc,EACjCpE,EAAQ,OAAOoE,EAAM,MAAMzK,CAAG,EAAE,SAAS,EAAE,QAAQ,KAAM,EAAE,CAAC,EAC5DiN,EAAW5G,EAAQ0F,EAAW/L,CAAG,EAAK,IAC1C,OAAOiN,EAAU,GACrB,CACA,OAAOpB,GAAcpB,EAAM,MAAMzK,CAAG,CAAC,CACzC,EACI0I,EAAQsC,GAAQ,OAAOA,EAAK,MAAU,KAAe,CAAC,KAAK,MAAM,WAC/Da,GAAcb,EAAK,KAAK,EACxBgC,EAAQ,OAAO,EACjBrE,EAASqC,GAAQ,OAAOA,EAAK,OAAW,KAAe,CAAC,KAAK,MAAM,WACjEa,GAAcb,EAAK,MAAM,EACzBgC,EAAQ,QAAQ,EACtB,MAAO,CAAE,MAAOtE,EAAO,OAAQC,CAAO,CAC1C,EACA,WAAY,GACZ,aAAc,EAClB,CAAC,EACD6D,EAAU,UAAU,cAAgB,UAAY,CAC5C,GAAI,CAAC,KAAK,WACN,OAAK,KAAK,OAGH,CAAE,MAAO,KAAK,OAAO,WAAY,OAAQ,KAAK,OAAO,WAAY,EAF7D,CAAE,MAAO,EAAG,OAAQ,CAAE,EAIrC,IAAIG,EAAO,KAAK,WAAW,EAC3B,GAAI,CAACA,EACD,MAAO,CAAE,MAAO,EAAG,OAAQ,CAAE,EAGjC,IAAIO,EAAc,GACdC,EAAO,KAAK,WAAW,MAAM,SAC7BA,IAAS,SACTD,EAAc,GACd,KAAK,WAAW,MAAM,SAAW,QAGrCP,EAAK,MAAM,SAAW,WACtBA,EAAK,MAAM,SAAW,OACtBA,EAAK,MAAM,UAAY,OACvB,IAAI3B,EAAO,CACP,MAAO2B,EAAK,YACZ,OAAQA,EAAK,YACjB,EACA,OAAIO,IACA,KAAK,WAAW,MAAM,SAAWC,GAErC,KAAK,WAAWR,CAAI,EACb3B,CACX,EACAwB,EAAU,UAAU,WAAa,UAAY,CACrC,KAAK,SACL,KAAK,OAAO,iBAAiB,UAAW,KAAK,SAAS,EACtD,KAAK,OAAO,iBAAiB,YAAa,KAAK,WAAW,EAC1D,KAAK,OAAO,iBAAiB,aAAc,KAAK,SAAS,EACzD,KAAK,OAAO,iBAAiB,YAAa,KAAK,YAAa,CACxD,QAAS,GACT,QAAS,EACb,CAAC,EACD,KAAK,OAAO,iBAAiB,WAAY,KAAK,SAAS,EAE/D,EACAA,EAAU,UAAU,aAAe,UAAY,CACvC,KAAK,SACL,KAAK,OAAO,oBAAoB,UAAW,KAAK,SAAS,EACzD,KAAK,OAAO,oBAAoB,YAAa,KAAK,WAAW,EAC7D,KAAK,OAAO,oBAAoB,aAAc,KAAK,SAAS,EAC5D,KAAK,OAAO,oBAAoB,YAAa,KAAK,YAAa,EAAI,EACnE,KAAK,OAAO,oBAAoB,WAAY,KAAK,SAAS,EAElE,EACAA,EAAU,UAAU,kBAAoB,UAAY,CAChD,GAAI,GAAC,KAAK,WAAa,CAAC,KAAK,QAG7B,KAAIY,EAAgB,KAAK,OAAO,iBAAiB,KAAK,SAAS,EAC/D,KAAK,SAAS,CACV,MAAO,KAAK,MAAM,OAAS,KAAK,KAAK,MACrC,OAAQ,KAAK,MAAM,QAAU,KAAK,KAAK,OACvC,UAAWA,EAAc,YAAc,OAASA,EAAc,UAAY,MAC9E,CAAC,EACL,EACAZ,EAAU,UAAU,qBAAuB,UAAY,CAC/C,KAAK,QACL,KAAK,aAAa,CAE1B,EACAA,EAAU,UAAU,yBAA2B,SAAUa,EAASC,EAAM,CACpE,IAAIC,EAAY,KAAK,WAAa,KAAK,UAAUD,CAAI,EACrD,OAAO,KAAK,MAAMA,CAAI,IAAM,QACxB,KAAK,MAAM,SAASA,CAAI,IAAMD,IAC7B,OAAOE,EAAc,KAAeA,IAAc,QACjD,OACAF,CACV,EACAb,EAAU,UAAU,4BAA8B,SAAUN,EAAUC,EAAW,CAC7E,IAAIqB,EAAoB,KAAK,MAAM,kBAC/BC,EAAY,KAAK,MAAM,UACvBC,EAAmBF,GAAqBvC,GAAa,OAAQwC,CAAS,EACtEE,EAAoBH,GAAqBvC,GAAa,MAAOwC,CAAS,EACtEG,EACAC,EACJ,GAAI,KAAK,MAAM,SAAW,SAAU,CAChC,IAAIC,EAAW,KAAK,WAChBA,IACAF,EAAaF,EACP,KAAK,eAAiB,KAAK,WAC3BI,EAAS,aAAe,KAAK,WAAa,KAAK,eACrDD,EAAcF,EACR,KAAK,gBAAkB,KAAK,UAC5BG,EAAS,cAAgB,KAAK,UAAY,KAAK,cAE7D,MACS,KAAK,MAAM,SAAW,SACvB,KAAK,SACLF,EAAaF,EAAmB,KAAK,eAAiB,KAAK,OAAO,WAAa,KAAK,cACpFG,EAAcF,EAAoB,KAAK,gBAAkB,KAAK,OAAO,YAAc,KAAK,cAGvF,KAAK,MAAM,SAChBC,EAAaF,EACP,KAAK,eAAiB,KAAK,WAC3B,KAAK,MAAM,OAAO,aAAe,KAAK,WAAa,KAAK,eAC9DG,EAAcF,EACR,KAAK,gBAAkB,KAAK,UAC5B,KAAK,MAAM,OAAO,cAAgB,KAAK,UAAY,KAAK,eAElE,OAAIC,GAAc,OAAO,SAASA,CAAU,IACxC1B,EAAWA,GAAYA,EAAW0B,EAAa1B,EAAW0B,GAE1DC,GAAe,OAAO,SAASA,CAAW,IAC1C1B,EAAYA,GAAaA,EAAY0B,EAAc1B,EAAY0B,GAE5D,CAAE,SAAU3B,EAAU,UAAWC,CAAU,CACtD,EACAK,EAAU,UAAU,8BAAgC,SAAUuB,EAASC,EAAS,CAC5E,IAAIC,EAAQ,KAAK,MAAM,OAAS,EAC5BC,EAAc,KAAK,MAAM,aAAe,EACxCtP,EAAK,KAAK,MAAO6O,EAAY7O,EAAG,UAAWuP,EAAWvP,EAAG,SACzDwP,EAAK,KAAK,MAAOC,EAAkBD,EAAG,gBAAiBE,EAA6BF,EAAG,2BAA4BG,EAA4BH,EAAG,0BAClJI,EAAWL,EAAS,MACpBM,EAAYN,EAAS,OACrBO,EAAcJ,GAA8B,EAC5CK,EAAaJ,GAA6B,EAC9C,OAAItD,GAAa,QAASwC,CAAS,IAC/Be,EAAWL,EAAS,OAAUJ,EAAUI,EAAS,GAAKD,EAAeD,EACjEI,IACAI,GAAaD,EAAWG,GAAc,KAAK,MAAQD,IAGvDzD,GAAa,OAAQwC,CAAS,IAC9Be,EAAWL,EAAS,OAAUJ,EAAUI,EAAS,GAAKD,EAAeD,EACjEI,IACAI,GAAaD,EAAWG,GAAc,KAAK,MAAQD,IAGvDzD,GAAa,SAAUwC,CAAS,IAChCgB,EAAYN,EAAS,QAAWH,EAAUG,EAAS,GAAKD,EAAeD,EACnEI,IACAG,GAAYC,EAAYC,GAAe,KAAK,MAAQC,IAGxD1D,GAAa,MAAOwC,CAAS,IAC7BgB,EAAYN,EAAS,QAAWH,EAAUG,EAAS,GAAKD,EAAeD,EACnEI,IACAG,GAAYC,EAAYC,GAAe,KAAK,MAAQC,IAGrD,CAAE,SAAUH,EAAU,UAAWC,CAAU,CACtD,EACAjC,EAAU,UAAU,gCAAkC,SAAUgC,EAAUC,EAAW3D,EAAKD,EAAK,CAC3F,IAAIjM,EAAK,KAAK,MAAOyP,EAAkBzP,EAAG,gBAAiB0P,EAA6B1P,EAAG,2BAA4B2P,EAA4B3P,EAAG,0BAClJgQ,EAAmB,OAAO/D,EAAI,MAAU,IAAc,GAAKA,EAAI,MAC/DgE,EAAmB,OAAO/D,EAAI,MAAU,KAAeA,EAAI,MAAQ,EAAI0D,EAAW1D,EAAI,MACtFgE,EAAoB,OAAOjE,EAAI,OAAW,IAAc,GAAKA,EAAI,OACjEkE,EAAoB,OAAOjE,EAAI,OAAW,KAAeA,EAAI,OAAS,EAAI2D,EAAY3D,EAAI,OAC1F4D,EAAcJ,GAA8B,EAC5CK,EAAaJ,GAA6B,EAC9C,GAAIF,EAAiB,CACjB,IAAIW,GAAiBF,EAAoBJ,GAAe,KAAK,MAAQC,EACjEM,GAAiBF,EAAoBL,GAAe,KAAK,MAAQC,EACjEO,GAAkBN,EAAmBD,GAAc,KAAK,MAAQD,EAChES,GAAkBN,EAAmBF,GAAc,KAAK,MAAQD,EAChEU,EAAiB,KAAK,IAAIR,EAAkBI,CAAa,EACzDK,EAAiB,KAAK,IAAIR,EAAkBI,CAAa,EACzDK,EAAkB,KAAK,IAAIR,EAAmBI,CAAc,EAC5DK,EAAkB,KAAK,IAAIR,EAAmBI,CAAc,EAChEX,EAAW5D,GAAM4D,EAAUY,EAAgBC,CAAc,EACzDZ,EAAY7D,GAAM6D,EAAWa,EAAiBC,CAAe,CACjE,MAEIf,EAAW5D,GAAM4D,EAAUI,EAAkBC,CAAgB,EAC7DJ,EAAY7D,GAAM6D,EAAWK,EAAmBC,CAAiB,EAErE,MAAO,CAAE,SAAUP,EAAU,UAAWC,CAAU,CACtD,EACAjC,EAAU,UAAU,sBAAwB,UAAY,CAEpD,GAAI,KAAK,MAAM,SAAW,SAAU,CAChC,IAAIgD,EAAW,KAAK,WACpB,GAAIA,EAAU,CACV,IAAIC,EAAaD,EAAS,sBAAsB,EAChD,KAAK,WAAaC,EAAW,KAC7B,KAAK,UAAYA,EAAW,GAChC,CACJ,CAEA,GAAI,KAAK,MAAM,QAAU,OAAO,KAAK,MAAM,QAAW,SAAU,CAC5D,IAAIC,EAAa,KAAK,MAAM,OAAO,sBAAsB,EACzD,KAAK,WAAaA,EAAW,KAC7B,KAAK,UAAYA,EAAW,GAChC,CAEA,GAAI,KAAK,UAAW,CAChB,IAAI9Q,EAAK,KAAK,UAAU,sBAAsB,EAAG+Q,EAAO/Q,EAAG,KAAMgR,EAAQhR,EAAG,IAAKiR,EAAQjR,EAAG,MAAOkR,EAASlR,EAAG,OAC/G,KAAK,cAAgB+Q,EACrB,KAAK,eAAiBE,EACtB,KAAK,aAAeD,EACpB,KAAK,gBAAkBE,CAC3B,CACJ,EACAtD,EAAU,UAAU,cAAgB,SAAUzR,EAAO0S,EAAW,CAC5D,GAAI,GAAC,KAAK,WAAa,CAAC,KAAK,QAG7B,KAAIM,EAAU,EACVC,EAAU,EASd,GARIjT,EAAM,aAAesQ,GAAatQ,EAAM,WAAW,GACnDgT,EAAUhT,EAAM,YAAY,QAC5BiT,EAAUjT,EAAM,YAAY,SAEvBA,EAAM,aAAeqQ,GAAarQ,EAAM,WAAW,IACxDgT,EAAUhT,EAAM,YAAY,QAAQ,CAAC,EAAE,QACvCiT,EAAUjT,EAAM,YAAY,QAAQ,CAAC,EAAE,SAEvC,KAAK,MAAM,eACP,KAAK,UAAW,CAChB,IAAIgV,EAAc,KAAK,MAAM,cAAchV,EAAO0S,EAAW,KAAK,SAAS,EAC3E,GAAIsC,IAAgB,GAChB,MAER,CAGA,KAAK,MAAM,OACP,OAAO,KAAK,MAAM,KAAK,OAAW,KAAe,KAAK,MAAM,KAAK,SAAW,KAAK,MAAM,QACvF,KAAK,SAAS,CAAE,OAAQ,KAAK,MAAM,KAAK,MAAO,CAAC,EAEhD,OAAO,KAAK,MAAM,KAAK,MAAU,KAAe,KAAK,MAAM,KAAK,QAAU,KAAK,MAAM,OACrF,KAAK,SAAS,CAAE,MAAO,KAAK,MAAM,KAAK,KAAM,CAAC,GAItD,KAAK,MACD,OAAO,KAAK,MAAM,iBAAoB,SAAW,KAAK,MAAM,gBAAkB,KAAK,KAAK,MAAQ,KAAK,KAAK,OAC9G,IAAIC,EACA5C,EAAgB,KAAK,OAAO,iBAAiB,KAAK,SAAS,EAC/D,GAAIA,EAAc,YAAc,OAAQ,CACpC,IAAI6C,EAAW,KAAK,WACpB,GAAIA,EAAU,CACV,IAAI/E,EAAM,KAAK,OAAO,iBAAiB+E,CAAQ,EAAE,cACjD,KAAK,QAAU/E,EAAI,WAAW,KAAK,EAAI,MAAQ,SAC/C8E,EAAY5C,EAAc,SAC9B,CACJ,CAEA,KAAK,sBAAsB,EAC3B,KAAK,WAAW,EAChB,IAAItO,EAAQ,CACR,SAAU,CACN,EAAGiP,EACH,EAAGC,EACH,MAAO,KAAK,KAAK,MACjB,OAAQ,KAAK,KAAK,MACtB,EACA,WAAY,GACZ,gBAAiB,GAAS,GAAS,CAAC,EAAG,KAAK,MAAM,eAAe,EAAG,CAAE,OAAQ,KAAK,OAAO,iBAAiBjT,EAAM,MAAM,EAAE,QAAU,MAAO,CAAC,EAC3I,UAAW0S,EACX,UAAWuC,CACf,EACA,KAAK,SAASlR,CAAK,EACvB,EACA0N,EAAU,UAAU,YAAc,SAAUzR,EAAO,CAC/C,IAAI0P,EAAQ,KACZ,GAAI,GAAC,KAAK,MAAM,YAAc,CAAC,KAAK,WAAa,CAAC,KAAK,QAGvD,IAAI,KAAK,OAAO,YAAcW,GAAarQ,CAAK,EAC5C,GAAI,CACAA,EAAM,eAAe,EACrBA,EAAM,gBAAgB,CAC1B,MACU,CAEV,CAEJ,IAAI6D,EAAK,KAAK,MAAOsN,EAAWtN,EAAG,SAAUuN,EAAYvN,EAAG,UAAWwN,EAAWxN,EAAG,SAAUyN,EAAYzN,EAAG,UAC1GmP,EAAU3C,GAAarQ,CAAK,EAAIA,EAAM,QAAQ,CAAC,EAAE,QAAUA,EAAM,QACjEiT,EAAU5C,GAAarQ,CAAK,EAAIA,EAAM,QAAQ,CAAC,EAAE,QAAUA,EAAM,QACjEqT,EAAK,KAAK,MAAOX,EAAYW,EAAG,UAAWD,EAAWC,EAAG,SAAU1F,EAAQ0F,EAAG,MAAOzF,EAASyF,EAAG,OACjGrC,EAAa,KAAK,cAAc,EAChCjB,EAAMmB,GAAgBF,EAAY,KAAK,OAAO,WAAY,KAAK,OAAO,YAAaG,EAAUC,EAAWC,EAAUC,CAAS,EAC/HH,EAAWpB,EAAI,SACfqB,EAAYrB,EAAI,UAChBsB,EAAWtB,EAAI,SACfuB,EAAYvB,EAAI,UAEhB,IAAIoF,EAAK,KAAK,8BAA8BnC,EAASC,CAAO,EAAGS,EAAYyB,EAAG,UAAW1B,EAAW0B,EAAG,SAEnGC,EAAc,KAAK,4BAA4BjE,EAAUC,CAAS,EAClE,KAAK,MAAM,MAAQ,KAAK,MAAM,KAAK,IACnCqC,EAAWlD,GAAgBkD,EAAU,KAAK,MAAM,KAAK,EAAG,KAAK,MAAM,OAAO,GAE1E,KAAK,MAAM,MAAQ,KAAK,MAAM,KAAK,IACnCC,EAAYnD,GAAgBmD,EAAW,KAAK,MAAM,KAAK,EAAG,KAAK,MAAM,OAAO,GAGhF,IAAIpB,EAAU,KAAK,gCAAgCmB,EAAUC,EAAW,CAAE,MAAO0B,EAAY,SAAU,OAAQA,EAAY,SAAU,EAAG,CAAE,MAAO/D,EAAU,OAAQC,CAAU,CAAC,EAG9K,GAFAmC,EAAWnB,EAAQ,SACnBoB,EAAYpB,EAAQ,UAChB,KAAK,MAAM,KAAM,CACjB,IAAI+C,EAAerF,GAAKyD,EAAU,KAAK,MAAM,KAAK,CAAC,CAAC,EAChD6B,EAAgBtF,GAAK0D,EAAW,KAAK,MAAM,KAAK,CAAC,CAAC,EAClD7C,EAAM,KAAK,MAAM,SAAW,EAChC4C,EAAW5C,IAAQ,GAAK,KAAK,IAAIwE,EAAe5B,CAAQ,GAAK5C,EAAMwE,EAAe5B,EAClFC,EAAY7C,IAAQ,GAAK,KAAK,IAAIyE,EAAgB5B,CAAS,GAAK7C,EAAMyE,EAAgB5B,CAC1F,CACA,IAAI6B,EAAQ,CACR,MAAO9B,EAAWL,EAAS,MAC3B,OAAQM,EAAYN,EAAS,MACjC,EACA,GAAIzF,GAAS,OAAOA,GAAU,UAC1B,GAAIA,EAAM,SAAS,GAAG,EAAG,CACrB,IAAIuE,EAAWuB,EAAWzC,EAAW,MAAS,IAC9CyC,EAAWvB,EAAU,GACzB,SACSvE,EAAM,SAAS,IAAI,EAAG,CAC3B,IAAI6H,EAAM/B,EAAW,KAAK,OAAO,WAAc,IAC/CA,EAAW+B,EAAK,IACpB,SACS7H,EAAM,SAAS,IAAI,EAAG,CAC3B,IAAI8H,EAAMhC,EAAW,KAAK,OAAO,YAAe,IAChDA,EAAWgC,EAAK,IACpB,EAEJ,GAAI7H,GAAU,OAAOA,GAAW,UAC5B,GAAIA,EAAO,SAAS,GAAG,EAAG,CACtB,IAAIsE,EAAWwB,EAAY1C,EAAW,OAAU,IAChD0C,EAAYxB,EAAU,GAC1B,SACStE,EAAO,SAAS,IAAI,EAAG,CAC5B,IAAI4H,EAAM9B,EAAY,KAAK,OAAO,WAAc,IAChDA,EAAY8B,EAAK,IACrB,SACS5H,EAAO,SAAS,IAAI,EAAG,CAC5B,IAAI6H,EAAM/B,EAAY,KAAK,OAAO,YAAe,IACjDA,EAAY+B,EAAK,IACrB,EAEJ,IAAIC,EAAW,CACX,MAAO,KAAK,yBAAyBjC,EAAU,OAAO,EACtD,OAAQ,KAAK,yBAAyBC,EAAW,QAAQ,CAC7D,EACI,KAAK,UAAY,MACjBgC,EAAS,UAAYA,EAAS,MAEzB,KAAK,UAAY,WACtBA,EAAS,UAAYA,EAAS,WAGlC,cAAU,UAAY,CAClBhG,EAAM,SAASgG,CAAQ,CAC3B,CAAC,EACG,KAAK,MAAM,UACX,KAAK,MAAM,SAAS1V,EAAO0S,EAAW,KAAK,UAAW6C,CAAK,EAEnE,EACA9D,EAAU,UAAU,UAAY,SAAUzR,EAAO,CAC7C,IAAI6D,EAAK,KAAK,MAAO8R,EAAa9R,EAAG,WAAY6O,EAAY7O,EAAG,UAAWuP,EAAWvP,EAAG,SACzF,GAAI,GAAC8R,GAAc,CAAC,KAAK,WAGzB,KAAIJ,EAAQ,CACR,MAAO,KAAK,KAAK,MAAQnC,EAAS,MAClC,OAAQ,KAAK,KAAK,OAASA,EAAS,MACxC,EACI,KAAK,MAAM,cACX,KAAK,MAAM,aAAapT,EAAO0S,EAAW,KAAK,UAAW6C,CAAK,EAE/D,KAAK,MAAM,MACX,KAAK,SAAS,KAAK,MAAM,IAAI,EAEjC,KAAK,aAAa,EAClB,KAAK,SAAS,CACV,WAAY,GACZ,gBAAiB,GAAS,GAAS,CAAC,EAAG,KAAK,MAAM,eAAe,EAAG,CAAE,OAAQ,MAAO,CAAC,CAC1F,CAAC,EACL,EACA9D,EAAU,UAAU,WAAa,SAAUxB,EAAM,CAC7C,KAAK,SAAS,CAAE,MAAOA,EAAK,MAAO,OAAQA,EAAK,MAAO,CAAC,CAC5D,EACAwB,EAAU,UAAU,cAAgB,UAAY,CAC5C,IAAI/B,EAAQ,KACR7L,EAAK,KAAK,MAAO+R,EAAS/R,EAAG,OAAQgS,EAAehS,EAAG,aAAciS,EAAgBjS,EAAG,cAAekS,EAAqBlS,EAAG,mBAAoBmS,EAAqBnS,EAAG,mBAAoBoS,EAAkBpS,EAAG,gBACxN,GAAI,CAAC+R,EACD,OAAO,KAEX,IAAIM,EAAW,OAAO,KAAKN,CAAM,EAAE,IAAI,SAAUzF,EAAK,CAClD,OAAIyF,EAAOzF,CAAG,IAAM,GACR,gBAAoBX,GAAS,CAAE,IAAKW,EAAK,UAAWA,EAAK,cAAeT,EAAM,cAAe,cAAemG,GAAgBA,EAAa1F,CAAG,EAAG,UAAW2F,GAAiBA,EAAc3F,CAAG,CAAE,EAAG8F,GAAmBA,EAAgB9F,CAAG,EAAI8F,EAAgB9F,CAAG,EAAI,IAAI,EAE3Q,IACX,CAAC,EAED,OAAQ,gBAAoB,MAAO,CAAE,UAAW6F,EAAoB,MAAOD,CAAmB,EAAGG,CAAQ,CAC7G,EACAzE,EAAU,UAAU,OAAS,UAAY,CACrC,IAAI/B,EAAQ,KACRyG,EAAe,OAAO,KAAK,KAAK,KAAK,EAAE,OAAO,SAAUrO,EAAK7C,EAAK,CAClE,OAAIsM,GAAa,QAAQtM,CAAG,IAAM,KAGlC6C,EAAI7C,CAAG,EAAIyK,EAAM,MAAMzK,CAAG,GACnB6C,CACX,EAAG,CAAC,CAAC,EACDsO,EAAQ,GAAS,GAAS,GAAS,CAAE,SAAU,WAAY,WAAY,KAAK,MAAM,WAAa,OAAS,MAAO,EAAG,KAAK,MAAM,KAAK,EAAG,KAAK,SAAS,EAAG,CAAE,SAAU,KAAK,MAAM,SAAU,UAAW,KAAK,MAAM,UAAW,SAAU,KAAK,MAAM,SAAU,UAAW,KAAK,MAAM,UAAW,UAAW,aAAc,WAAY,CAAE,CAAC,EAChU,KAAK,MAAM,YACXA,EAAM,UAAY,KAAK,MAAM,WAEjC,IAAIC,EAAU,KAAK,MAAM,IAAM,MAC/B,OAAQ,gBAAoBA,EAAS,GAAS,CAAE,IAAK,KAAK,IAAK,MAAOD,EAAO,UAAW,KAAK,MAAM,SAAU,EAAGD,CAAY,EACxH,KAAK,MAAM,YAAc,gBAAoB,MAAO,CAAE,MAAO,KAAK,MAAM,eAAgB,CAAC,EACzF,KAAK,MAAM,SACX,KAAK,cAAc,CAAC,CAC5B,EACA1E,EAAU,aAAe,CACrB,GAAI,MACJ,cAAe,UAAY,CAAE,EAC7B,SAAU,UAAY,CAAE,EACxB,aAAc,UAAY,CAAE,EAC5B,OAAQ,CACJ,IAAK,GACL,MAAO,GACP,OAAQ,GACR,KAAM,GACN,SAAU,GACV,YAAa,GACb,WAAY,GACZ,QAAS,EACb,EACA,MAAO,CAAC,EACR,KAAM,CAAC,EAAG,CAAC,EACX,gBAAiB,GACjB,0BAA2B,EAC3B,2BAA4B,EAC5B,MAAO,EACP,YAAa,EACb,QAAS,CACb,EACOA,CACX,EAAE,eAAmB,E,YCnuBd,SAAS6E,GAAc5E,EAAc,CAC1C,KAAM,CAAE,MAAA/D,EAAO,SAAAxJ,EAAU,SAAAoS,CAAS,EAAI7E,EAChChP,KAAQ,MAAU,EAClBtB,KAAS,MAAW,EAAS,EAC7BoV,KAAa,MAAc9T,CAAK,EAChC+T,EAAc,GAAG9I,EAAQ,IAAI,KAEnC,OACE,gBAAC8D,GAAA,CACC,aAAW,MAAGrQ,EAAO,MAAOA,EAAO,UAAWA,EAAO,YAAY,EACjE,YAAa,CAAE,MAAOqV,EAAa,OAAQ,GAAG/T,EAAM,WAAW,iBAAiB,aAAa,IAAK,EAClG,cAAe,CAAE,IAAK8T,EAAW,oBAAqB,EACtD,OAAQ,CACN,IAAK,GACL,MAAO,GACP,OAAQ,GACR,KAAM,GACN,SAAU,GACV,YAAa,GACb,WAAY,GACZ,QAAS,EACX,EACA,UAAU,QACV,SAAUC,EACV,SAAUA,EACV,SAAAF,CAAA,EAECpS,CACH,CAEJ,CAEA,MAAMuS,GAAehU,MAAyB;AAAA;AAAA,4BAElBA,EAAM,WAAW,iBAAiB,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQrE,GAAaA,IAA0B,CAE3C,SAAO,OAAI,CACT,SAAU,kBACZ,CAAC,EACD,aAAW,OAAI,CACb,OAAQ,EACR,WAAYA,EAAM,OAAO,WAAW,QACpC,UAAW,aAAaA,EAAM,OAAO,OAAO,IAAI,GAChD,OAAQA,EAAM,QAAQ,EAAG,GAAI,EAAG,EAAE,EAClC,UAAWA,EAAM,QAAQ,GACzB,OAAQA,EAAM,OAAO,WACvB,CAAC,EACD,gBAAc,OAAI,CAChB,QAAS,EACT,UAAW,iBAAiBgU,GAAYhU,CAAK,CAAC,EAChD,CAAC,CACH,G,gEC3CO,SAASiU,GAAsBjF,EAAc,CAClD,KAAM,CAAE,MAAA/D,EAAO,QAAAiJ,EAAS,cAAAC,EAAe,SAAAhJ,EAAU,QAAAiJ,EAAS,UAAAjV,CAAU,EAAI6P,EAClE,CAACqF,EAAaC,CAAc,KAAI,YAAyB,CAC7D,eAAgB,GAChB,gBAAiB,EACnB,CAAC,EACKC,EAAaJ,GAAe,QAAU,CAAC,EAC7C,IAAIK,EAASL,GAAe,OACxB,CAACK,GAAQ,QAAUL,GAAe,QACpCK,EAAS,CAACL,EAAc,KAAK,MAG/B,aAAU,IAAM,IACd,MAAkB,wCAAwC,CAC5D,EAAG,CAAC,CAAC,EAEL,MAAMM,EAAsB,CAC1B,MAAO,QACP,MAAO,QACP,KAAM,aACN,QAAS,gBAACC,GAAA,EAAe,CAAC,KAAMP,EAAgB,SAAUA,GAAe,SAAS,UAAY,IAAe,CAAE,CACjH,EAEMQ,EAAqB,CACzB,MAAO,OACP,MAAO,OACP,KAAM,iBACN,QAAS,gBAACC,GAAA,EAAc,CAAC,KAAMT,EAAe,QAAAD,CAAA,CAAkB,CAClE,EAEMW,EAAqB,CACzB,MAAO,OACP,MAAO,OACP,KAAM,WACN,QACE,gBAACC,GAAA,GACC,KAAMP,EACN,SAAU,UACV,UAAWJ,EAAc,QAAU,MAAa,QAChD,QAASE,EACT,SAAAlJ,EACA,IAAK,MAAQ,QACb,yBAAyB,kCACzB,gBAAiBmJ,CAAA,CACnB,CAEJ,EAEMS,EAAsB,CAC1B,MAAO,QACP,MAAO,QACP,KAAM,cACN,QACE,gBAACC,GAAA,GACC,WAAYZ,KAAU,OAAe,KAAG,OAAmBjV,CAAS,CAAC,KAAI,OAAmBA,CAAS,EACrG,KAAMgV,EACN,eAAgB,IAAMnF,EAAM,WAAW,CAAE,UAAA7P,CAAU,CAAC,EACtD,CAEJ,EAEM8V,EAAO,CAACR,EAAUM,EAAUJ,EAASE,CAAO,EAClD,GAAIL,GAAQ,OAAQ,CAClB,MAAMU,EAAsB,CAC1B,MAAO,QACP,MAAO,QACP,KAAM,uBACN,QAAS,gBAACC,GAAA,EAAe,CAAC,OAAAX,CAAA,CAAgB,CAC5C,EACAS,EAAK,KAAKC,CAAQ,CACpB,CACA,OACE,gBAACtB,GAAa,CAAC,MAAA3I,CAAA,EACb,gBAACmK,GAAA,EAAe,CAAC,KAAAH,EAAY,QAAAf,EAAkB,iBAAiB,uBAAwB,EAC1F,CAEJ,CAEA,SAASmB,GAAgBhU,EAAmB,CAAE,UAAAlC,CAAU,EAA0B,CAEhF,MAAMmD,EADUjB,EAAM,QACiB,MAAMlC,CAAS,EAChD,CAAE,cAAAgV,CAAc,EAAI7R,EAE1B,MAAO,CACL,cAAA6R,CACF,CACF,CAEA,MAAMmB,GAAqB,CACzB,WAAU,IACZ,EAIA,MAFkB,YAAQD,GAAiBC,EAAkB,EAEpCrB,EAAqB,E,uLCpHvC,SAASsB,GAAevG,EAA4B,CACzD,KAAM,CAAE,QAAAwG,EAAS,SAAAC,CAAS,EAAIzG,EAExB0G,EAAmB,IAAM,CAC7B,KAAM,CAAE,SAAAD,CAAS,EAAIzG,EACf1L,EAAUmS,EAAW,mBAAqB,oCAChD,OAAO,gCAAGnS,CAAQ,CACpB,EAEA,OACE,gBAACxD,GAAA,EAAO,CAAC,QAAS4V,EAAkB,UAAU,UAC5C,gBAACC,GAAA,GACC,KAAK,OACL,QAASF,EAAW,SAAW,SAC/B,aAAYA,EAAW,eAAiB,iBACxC,QAAAD,CAAA,CACF,CACF,CAEJ,CCJO,MAAMI,WAA4B,WAAiB,CAAnD,kCACL,sBAAoB5F,GAAsB,CACxC,KAAM,CAAE,MAAA6F,EAAO,aAAAC,EAAc,SAAA3K,CAAS,EAAI,KAAK,MACzC,CAAE,KAAA4K,EAAM,GAAAC,CAAG,KAAI,OAAoBhG,EAAW6F,CAAK,EACnDI,EAAgB,CACpB,QAAM,OAAoB9K,EAAU4K,CAAI,EACxC,MAAI,OAAoB5K,EAAU6K,CAAE,CACtC,EAEAF,EAAaG,CAAa,CAC5B,EAEA,mBAAgB,IAAM,KAAK,iBAAiB,CAAC,EAC7C,gBAAa,IAAM,KAAK,iBAAiB,EAAE,EAE3C,wBAAsBxK,GAAyB,CAC7C,MAAMyK,EAAe,gBAAsBzK,EAAU,IAAI,IAAI,EAAIA,EAAU,IAAI,KAAOA,EAAU,KAC1F0K,EAAa,gBAAsB1K,EAAU,IAAI,EAAE,EAAIA,EAAU,IAAI,GAAKA,EAAU,GAE1F,KAAK,MAAM,aAAa,CACtB,KAAMyK,EACN,GAAIC,CACN,CAAC,KAED,MAAkB,iDAAkD,CAClE,cAAeD,EACf,YAAaC,CACf,CAAC,CACH,EAEA,YAAS,IAAM,CACb,KAAM,CAAE,MAAAN,EAAO,aAAAC,EAAc,SAAA3K,CAAS,EAAI,KAAK,MACzC,CAAE,KAAA4K,EAAM,GAAAC,CAAG,KAAI,OAAmBH,EAAO,CAAC,EAC1CI,EAAgB,CACpB,QAAM,OAAoB9K,EAAU4K,CAAI,EACxC,MAAI,OAAoB5K,EAAU6K,CAAE,CACtC,EAEAF,EAAaG,CAAa,CAC5B,EAEA,QAAS,CACP,KAAM,CACJ,MAAAJ,EACA,SAAA1K,EACA,qBAAAiL,EACA,SAAA1V,EACA,YAAA2V,EACA,iBAAAC,EACA,SAAAC,EACA,iBAAAC,EACA,6BAAAC,CACF,EAAI,KAAK,MACHC,EAAiBhW,EAAW,gBAAC6U,GAAc,CAAC,QAASe,EAAkB,SAAUD,CAAA,CAAa,EAAK,OACnGM,EAAwB,CAC5B,MAAOd,EACP,SAAA1K,EACA,qBAAAiL,EACA,eAAgB,KAAK,WACrB,cAAe,KAAK,cACpB,OAAQ,KAAK,OACb,SAAAG,CACF,EAEA,OACE,gBAACK,GAAA,GACC,WAAU,GACT,GAAGD,EACJ,eAAAD,EACA,SAAUL,EACV,cAAe3V,EAAW,OAAO,WAAa,EAAI,OAClD,SAAU,KAAK,mBACf,iBAAA8V,EACA,6BAAAC,CAAA,CACF,CAEJ,CACF,C,gBCrFO,SAASI,GAAe7H,EAA4B,CACzD,KAAM,CAAE,MAAA8H,EAAO,MAAAC,EAAO,OAAAC,EAAQ,OAAAC,EAAQ,SAAAC,EAAU,KAAAC,EAAM,SAAAzW,CAAS,EAAIsO,EAC7DoI,EAAgBH,GAAU,CAACC,EAAW,SAAW,SACjDG,EAAcJ,EAAUC,EAAWF,EAASD,EAASD,EAE3D,OACE,gBAACQ,GAAA,EAAW,KACV,gBAACxX,GAAA,GACC,QAASmX,GAAU,CAACC,EAAW,gCAAE,uBAAqB,EAAM,gCAAE,6BAA2B,EACzF,UAAU,UAEV,gBAACvB,GAAA,GACC,SAAUjV,EACV,QAAS0W,EACT,KAAM,CAACH,GAAUC,EAAW,OAAS,QACrC,QAASG,CAAA,EAERJ,GAAUC,EAAW,SAAW,MACnC,CACF,EAEA,gBAACK,GAAA,GACC,aAAc,GACd,cAAe,GACf,QAAS,IACT,GAAIN,EACJ,WAAY,CACV,MAAO,GAAO,gBACd,YAAa,GAAO,sBACpB,KAAM,GAAO,eACb,WAAY,GAAO,oBACrB,GAEA,gBAACnX,GAAA,EAAO,CAAC,QAAS,gCAAE,+BAA6B,EAAK,UAAU,UAC9D,gBAAC6V,GAAA,EAAa,CAAC,QAASyB,EAAe,QAASD,EAAM,KAAK,cAAe,EAC5E,CACF,CACF,CAEJ,CAEA,MAAM,GAAS,CACb,mBAAiB,OAAI,CACnB,MAAO,kBACP,MAAO,EACP,QAAS,EACT,SAAU,QACZ,CAAC,EACD,yBAAuB,OAAI,CACzB,MAAO,wBACP,QAAS,EACT,MAAO,MACT,CAAC,EACD,kBAAgB,OAAI,CAClB,MAAO,iBACP,MAAO,OACP,QAAS,EACT,SAAU,QACZ,CAAC,EACD,wBAAsB,OAAI,CACxB,MAAO,uBACP,QAAS,EACT,MAAO,CACT,CAAC,CACH,E,2ECpDA,MAAMK,GAAqC,CACzC,IAAK,YACL,SAAO,KAAE,sCAAuC,oBAAoB,EACpE,KAAM,YACN,OAAQ,IAAG,GACX,QAAS,GACT,QAAS,EACX,EAEO,SAASC,IAAsB,CACpC,MAAMjZ,KAAQ,eAAY,IAAW,EAC/B,CAACkZ,EAAQC,CAAS,KAAI,YAAS,EAAK,EACpC,CAACC,EAAcC,CAAe,KAAI,YAASL,EAAW,EACtDM,EAAa,CAACC,EAAkBC,EAAkBC,IAAiB,CACnEF,MACF,MAAuBE,GAAO,IAAO,SAAS,IAAI,KAClD,MAAkB,yCAA0C,CAAE,eAAgBD,CAAQ,CAAC,OAEvF,OACEC,IAAQ,OACJ,GAAG,OAAO,SAAS,QAAQ,KAAK,OAAO,SAAS,IAAI,GAAGjX,EAAA,EAAO,SAAS,GAAGiX,CAAG,GAC7E,IAAO,SAAS,IACtB,KACA,MAAkB,oCAAqC,CAAE,eAAgBD,CAAQ,CAAC,EAEtF,EAEME,EAAoC,CACxC,CACE,IAAK,SACL,SAAO,KAAE,6CAA8C,kBAAkB,EACzE,MAAO,CACL,CACE,IAAK,sBACL,KAAM,OACN,SAAO,KAAE,sCAAuC,oBAAoB,EACpE,OAAQ,IAAG,GACX,QAAS,GACT,QAAS,EACX,EACA,CACE,IAAK,YACL,KAAM,OACN,SAAO,KAAE,4BAA6B,UAAU,EAChD,OAAQ,IAAG,GACX,QAAS,GACT,QAAS,EACX,CACF,CACF,EACA,CACE,IAAK,WACL,SAAO,KAAE,+CAAgD,oDAAoD,EAC7G,MAAO,CACL,CACE,IAAK,2BACL,KAAM,aACN,SAAO,KAAE,+CAAgD,6BAA6B,EACtF,QAAS,GACT,OAAQ,OACC,OAAqB1Z,CAAK,EAEnC,QAAS,EACX,EACA,CACE,IAAK,qBACL,KAAM,aACN,SAAO,KAAE,qCAAsC,6BAA6B,EAC5E,QAAS,GACT,OAAQ,OACC,OAAqBA,CAAK,EAEnC,QAAS,EACX,CACF,CACF,CACF,EAEM2Z,EACJ,gBAACC,GAAA,EAAI,KACFF,EAAY,IAAKG,GAEd,gBAACC,GAAA,EAAS,CAAC,IAAKD,EAAY,IAAK,MAAOA,EAAY,OACjDA,EAAY,MAAM,IAAKE,GAEpB,gBAACH,GAAA,EAAK,KAAL,CACC,IAAKG,EAAO,IACZ,MAAOA,EAAO,MACd,KAAMA,EAAO,KACb,QAAS,IAAM,CACb,MAAMN,EAAMM,EAAO,OAAO,EAC1BT,EAAWS,EAAO,QAASA,EAAO,QAASN,CAAG,EAC9CJ,EAAgBU,CAAM,CACxB,EACF,CAEH,CACH,CAEH,CACH,EAIF,OACE,gBAACC,GAAA,EAAgB,KACf,gBAACzR,GAAA,EAAK,CAAC,IAAK,EAAG,UAAU,MAAM,WAAW,SAAS,KAAK,UACtD,gBAAC4O,GAAA,GACC,QAASiC,EAAa,MACtB,KAAMA,EAAa,KACnB,SAAU,GACV,OAAQ,GACR,QAAS,IAAM,CACb,MAAMK,EAAML,EAAa,OAAO,EAChCE,EAAWF,EAAa,QAASA,EAAa,QAASK,CAAG,CAC5D,EACA,gBAAY,KAAE,sCAAuC,oBAAoB,EAC3E,EACA,gBAACQ,GAAA,EAAQ,CAAC,QAASN,EAAa,UAAU,aAAa,gBAAiBR,CAAA,EACtE,gBAAChC,GAAA,GACC,OAAQ,GACR,OAAA+B,EACA,gBAAY,KAAE,2CAA4C,wBAAwB,EACpF,CACF,CACF,CACF,CAEJ,C,8DC9IA,MAAMgB,MAAiB,QAAK,IAC1B,gCAA2B,KAAK,CAAC,CAAE,eAAAA,CAAe,KAAO,CAAE,QAASA,CAAe,EAAE,CACvF,EAOO,SAASC,GAAsB3J,EAAmC,CACvE,KAAM,CAAE,UAAA7P,CAAU,EAAI6P,EAChB,CAAC4J,EAAmBC,CAAoB,KAAI,YAA0C,EACtF,CAACnB,EAAQC,CAAS,KAAI,YAAkB,EAAK,EAC7CmB,EAAUC,GAAyB/J,CAAK,EACxCgK,EAAaC,GAAkBH,CAAO,EACtCI,KAAoB,MAAuB/Z,CAAS,EACpDga,KAAkB,eAAYD,CAAiB,GAAG,SAAS,OAIjE,GAAIF,EAAW,QAAU,EAKvB,OAHE,MAAW,cAAc,sBAAoB,gBAAgB,GAC7D,MAAW,cAAc,sBAAoB,eAAe,EAO5D,gBAAC,WAAQ,CAAC,SAAU,MAClB,gBAACN,GAAA,CAAe,UAAAvZ,CAAA,CAAsB,CACxC,EANO,KAUX,MAAMia,EAAO,gBAACC,GAAA,EAAyB,CAAC,WAAAL,EAAwB,SAAUH,CAAA,CAAsB,EAEhG,OACE,gCACE,gBAACJ,GAAA,EAAQ,CAAC,gBAAiBd,EAAW,UAAU,eAAe,QAASyB,CAAA,EACtE,gBAACzD,GAAA,EAAa,CAAC,aAAW,MAAM,SAAU,CAASwD,EAAkB,QAAQ,SAAS,OAAAzB,CAAA,EAAgB,KAEtG,CACF,EACC,CAAC,CAACkB,GAAqB,CAAC,CAACA,EAAkB,MAC1C,gBAACU,GAAA,GACC,KAAMV,EAAkB,KACxB,MAAOA,EAAkB,MACzB,UAAW,IAAMC,EAAqB,MAAS,EACjD,CAEJ,CAEJ,CAWA,SAASE,GAAyB/J,EAA6C,CAC7E,KAAM,CAAE,UAAA7P,EAAW,SAAAgM,CAAS,EAAI6D,EAE1BuK,KADuB,eAAY,IAAwB,GACV,YAAc,GAC/D,CAAE,QAAAC,EAAS,cAAArF,EAAe,MAAA0B,CAAM,KAAI,kBAAY,MAAuB1W,CAAS,CAAC,EACjFsa,KAAa,kBAAY,MAAmBta,CAAS,CAAC,EAEtDua,EAAiBF,EAAQ,IAAK/Y,GAAUA,GAAO,YAAY,GAAG,EAAE,OAAQkZ,GAAQA,IAAQ,MAAS,EACjGC,EAAe,CAAC,GAAG,IAAI,IAAIF,CAAc,CAAC,EAAE,OAC5C/Y,EAAuB,MAAW,cAAc,sBAAoB,gBAAgB,EAE1F,SAAO,WAAQ,KACN,CACL,UAAAxB,EACA,QAASqa,EACT,KAAMrF,EACN,UAAW0B,EAAM,IACjB,YAAU,MAAY,CAAE,SAAA1K,CAAS,CAAC,EAClC,yBACEnK,EAAA,EAAO,eAAe,eAAiB,IACvCL,GACA,CAAC4Y,GACDE,GACAG,IAAiB,CACrB,GACC,CACDza,EACAqa,EACArF,EACA0B,EAAM,IACN1K,EACAxK,EACA4Y,EACAE,EACAG,CACF,CAAC,CACH,CAEA,SAASX,GAAkBH,EAA+D,CACxF,SAAO,WAAQ,IAAM,CACnB,KAAM,CAAE,WAAAE,CAAW,KAAI,OAAwB,CAC7C,iBAAkB,KAAsB,qBACxC,QAAAF,EACA,eAAgB,CAClB,CAAC,EAED,OAAOE,CACT,EAAG,CAACF,CAAO,CAAC,CACd,C,gBCpHO,SAASe,GAAoB1a,EAAmB,CACrD,MAAMV,KAAW,eAAY,EAEvBsY,KAAQ,eAAY,IAAM,CAC9BtY,KAAS,MAAqB,CAAE,UAAAU,EAAW,SAAU,EAAK,CAAC,CAAC,CAC9D,EAAG,CAACA,EAAWV,CAAQ,CAAC,EAElBuY,KAAS,eAAY,IAAM,CAC/BvY,KAAS,MAAqB,CAAE,UAAAU,EAAW,SAAU,EAAM,CAAC,CAAC,CAC/D,EAAG,CAACA,EAAWV,CAAQ,CAAC,EAElB0Y,KAAO,eAAY,IAAM,CAI7BJ,EAAM,EAINtY,KAAS,OAAsB,CAAE,UAAAU,EAAW,gBAAiB2a,GAAA,GAAc,UAAU,KAAM,CAAC,CAAC,EAC7Frb,KAAS,MAAW,CAAE,UAAAU,CAAU,CAAC,CAAC,CACpC,EAAG,CAACA,EAAWV,EAAUsY,CAAK,CAAC,EAEzBD,KAAQ,eAAY,IAAM,CAC9BrY,KAAS,OAAsB,CAAE,UAAAU,EAAW,gBAAiB2a,GAAA,GAAc,WAAW,KAAM,CAAC,CAAC,CAChG,EAAG,CAAC3a,EAAWV,CAAQ,CAAC,EAElBsb,KAAQ,eAAY,IAAM,CAC9Btb,KAAS,MAAU,CAAE,UAAAU,CAAU,CAAC,CAAC,CACnC,EAAG,CAACA,EAAWV,CAAQ,CAAC,EAExB,MAAO,CACL,MAAAsY,EACA,OAAAC,EACA,KAAAG,EACA,MAAAL,EACA,MAAAiD,CACF,CACF,CAUO,SAASC,GAAiBhL,EAAc,CAC7C,MAAMiL,EAAWJ,GAAoB7K,EAAM,SAAS,EACpD,OAAOA,EAAM,SAASiL,CAAQ,CAChC,CClBA,MAAM,GAAY,CAACja,EAAsBU,KAAuB,CAC9D,cAAY,OAAI,CACd,cAAe,CACb,UAAW,gBACb,CACF,CAAC,EACD,iBAAe,OAAI,CACjB,QAAS,OACT,eAAgB,SAChB,YAAaV,EAAM,QAAQ,EAAG,EAC9B,MAAOU,GAAYV,EAAM,QAAQ,CAAC,CACpC,CAAC,CACH,GASO,SAASka,GAAe,CAAE,UAAA/a,EAAW,aAAA2W,EAAc,uBAAAqE,EAAwB,qBAAAC,CAAqB,EAAU,CAC/G,MAAM3b,KAAW,OAAY,EACvBiC,KAAW,OAAY,IAAO,EAC9BhC,KAAS,MAAW,GAAWgC,CAAQ,EAEvCyK,KAAW,OAAa9J,MAAsB,MAAYA,EAAM,IAAI,CAAC,EACrE+U,KAAuB,OAAa/U,MAAsB,MAAwBA,EAAM,IAAI,CAAC,EAC7F,CAAE,gBAAAgZ,EAAiB,mBAAAC,EAAoB,MAAAzE,EAAO,OAAAoB,EAAQ,SAAAC,EAAU,YAAAb,CAAY,KAAI,OACnFhV,IAAuB,CACtB,MAAG,SAAKA,EAAM,QAAQ,MAAMlC,CAAS,EAAI,kBAAmB,qBAAsB,QAAS,SAAU,UAAU,EAC/G,YAAakC,EAAM,QAAQ,WAC7B,GACA,eACF,EACMkZ,KAAU,UAAY,MAAuBpb,CAAS,CAAC,EACvDqb,KAAe,OAAanZ,GAAsBA,EAAM,QAAQ,kBAAoBlC,CAAS,EAC7Fsb,KAAsB,OAAapZ,GAAUX,GAAYW,EAAM,QAAQ,MAAMlC,CAAS,EAAG,eAAiB,IAAI,EAC9Gub,KAA4B,OAC/BrZ,GAAUA,EAAM,QAAQ,MAAMlC,CAAS,EAAG,gBAAkBuB,EAAW,IAAM,IAChF,EAEMlC,KAAQ,OAAY,IAAkB,EACtCI,KAAqB,OAAY,IAAwB,EACzD2a,EAA2B3a,GAAoB,YAAc,GAC7D6a,KAAa,UAAY,MAAmBta,CAAS,CAAC,EAEtDwb,KAAwB,WAC5B,IAAOlB,GAAce,GAAkB,CAACf,GAAc,CAACe,EACvD,CAACf,EAAYe,CAAY,CAC3B,EAEMI,EAAqBL,KACvB,KAAE,wCAAyC,QAAQ,KACnD,KAAE,qCAAsC,WAAW,EAEjDM,EAAqB,MAAOC,GAA2C,CACtEvB,EAGC3a,GAAoB,kBAAoBA,GAAoB,iBAE9DH,KACE,MAA+B,CAC7B,UAAW,GACX,kBAAmB,CACjB,UAAAU,EACA,OAAQ,MAAuC,kBAC/C,oBAAqB2b,EAAW,IAChC,aAAcrB,CAChB,CACF,CAAC,CACH,GAGIA,GACFjb,EAAM,QAASc,GAAS,CACtBb,KACE,OAA4B,CAC1B,UAAWa,EAAK,CAAC,EACjB,4BAA6B,MAC/B,CAAC,CACH,CACF,CAAC,EAGHb,KAAS,OAAiB,CAAE,UAAAU,EAAW,WAAY2b,EAAW,IAAK,QAAS,CAAE,cAAe,EAAK,CAAE,CAAC,CAAC,GA5BxGrc,KAAS,OAAiB,CAAE,UAAAU,EAAW,WAAY2b,EAAW,IAAK,QAAS,CAAE,cAAe,EAAK,CAAE,CAAC,CAAC,CA+B1G,EAEMC,EAAa,CAACR,EAAU,KAEnB9b,EADL8b,KACc,MAAcpb,CAAS,KAEvB,MAAW,CAAE,UAAAA,CAAU,CAAC,CAFA,EAMtCqX,EAAoBwE,GAAqBvc,KAAS,OAAyBuc,CAAQ,CAAC,EAEpFC,EAAkB,IAAM,CAC5Bxc,KAAS,MAAU,CAAC,KACpB,MAAkB,oCAAqC,CAAE,OAAQ,MAAO,CAAC,CAC3E,EAEMyc,EAAmB,IAAM,CACzB3B,EACE3a,GAAoB,kBAAoBA,GAAoB,iBAE9DH,KACE,MAA+B,CAC7B,UAAW,GACX,kBAAmB,CACjB,UAAAU,EACA,OAAQ,MAAuC,WAC/C,aAAcsa,CAChB,CACF,CAAC,CACH,GAGAjb,EAAM,QAASc,GAAS,CACtBb,KACE,OAA4B,CAC1B,UAAWa,EAAK,CAAC,EACjB,4BAA6B,MAC/B,CAAC,CACH,CACF,CAAC,EACDb,KAAS,MAAWU,CAAS,CAAC,KAC9B,MAAkB,mCAAmC,IAGvDV,KAAS,MAAWU,CAAS,CAAC,KAC9B,MAAkB,mCAAmC,EAEzD,EAEMgc,EAAgB,IAAM,CAExB1c,EADE+b,KACO,MAAqB,KAErB,MAAmB,CAAE,UAAArb,CAAU,CAAC,CAFV,CAInC,EAEMmX,GAAmB,IAAM,CAC7B7X,KAAS,OAAUU,CAAS,CAAC,CAC/B,EAEMsX,EAAgC2E,GACpC3c,KAAS,OAAqC2c,CAAoB,CAAC,EAE/DC,EAA2BhB,GAA4B,CAC3D5b,KAAS,OAAsB,CAAE,UAAAU,EAAW,gBAAAkb,CAAgB,CAAC,CAAC,CAChE,EAEMiB,EAAgB,CAAC,gBAAC7D,GAAmB,CAAC,IAAI,OAAQ,GAAI,gBAAC,OAAI,MAAO,CAAE,KAAM,CAAE,EAAG,IAAI,SAAU,EAAE,EAErG,OACE,gBAAC,WACE4C,GAAmB,gBAACkB,GAAA,EAAW,CAAC,KAAMR,EAAY,SAAUV,EAAiB,QAAAE,CAAA,CAAkB,EAChG,gBAAC,WACC,gBAACiB,GAAA,EAAe,CAAC,QAASF,CAAA,CAAe,CAC3C,EACA,gBAACG,GAAA,GACC,gBAAY,KAAE,6BAA8B,iBAAiB,EAC7D,UAAW,CACTza,EAAA,EAAO,eAAe,uBACpB,gBAAC2U,GAAA,GACC,IAAI,kBACJ,QAAQ,SACR,QAAQ,kBACR,KAAK,cACL,SAAUjV,EACV,QAASyZ,EACT,gBAAeC,EACf,gBAAeA,EAAuB,4BAA8B,OACpE,UAAW1b,EAAO,eACnB,SAED,EAEF,gBAACgd,GAAA,GACC,IAAK,GAAGvc,CAAS,aACjB,MAAO,CAACoa,EACR,SAAUsB,EACV,QAASP,GAAoB,OAAO,EACpC,cAAeI,EACf,MAAOA,EAA4B,EAAI,OACzC,CACF,EAAE,OAAO,OAAO,EAChB,mBAAkB,IAEjB,CACEha,EAYC,gBAAC4W,GAAA,EAAW,CAAC,IAAI,kBACf,gBAAC3B,GAAA,GACC,QAAQ,SACR,QACE6E,KACI,KAAE,+BAAgC,aAAa,KAC/C,KAAE,8BAA+B,YAAY,EAEnD,QAASW,EACT,KAAMX,EAAe,mBAAqB,oBAC1C,SAAU,GACV,aAAW,MAAGG,GAAyBjc,EAAO,UAAU,EAC1D,EACA,gBAACiX,GAAA,GACC,WAAS,KAAE,sCAAuC,kBAAkB,EACpE,QAASuF,EACT,KAAK,QACL,QAAQ,UAER,gBAAC,KAAK,CAAC,QAAQ,+BAA8B,SAAO,CACtD,CACF,EAhCA,gBAACvF,GAAA,GACC,QAAQ,SACR,IAAI,QACJ,WAAS,KAAE,gCAAiC,gBAAgB,EAC5D,QAASsF,EACT,KAAK,UACL,SAAUhE,CAAA,EAEV,gBAAC,KAAK,CAAC,QAAQ,+BAA8B,OAAK,CACpD,EAyBF,gBAAC0B,GAAqB,CAAC,IAAI,0BAA0B,UAAAxZ,EAAsB,SAAAgM,CAAA,CAAoB,EAC/F,CAAC8L,GACC,gBAACrB,GAAA,CACC,IAAI,eACJ,UAAAzW,EACA,MAAA0W,EACA,SAAA1K,EACA,qBAAAiL,EACA,aAAAN,EACA,SAAApV,EACA,YAAA2V,EACA,iBAAAC,GACA,SAAUmE,EACV,iBAAAjE,EACA,6BAAAC,CAAA,CACF,EAEF,gBAACqD,GAAA,IACC,IAAI,gBACJ,kBAAmBuB,EACnB,MAAOhB,EACP,UAAWE,EACX,KAAME,EAAsB,OAAYG,EACxC,QAASH,EAAsBG,EAAqB,OACpD,UAAW,MAAW,kBAAkB,KAAgB,EACxD,OAAA3D,EACA,UAAW,IAAM8D,EAAWR,CAAO,EACnC,iBAAkBtD,EAClB,QAAS,GACT,OAAQwD,EAAsB,GAAK,KAAO,KAC5C,EACAH,GAAoB,KAAK,WACvB,gBAACN,GAAgB,CAAC,IAAI,eAAe,UAAA7a,CAAA,EACjCgQ,GAAM,CACN,MAAM8K,EAAW,CACf,GAAG9K,EACH,MAAO,IAAM,IACX,MAAkB,4CAA6C,CAC7D,eAAgBmL,GAAoB,IACtC,CAAC,EACDnL,EAAE,MAAM,CACV,CACF,EACA,OACE,gBAAC0H,GAAA,CACC,SAAAnW,EACA,OAAAuW,EACA,SAAAC,EACA,MAAO+C,EAAS,MAChB,MAAOA,EAAS,MAChB,OAAQA,EAAS,OACjB,KAAMA,EAAS,KACjB,CAEJ,CACF,CAEJ,EAAE,OAAO,OAAO,CAClB,CACF,CAEJ,C,gBCpUA,SAAS0B,GAAYC,EAAc9C,EAA2C,CAAC,EAAG,IAChF,MAAkB,sBAAsB8C,CAAI,GAAI,CAC9C,IAAK,MAAQ,QACb,gBAAiB5a,EAAA,EAAO,UAAU,QAClC,GAAG8X,CACL,CAAC,CACH,CAEO,MAAM+C,GAA8B7M,GAAiB,CAC1D,MAAMtQ,KAAS,MAAYsB,GAAU,GAAUA,CAAK,CAAC,EAErD,OACE,gBAAC,OAAI,UAAWtB,EAAO,WACrB,gBAAC,MACC,KAAMsQ,EAAM,WAAW,CAAC,EACxB,aAAc,GACd,SAAU,IAAMhO,EAAA,EAAO,OACvB,mBAAoB,IAAM2a,GAAY,qBAAqB,EAC3D,eAAiBG,GAAiBH,GAAY,gBAAiB,CAAE,KAAAG,CAAK,CAAC,EACvE,oBAAsBC,GAAkBJ,GAAY,sBAAuB,CAAE,MAAAI,CAAM,CAAC,EACpF,YAAcC,GAAiBL,GAAY,sBAAuB,CAAE,KAAAK,CAAK,CAAC,EAC1E,kBAAmB,CAAChb,EAAA,EAAO,eAAe,yBAC5C,CACF,CAEJ,EAEM,GAAahB,IAA0B,CAC3C,aAAW,OAAI,CACb,WAAYA,EAAM,OAAO,WAAW,QACpC,QAAS,YACT,QAASA,EAAM,QAAQ,EAAG,EAAG,EAAG,CAAC,EACjC,OAAQ,aAAaA,EAAM,WAAW,MAAM,WAAW,GACvD,aAAcA,EAAM,MAAM,OAAO,OACnC,CAAC,CACH,G,oGC1CA,MAAMic,GAAW,IAQJC,GAAc,CAAC,CAAE,SAAAC,EAAU,SAAAC,EAAU,UAAA5Y,CAAU,IAAwB,CAClF,KAAM,CAAC6Y,EAASC,CAAU,KAAI,YAAS,CAAC,EAGxC,SAAAC,GAAA,GAAY,IAAMD,EAAWD,EAAUJ,EAAQ,EAAGA,EAAQ,KAE1D,aAAU,IAAMK,EAAW,CAAC,EAAG,CAACH,CAAQ,CAAC,EAElC,gBAACK,GAAA,EAAI,CAAC,SAAUH,EAAS,UAAA7Y,EAAsB,SAAA4Y,CAAA,CAAoB,CAC5E,E,gBCRA,MAAM,GAAapc,IAA0B,CAC3C,gBAAc;AAAA;AAAA,mBAEGA,EAAM,WAAW,mBAAmB;AAAA,iBACtCA,EAAM,WAAW,UAAU,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASlD,eAAa;AAAA;AAAA,aAEFA,EAAM,OAAO,IAAI;AAAA,2BACNyc,GAAA,GAAUzc,EAAM,OAAO,KAAK,WAAW,EAAE,SAAS,GAAI,EAAE,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA,+BAI9Dyc,GAAA,GAAUzc,EAAM,OAAO,KAAK,WAAW,EAAE,SAAS,GAAI,EAAE,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAO5F,qBAAmB;AAAA,iBACJA,EAAM,WAAW,GAAG,QAAQ;AAAA,mBAC1BA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA,IAIjC,UAAQ;AAAA,oBACUA,EAAM,QAAQ,CAAC,CAAC;AAAA,IAElC,aAAW;AAAA;AAAA,GAGb,GAiBA,MAAM0c,WAAiB,eAA4B,CAIjD,YAAY1N,EAAc,CACxB,MAAMA,CAAK,EAJb,KAAQ,WAAoC,KAC5C,KAAQ,mBAAqB,YAAyC,EAiCtE,cAAY1R,GAAgC,CAC1C,KAAM,CAAE,SAAA4Z,EAAU,QAAAyF,CAAQ,EAAI,KAAK,MAC7B,CAAE,UAAAC,EAAW,aAAAC,EAAc,aAAAC,CAAa,EAAIxf,EAAM,cAC7Bwf,GAAgBF,EAAYC,IAC7B,GAAK,CAAC3F,GAC9ByF,EAAQ,CAEZ,EAEA,kBAAe,IAAM,CACnB,KAAM,CAAE,SAAAzF,CAAS,EAAI,KAAK,MAC1B,GAAI,CAAE,gBAAiB6F,EAAe,CAAC,CAAE,EAAI,KAAK,MAClD,OAAK7F,IAEH6F,KAAe,OAAYA,EAAc,KAAc,SAAS,EAAE,MAAM,IAAI,GAEvEA,CACT,EA9CE,KAAK,MAAQ,CACX,gBAAiB/N,EAAM,OACzB,CACF,CAEA,OAAO,yBAAyBgO,EAAkB3b,EAAc,CAC9D,OAAI2b,EAAU,UAAYA,EAAU,eAC3B,CACL,mBAAiB,OAAqBA,EAAU,eAAgB3b,EAAM,eAAe,CACvF,EAGE2b,EAAU,SACL,KAGF,CAIL,gBAAiBA,EAAU,OAC7B,CACF,CA0BA,QAAS,CACP,KAAM,CAAE,MAAAhd,EAAO,SAAAmL,EAAU,QAAAwR,EAAS,SAAAM,EAAU,QAAAC,EAAS,SAAAhG,CAAS,EAAI,KAAK,MACjExY,EAAS,GAAUsB,CAAK,EACxB,CAAE,QAAAmd,EAAS,iBAAAC,EAAkB,eAAAC,CAAe,KAAIC,GAAA,GAAgBtd,CAAK,EAE3E,OACE,gBAAC,WACC,gBAAC,SAAM,UAAWtB,EAAO,WACvB,gBAAC,SACC,SAAUwY,EAAW,OAAY,KAAK,SACtC,UAAWxY,EAAO,aAClB,IAAK,KAAK,oBAET,KAAK,aAAa,EAAE,IAAK6e,GAEtB,gBAAC,MAAG,aAAW,MAAGJ,EAASze,EAAO,WAAW,EAAG,IAAK6e,EAAI,KACvD,gBAAC,MAAG,UAAWH,CAAA,KAAmB,OAAeG,EAAI,YAAa,CAAE,SAAApS,CAAS,CAAC,CAAE,EAChF,gBAAC,MAAG,UAAWkS,CAAA,EAAiBE,EAAI,QAAU,gBAACC,GAAA,EAAc,CAAC,MAAOD,EAAI,IAAK,EAAKA,EAAI,KAAM,CAC/F,CAEH,EACD,gBAAC,MACC,IAAMtO,GAAY,CAChB,KAAK,WAAaA,EAId,KAAK,YAAc,KAAK,mBAAmB,SAAS,UAAY,CAACiI,GACnE,KAAK,mBAAmB,SAAS,SAAS,EAAG,KAAK,mBAAmB,QAAQ,YAAY,CAE7F,EACF,CACF,CACF,EACA,gBAAC,OAAI,UAAWxY,EAAO,mBACrB,gBAACb,EAAA,IACC,KAAMqZ,EAAW,OAAS,QAC1B,QAAQ,YACR,QAASA,EAAW+F,EAAWN,EAC/B,UAAWje,EAAO,QAEjBwY,EAAW,SAAW,OACzB,EACA,gBAACrZ,EAAA,GAAM,CAAC,KAAK,YAAY,QAAQ,YAAY,QAASqf,EAAS,UAAWxe,EAAO,QAAQ,YAEzF,EACA,gBAACb,EAAA,GAAM,CAAC,KAAK,eAAe,QAAQ,YAAY,QAAS,KAAK,MAAM,SAAU,UAAWa,EAAO,QAAQ,gBAExG,EACCwY,GACE,KAAK,aAAa,EAAE,OAAS,GAC5B,gBAAC,YAAK,uBACgB,gBAACgF,GAAW,CAAC,SAAU,KAAK,MAAM,QAAS,SAAU,GAAM,EAAE,MACnF,CAEN,CACF,CAEJ,CACF,CAEO,MAAMuB,MAAoB,MAAWf,EAAQ,E,gHCnK7C,MAAMgB,GAAiB,CAAC,CAC7B,SAAAjc,EACA,QAAA8Y,EACA,aAAAoD,EACA,MAAA9H,EACA,KAAA+H,EACA,cAAAC,EACA,UAAAC,EACA,SAAA3S,EACA,iBAAA4S,EAAmB,EACrB,IAAa,CACX,KAAM,CAACC,EAAiBC,CAAkB,KAAI,YAAS,EAAK,EACtD,CAACC,EAAiBC,CAAkB,KAAI,YAAS,EAAK,EACtD,CAACC,EAAcC,CAAe,KAAI,YAAS,EAAK,EAChD,CAACC,EAAcC,CAAe,KAAI,YAAS,EAAK,EAChDC,KAAU,UAAsBZ,CAAI,EACpCa,KAAa,UAAeZ,GAAe,WAAa,CAAC,KAG/D,aAAU,IAAM,CACdI,EAAmB,EAAK,EACxBE,EAAmB,EAAK,CAC1B,EAAG,CAACtI,EAAO+H,EAAME,CAAS,CAAC,KAG3B,aAAU,IAAM,CACTvD,IACH8D,EAAgB,EAAK,EACrBE,EAAgB,EAAK,EAEzB,EAAG,CAAChE,CAAO,CAAC,KAGZ,aAAU,IAAM,CACV+D,GAAgBT,GAClBA,EAAc,SAAS,EAAGA,EAAc,aAAeA,EAAc,YAAY,CAErF,EAAG,CAACS,EAAcT,CAAa,CAAC,KAGhC,aAAU,IAAM,CACVD,IAASY,EAAQ,SAAWZ,EAAK,SAAWY,EAAQ,QAAQ,SAAWJ,GAAgBE,KACrFR,IAAc,KAAc,YAAcQ,EAC5CH,EAAmB,EAAI,EACdL,IAAc,KAAc,WAAaM,GAClDH,EAAmB,EAAI,GAG3BO,EAAQ,QAAUZ,CACpB,EAAG,CAACU,EAAcV,EAAME,EAAWM,CAAY,CAAC,KAEhD,aAAU,IAAM,CACd,GAAI,CAACP,GAAiB,CAACF,EACrB,OAGF,SAASe,EAAaphB,EAA2B,CAC/C,GAAI,CAACugB,GAAiB,CAACF,GAAgB,CAACC,EAAK,QAAUrD,GAAW,CAACvZ,EAAA,EAAO,eAAe,sBACvF,OAEF1D,EAAM,yBAAyB,EAC/B,MAAMqhB,EAAkBC,GAAethB,EAAOugB,EAAeY,EAAW,OAAO,EAC/EA,EAAW,QAAUZ,EAAc,UAC/Bc,IAAoB,IAEbA,IAAoB,IAAuBZ,EACpDnB,EAAU,EACD+B,IAAoB,GAC7BE,EAAa,EAEjB,CAEA,SAASjC,GAAY,CACnB,MAAMkC,EAAWC,GAAaC,GAAgBpB,CAAI,EAAG/H,EAAO1K,EAAU2S,CAAS,EAC/E,GAAI,CAACgB,EAAU,CACbb,EAAmB,EAAI,EACvB,MACF,CACAA,EAAmB,EAAK,EACxBN,IAAemB,CAAQ,EACvBT,EAAgB,EAAI,KACpB,MAAkB,kCAAmC,CACnD,UAAW,MACX,WAAYP,CACd,CAAC,CACH,CAEA,SAASe,GAAe,CACtB,MAAMC,EAAWG,GAAgBD,GAAgBpB,CAAI,EAAG/H,EAAO1K,EAAU2S,CAAS,EAClF,GAAI,CAACgB,EAAU,CACbX,EAAmB,EAAI,EACvB,MACF,CACAA,EAAmB,EAAK,EACxBR,IAAemB,CAAQ,EACvBP,EAAgB,EAAI,KACpB,MAAkB,kCAAmC,CACnD,UAAW,SACX,WAAYT,CACd,CAAC,CACH,CAEA,OAAAD,EAAc,iBAAiB,SAAUa,CAAY,EACrDb,EAAc,iBAAiB,QAASa,CAAY,EAE7C,IAAM,CACXb,EAAc,oBAAoB,SAAUa,CAAY,EACxDb,EAAc,oBAAoB,QAASa,CAAY,CACzD,CACF,EAAG,CAACf,EAAcpD,EAAS1E,EAAO+H,EAAMC,EAAeC,EAAW3S,EAAU4S,CAAgB,CAAC,EAG7F,MAAMmB,EAAiBpB,IAAc,KAAc,eAAc,mBAAejI,EAAM,IAAI,EAAE,EACtFsJ,EAAoBrB,IAAc,KAAc,cAAa,mBAAejI,EAAM,IAAI,EAAE,EAE9F,OACE,gCACGuI,GAAgB,gBAACgB,GAAA,EAAgB,CAAC,UAAWtB,IAAc,KAAc,WAAa,QAAU,QAAS,EACzG,CAACoB,GAAkBlB,GAAmBqB,GACtC5d,EACA,CAAC0d,GAAqBjB,GAAmBmB,GACzCf,GAAgB,gBAACc,GAAA,EAAgB,CAAC,UAAWtB,IAAc,KAAc,WAAa,QAAU,QAAS,CAC5G,CAEJ,EAEM,GAAS,CACb,oBAAkB,OAAI,CACpB,UAAW,SACX,QAAS,GACX,CAAC,CACH,EAEMuB,GACJ,gBAAC,OAAI,UAAW,GAAO,iBAAkB,cAAY,gBAAe,iCAEpE,EAGF,IAAKC,IAAAA,IACHA,EAAAA,EAAA,IAAM,EAAE,EAAR,MACAA,EAAAA,EAAA,OAAS,CAAC,EAAV,SACAA,EAAAA,EAAA,SAAW,CAAC,EAAZ,WAHGA,IAAAA,IAAA,IAKL,SAASV,GAAethB,EAA2B2R,EAAyBwP,EAAqC,CAE/G,GAAIxP,EAAQ,cAAgBA,EAAQ,aAClC,MAAO,GAET,MAAM4D,EAAQvV,aAAiB,WAAaA,EAAM,OAAS2R,EAAQ,UAAYwP,EAC/E,GAAI5L,IAAU,EACZ,MAAO,GAET,MAAM8L,EAAkB9L,EAAQ,EAAI,GAAsB,EAM1D,OAJE8L,IAAoB,GAChB1P,EAAQ,UACRA,EAAQ,aAAeA,EAAQ,UAAYA,EAAQ,eAE1C,EAAI0P,EAAkB,CACvC,CAEA,SAASK,GAAgBpB,EAAqB,CAC5C,MAAM2B,EAAiB3B,EAAK,CAAC,EAAE,YACzB4B,EAAgB5B,EAAKA,EAAK,OAAS,CAAC,EAAE,YAO5C,OAJE4B,EAAgBD,EACZ,CAAE,KAAMC,EAAe,GAAID,CAAe,EAC1C,CAAE,KAAMA,EAAgB,GAAIC,CAAc,CAGlD,CAEA,SAASC,GAAaC,EAAiCC,EAAyB,CAC9E,MAAO,CAAE,KAAMA,EAAa,KAAK,QAAQ,EAAG,GAAID,EAAa,IAAK,CACpE,CAEA,SAASE,GAAaF,EAAiCC,EAAyBxU,EAAoB,CAElG,OAAAwU,EAAeE,GAAmBF,EAAcxU,CAAQ,EACjD,CAAE,KAAMuU,EAAa,GAAI,GAAIC,EAAa,GAAG,QAAQ,CAAE,CAChE,CAEO,MAAMG,GAAsB,IAGnC,SAASf,GACPW,EACAC,EACAxU,EACA2S,EAC+B,CAC/B,OAAIA,IAAc,KAAc,YAE9B6B,EAAeE,GAAmBF,EAAcxU,CAAQ,EACtCwU,EAAa,GAAG,QAAQ,EAAID,EAAa,GAAKI,GAC7CF,GAAaF,EAAcC,EAAcxU,CAAQ,EAAI,QAGxD,KAAK,IAAIwU,EAAa,KAAK,QAAQ,EAAID,EAAa,IAAI,EAAII,GAC3DL,GAAaC,EAAcC,CAAY,EAAI,MAChE,CAEA,SAASV,GACPS,EACAC,EACAxU,EACA2S,EAC+B,CAC/B,OAAIA,IAAc,KAAc,WACZ,KAAK,IAAI6B,EAAa,KAAK,QAAQ,EAAID,EAAa,IAAI,EAAII,GAC3DL,GAAaC,EAAcC,CAAY,EAAI,QAGhEA,EAAeE,GAAmBF,EAAcxU,CAAQ,EACtCwU,EAAa,GAAG,QAAQ,EAAID,EAAa,GAAKI,GAC7CF,GAAaF,EAAcC,EAAcxU,CAAQ,EAAI,OAC1E,CAGA,SAAS0U,GAAmBpU,EAAsBN,EAAoB,CACpE,SAAO,wBAAoBM,EAAU,GAAG,KAAI,sBAAkBA,EAAU,IAAKN,CAAQ,EAAIM,CAC3F,C,gEC3OO,SAASsU,GAAa,CAAE,YAAAC,CAAY,EAAU,CACnD,MAAMthB,KAAS,MAAW,EAAS,EACnC,OACE,gBAACqI,GAAA,EAAK,KACJ,gBAAC,KACC,KAAMiZ,EACN,UAAWthB,EAAO,KAClB,MAAM,kEACN,OAAO,SACP,IAAI,uBAEJ,gBAACqB,GAAA,EAAI,CAAC,KAAK,qBAAsB,GAAE,gBACrC,CACF,CAEJ,CAEA,SAAS,GAAUC,EAAsB,CACvC,MAAO,CACL,QAAM,OAAI,CACR,MAAOA,EAAM,OAAO,KAAK,UACzB,SAAUA,EAAM,WAAW,UAAU,SACrC,SAAU,CACR,MAAOA,EAAM,OAAO,KAAK,IAC3B,CACF,CAAC,CACH,CACF,C,qFC/BA,MAAM,GAAaA,IAA0B,CAC3C,iBAAe,OAAI,CACjB,KAAM,EACN,MAAOA,EAAM,OAAO,KAAK,UACzB,aAAcA,EAAM,QAAQ,CAAC,EAC7B,SAAU,MACV,QAAS,OACT,SAAU,MACZ,CAAC,EACD,YAAU,OAAI,CACZ,YAAaA,EAAM,QAAQ,CAAC,EAC5B,UAAWA,EAAM,QAAQ,EAAG,EAC5B,QAAS,OACT,WAAY,SACX,yBAA2B,CAC1B,MAAOA,EAAM,OAAO,MAAM,IAC5B,CACF,CAAC,EACD,aAAW,OAAI,CACb,YAAa,QAAQA,EAAM,QAAQ,CAAC,CAAC,QACrC,SAAUA,EAAM,WAAW,UAAU,SACrC,WAAYA,EAAM,WAAW,gBAC/B,CAAC,EACD,aAAW,OAAI,CACb,WAAYA,EAAM,WAAW,oBAC7B,SAAUA,EAAM,WAAW,UAAU,QACvC,CAAC,CACH,GAOMigB,MAAe,QAAK,SAAsBjR,EAAsB,CACpE,MAAM0E,KAAQ,MAAW,EAAS,EAC5B,CAAE,MAAA7M,EAAO,MAAA+B,CAAM,EAAIoG,EAEzB,OACE,gBAAC,OAAI,cAAY,sBAAsB,UAAW0E,EAAM,UACrD7M,GAAS,gBAAC,QAAK,UAAW6M,EAAM,WAAY7M,EAAM,GAAC,EACpD,gBAAC,QAAK,UAAW6M,EAAM,WAAY9K,CAAM,CAC3C,CAEJ,CAAC,EAMYsX,MAAe,QAAK,SAAsBlR,EAA0B,CAC/E,MAAM0E,KAAQ,MAAW,EAAS,EAC5B,CAAE,UAAAyM,CAAU,EAAInR,EAEtB,OACE,gBAAC,OAAI,UAAW0E,EAAM,cAAe,cAAY,kBAC9CyM,EAAU,IAAI,CAAC7d,EAAM4L,IACpB,gBAAC+R,GAAA,CAAa,IAAK,GAAG/R,CAAK,IAAI5L,EAAK,KAAK,GAAI,MAAOA,EAAK,MAAO,MAAOA,EAAK,MAAO,CACpF,CACH,CAEJ,CAAC,E,gECzBM,SAAS8d,GAAUpR,EAAc,CACtC,KAAM,CAAE,SAAA7D,EAAU,UAAAkV,EAAW,MAAAxK,EAAO,cAAAyK,EAAe,MAAArV,EAAO,UAAAsV,EAAW,gBAAAC,EAAiB,UAAAC,CAAU,EAAIzR,EAC9F,CAAC0R,EAAYC,CAAa,KAAI,YAAgC,MAAS,EACvEC,EAAYH,GAAW,UAAU,MAEjCI,KAAoB,eACvBC,GAAgC,CAC/B,GAAI,CAACA,EAAM,OACT,OAAOA,EAGT,MAAMC,KAAc,OAAcD,EAAOF,EAAWN,IAAkB,KAAc,UAAU,EAExF,CAACU,CAAkB,KAAI,OAAoB,CAC/C,KAAM,CAACD,CAAW,EAClB,SAAA5V,EACA,MAAOnK,EAAA,EAAO,OACd,iBAAmBigB,GAAcA,EACjC,YAAa,CACX,SAAU,CACR,OAAQ,CAAC,CACX,EACA,UAAW,CAAC,CACd,CACF,CAAC,EAED,UAAWvY,KAASsY,EAAmB,OACrCtY,EAAM,SAAY1H,MACT,OAAwB,CAC7B,MAAA0H,EACA,SAAU1H,EAAO,cACjB,YAAaqf,EACb,MAAAxK,EACA,UAAWkL,CACb,CAAC,EAEHrY,EAAM,OAAS,CACb,GAAGA,EAAM,OACT,OAAQ,CACN,QAAS,GACT,WAAY,GACZ,MAAOwY,GAAqBxY,CAAK,EACjC,GAAGA,EAAM,OAAO,MAClB,EAEA,WAAYyY,GAAkBzY,EAAO+X,GAAW,UAAU,MAAQ,GAAIA,GAAW,UAAU,MAAQ,EAAE,CACvG,EAGA/X,EAAM,KAAOA,EAAM,OAAS,MAAU,UAAS,OAAuBA,CAAK,GAAK,MAAU,OAASA,EAAM,KAG3G,OAAOsY,CACT,EACA,CAACV,EAAenV,EAAUkV,EAAWxK,EAAO4K,GAAW,UAAU,KAAMA,GAAW,UAAU,KAAMG,CAAS,CAC7G,EAqDA,MAnDA,aAAU,IAAM,EACE,SAAY,CAC1B,GAAI,CAACH,GAAW,UAAU,MAAQ,CAACA,GAAW,UAAU,KAAM,CAC5DE,EAAc,MAAS,EACvB,MACF,CAGA,MAAM/W,EAA0EwX,GAAqBb,CAAS,EAE9G,IAAIc,EAAeC,GAAkBd,CAAe,EAGpD,MAAMe,EAAYC,GAAyBH,CAAY,EAoBvD,GAnBIE,EACF3X,EAAgB,KAAK2X,CAAS,EAG9B3X,EAAgB,KAAK,CACnB,GAAI,WACJ,QAAS,CACP,YAAa,CACX,CAAC6W,EAAU,UAAU,IAAI,EAAG,EAC5B,CAACA,EAAU,UAAU,IAAI,EAAG,CAC9B,EACA,cAAe,CACb,CAACA,EAAU,UAAU,IAAI,EAAG,GAC5B,CAACA,EAAU,UAAU,IAAI,EAAG,EAC9B,CACF,CACF,CAAC,EAGC7W,EAAgB,OAAS,EAAG,CAC9B,MAAM6X,EAAuB,QAAMC,GAAA,MAAcC,GAAA,GAAmB/X,EAAiB,CAAC2W,CAAS,CAAC,CAAC,EAC3FG,EAAaG,EAAkBY,EAAqB,CAAC,CAAC,EAC5Dd,EAAcD,CAAU,CAC1B,MACEC,EAAcE,EAAkBN,CAAS,CAAC,CAE9C,GACQ,CACV,EAAG,CACDC,EACAD,EACAD,EACAO,EACAJ,GAAW,UAAU,KACrBA,GAAW,UAAU,IACvB,CAAC,EAEG,CAACC,EACH,OAAO,KAGT,MAAMkB,EAAqBC,GAA4B,CACrD,KAAM,CAAE,MAAAjZ,EAAO,IAAArG,EAAK,SAAAuf,CAAS,EAAID,EAC3B,CAAE,mBAAAE,EAAoB,sBAAAC,CAAsB,EAAIhT,EAClD,CAAC+S,GAAsB,CAACC,IAGxBF,IAAa,OACfC,EAAmBxf,EAAKqG,EAAO2X,CAAS,EAGtCuB,IAAa,OACfE,EAAsBzf,EAAKqG,EAAO2X,CAAS,EAE/C,EAEA,OACE,gBAAC0B,GAAA,GACC,KAAMvB,EACN,MAAAzV,EACA,kBAAmB+D,EAAM,oBAAsBA,EAAM,sBAAwB4S,EAAoB,OACjG,OAAQ5S,EAAM,OACd,cAAe,CAAE,KAAM,GAAM,QAAS,CAAC,OAAO,EAAG,UAAW,EAAK,EACnE,CAEJ,CAEA,MAAMmS,GAAoB,CAACzY,EAAcwZ,EAAkBC,IACrD,GAACD,GAAY,CAACC,GAGdD,IAAaxZ,EAAM,MAGnByZ,IAAazZ,EAAM,MAGnBA,EAAM,OAAO,OAAO,QASnB,SAAS0Y,GAAqBb,EAAsB,CACzD,OAAOA,EAAU,OACd,OAAQ7X,GAAoD,CAC3D,MAAM0Z,EACJ1Z,EAAM,UAAU,QAAU,mBAC1BA,EAAM,OAAS,UACf6X,GAAW,MAAM,OAAS,KAAc,SACpC8B,EACJ3Z,EAAM,OAAS,UAAYA,EAAM,OAAS,MAAU,OAAS6X,GAAW,MAAM,OAAS,KAAc,SACvG,OAAO6B,GAAqBC,CAC9B,CAAC,EACA,QAAS3Z,GACD,CACL,CACE,GAAI,gBACJ,QAAS,CACP,OAAQ,OACR,SAAU,GACV,QAAS,GACT,OAAQA,EAAM,IAChB,CACF,CACF,CACD,CACL,CAEA,SAAS4Y,GAAkBd,EAAgD,CAEzE,IAAIa,EAAuC,CAAC,EAC5C,cAAO,KAAKb,CAAe,EACxB,OAAQje,GAAQie,EAAgBje,CAAG,EAAE,MAAM,EAC3C,QAASA,GAAQ,CAChB,MAAM2L,EAAQsS,EAAgBje,CAAG,EAAE,MAE/B2L,IAAU,SACZmT,EAAa9e,CAAG,EAAI2L,EAExB,CAAC,EAEImT,CACT,CAEA,SAASG,GAAyBH,EAAsC,CACtE,IAAIiB,EAA+C,CAAC,EAEpD,UAAW/f,KAAO8e,EAChBiB,EAAoB/f,CAAG,EAAI,GAG7B,OAAI,OAAO,KAAK8e,CAAY,EAAE,OAAS,EAC9B,CACL,GAAI,WACJ,QAAS,CACP,YAAaA,EACb,cAAeiB,CACjB,CACF,EAEK,IACT,CAEA,SAASpB,GAAqBxY,EAAkC,CAC9D,GAAIA,EAAM,OAAS,MAAU,KAC3B,MAAO,IAGX,CC7OA,MAAM,GAAY,KAAO,CACvB,iBAAe;AAAA;AAAA;AAAA;AAAA,GAKjB,GAcA,IAAK6Z,IAAAA,IACHA,EAAA,KAAO,OACPA,EAAA,KAAO,OACPA,EAAA,IAAM,MAHHA,IAAAA,IAAA,IAME,MAAMC,GAAc,OACzB,CAAC,CACC,KAAAC,EACA,cAAAC,EACA,WAAAC,EACA,gBAAAC,EACA,oBAAAC,EACA,oBAAAC,EACA,YAAAC,EACA,iBAAAC,EACA,QAAAC,CACF,IAAa,CACX,MAAMvP,KAAQ,MAAW,EAAS,EAE5BwP,EAAe,MAAOC,GAA2B,CAOrD,UANA,MAAkB,qCAAsC,CACtD,IAAK,MAAQ,QACb,OAAAA,EACA,KAAM,eACR,CAAC,EAEOA,EAAQ,CACd,IAAK,UACHC,GAAA,IAAuB,CAAE,KAAAX,EAAM,KAAMQ,CAAQ,EAAG,SAAS,EACzD,MACF,IAAK,OACH,MAAMI,KAAW,OAAsBJ,CAAO,EACxCK,EAAO,IAAI,KAAK,CAAC,KAAK,UAAUD,CAAQ,CAAC,EAAG,CAChD,KAAM,gCACR,CAAC,EACKE,EAAW,mBAAgB,OAAe,IAAI,IAAM,CAAC,QAC3D,KAAOD,EAAMC,CAAQ,EACrB,MACF,IAAK,MACH,MAAMC,EAAe,IAAI,IACzBP,EAAQ,QAAS1F,GAAQ,CACnBA,EAAI,WAAW,OAAS,CAACiG,EAAa,IAAIjG,EAAI,WAAW,KAAK,GAChEiG,EAAa,IAAIjG,EAAI,WAAW,MAAOA,EAAI,SAAS,CAExD,CAAC,EACDiG,EAAa,QAAQ,MAAOjD,GAAc,CACxC,MAAMkD,EAAqErC,GAAqBb,CAAS,EACzGkD,EAAW,KAAK,CACd,GAAI,WACJ,QAAS,CACP,cAAe,CACZ,OAAW,GACX,WAAe,EAClB,CACF,CACF,CAAC,EACD,MAAMhC,EAAuB,QAAMC,GAAA,MAAcC,GAAA,GAAmB8B,EAAY,CAAClD,CAAS,CAAC,CAAC,KAC5F6C,GAAA,IAAuB3B,EAAqB,CAAC,EAAG,gBAAgBlB,EAAU,KAAK,EAAE,CACnF,CAAC,CACL,CACF,EAEMmD,EAAoD,CAAC,GAAGjB,CAAI,EAG9DC,IAAkB,KAAkB,MACtCgB,EAAa,KAAK,CAChB,MAAO,sBACP,MAAOf,EACP,KAAM,KAAa,MACrB,CAAC,EAGCM,EAAQ,KAAMU,GAAMA,EAAE,MAAM,OAAS,IAAc,GACrDD,EAAa,KAAK,CAChB,MAAO,OACP,MAAO,6EACP,KAAM,KAAa,MACrB,CAAC,EAICd,GAAiB,OAAS,GAC5Bc,EAAa,KACX,CACE,MAAO,+BACP,MAAOE,GAAehB,EAAiB,KAAa,SAAS,CAC/D,EACA,CACE,MAAO,GACP,MACE,gBAAC/kB,EAAA,GAAM,CAAC,QAAQ,YAAY,KAAK,KAAK,QAASglB,CAAA,EAAqB,oBAEpE,CAEJ,CACF,EAIEC,GACFY,EAAa,KAAK,CAChB,MAAO,mDACP,MACE,gBAAC5jB,GAAA,GACC,QAAQ,4IACR,UAAU,SAEV,gBAACjC,EAAA,GAAM,CAAC,QAAQ,YAAY,KAAK,KAAK,QAASmlB,CAAA,EAC5CD,EAAc,kBAAoB,iBACrC,CACF,CAEJ,CAAC,EAEH,MAAMc,EACJ,gBAACzL,GAAA,EAAI,KACH,gBAACA,GAAA,EAAK,KAAL,CAAU,MAAM,MAAM,QAAS,IAAM8K,EAAa,MAAmB,EAAG,EACzE,gBAAC9K,GAAA,EAAK,KAAL,CAAU,MAAM,OAAO,QAAS,IAAM8K,EAAa,MAAmB,EAAG,EAC1E,gBAAC9K,GAAA,EAAK,KAAL,CAAU,MAAM,MAAM,QAAS,IAAM8K,EAAa,KAAkB,EAAG,CAC1E,EAEF,OACE,gCACGQ,GACC,gBAAC,OAAI,UAAWhQ,EAAM,eACpB,gBAACwM,GAAA,CACC,UAAWwD,EAAa,IAAKphB,IACpB,CACL,MAAOA,EAAK,MACZ,MAAO,SAAUA,EAAOshB,GAAethB,EAAK,MAAOA,EAAK,IAAI,EAAIA,EAAK,KACvE,EACD,EACH,EACA,gBAACmW,GAAA,EAAQ,CAAC,QAASoL,CAAA,EACjB,gBAAClO,GAAA,EAAa,CAAC,OAAQ,GAAO,QAAQ,SAAS,KAAK,gBAAe,UAEnE,CACF,CACF,CAEJ,CAEJ,CACF,EAEA6M,GAAY,YAAc,cAE1B,SAASoB,GAAehb,EAAYiH,EAAoB,CACtD,OAAIA,IAAS,KAAa,UACjB,gBAACiU,GAAA,EAAS,CAAC,OAAQlb,CAAA,CAAO,EACxBiH,IAAS,KAAa,MACxB,gBAAC,QAAK,UAAU,yBAAyBjH,CAAM,EAEjDA,CACT,C,wCC1LO,SAASmb,GAAoB,CAAE,MAAAC,EAAO,iBAAAC,EAAkB,gBAAAC,EAAiB,SAAA/Y,EAAU,QAAAoP,EAAS,QAAA/E,CAAQ,EAAU,CACnH,MAAM2O,EAAcC,GACX,MAAG,OAAeA,EAAM,CAC7B,OAAQ,MAAkB,SAAS,OACnC,SAAAjZ,CACF,CAAC,CAAC,GAGEkZ,EAAoB,CAACC,EAAgBpW,IAAkB,CAC3D,GAAI+V,IAAqB/V,GAASqM,EAChC,OAAO,gBAACgK,GAAA,EAAO,IAAC,EAElB,MAAMC,EAAaL,EAAWD,EAAkBI,EAAK,UAAU,KAAOA,EAAK,UAAU,EAAE,EACjFG,EAAgBN,EAAWD,EAAkBI,EAAK,UAAU,GAAKA,EAAK,UAAU,IAAI,EAC1F,MAAO,GAAGE,CAAU,WAAMC,CAAa,EACzC,EAEMzkB,KAAQ,MAAU,EAClBtB,EAAS,GAAUsB,EAAOua,CAAO,EAEvC,OACE,gBAACnU,GAAA,EAAe,CAAC,SAAQ,IACvB,gBAAC,OAAI,UAAW1H,EAAO,aAAc,cAAY,uBAC/C,gBAAC,OAAI,UAAWA,EAAO,gBACpBslB,EAAM,IAAI,CAACM,EAAgBpW,IAC1B,gBAAC,UACC,KAAK,SACL,cAAa,OAAOA,EAAQ,CAAC,GAC7B,aAAW,SAAG,MAAkBlO,CAAK,EAAGtB,EAAO,IAAI,EACnD,IAAK4lB,EAAK,WAAW,GACrB,QAAS,IAAM,CACb9O,EAAQ8O,EAAMpW,EAAQ,CAAC,CACzB,EACA,SAAUqM,CAAA,EAEV,gBAAC,OAAI,aAAW,MAAG7b,EAAO,KAAM,CAAE,WAAYulB,IAAqB/V,CAAM,CAAC,EAAG,EAC7E,gBAAC,OAAI,aAAW,MAAGxP,EAAO,KAAM,CAAE,aAAculB,IAAqB/V,CAAM,CAAC,GACzEmW,EAAkBC,EAAMpW,CAAK,CAChC,CACF,CACD,CACH,CACF,CACF,CAEJ,CAEA,MAAM,GAAY,CAAClO,EAAsBua,KAChC,CACL,gBAAc;AAAA;AAAA,sBAEIva,EAAM,QAAQ,EAAG,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAS5BA,EAAM,OAAO,WAAW,OAAO;AAAA,YAC/BA,EAAM,OAAO,WAAW,OAAO;AAAA,YAC/BA,EAAM,OAAO,WAAW,SAAS;AAAA,YACjCA,EAAM,OAAO,WAAW,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOzC,kBAAgB;AAAA;AAAA;AAAA;AAAA,MAKhB,QAAM;AAAA;AAAA,gBAEMA,EAAM,QAAQ,CAAC,CAAC;AAAA,gBAChBua,EAAU,OAAS,SAAS;AAAA;AAAA;AAAA,sBAGtBva,EAAM,OAAO,QAAQ,IAAI;AAAA;AAAA;AAAA,iBAG9BA,EAAM,OAAO,QAAQ,IAAI;AAAA;AAAA,MAGtC,QAAM;AAAA;AAAA;AAAA;AAAA,oBAIUA,EAAM,OAAO,KAAK,SAAS;AAAA,MAE3C,QAAM;AAAA;AAAA;AAAA,mBAGSA,EAAM,GAAG,WAAW,KAAK,EAAE;AAAA,sBACxBA,EAAM,QAAQ,EAAG,CAAC;AAAA;AAAA;AAAA,KAItC,GCzFF,SAAS0kB,GAAe,CACtB,cAAApZ,EACA,cAAAgV,EACA,SAAAnV,EACA,QAAAoP,EACA,aAAAzE,EACA,gBAAA6O,EACA,aAAAjF,EACA,QAAAlG,EACA,WAAAoL,EACA,kBAAAC,CACF,EAAU,CACR,KAAM,CAACb,EAAOc,CAAQ,KAAI,YAAqB,CAAC,CAAC,EAG3CC,KAAqB,UAAoB,EACzCC,KAAmB,UAA0B,EAG7CC,KAAe,UAAO,CAAC,EAEvBhB,KAAmB,WACvB,IACED,EAAM,UAAWM,GACRA,EAAK,WAAW,KAAOhZ,EAAc,EAC7C,EACH,CAACA,EAAc,GAAI0Y,CAAK,CAC1B,EAEME,EAAkB5D,IAAkB,KAAc,UAClD4E,EAAchB,EAAkBD,IAAqBD,EAAM,OAAS,EAAIC,IAAqB,EAC7FkB,EAAajB,EAAkBD,IAAqB,EAAIA,IAAqBD,EAAM,OAAS,EAC5FhkB,KAAQ,MAAU,EAClBtB,EAAS,GAAUsB,EAAOkkB,CAAe,KAG/C,aAAU,IAAM,CACd,MAAMkB,EAAU,CAAE,UAAW1F,EAAc,WAAYpU,CAAc,EACrE,IAAI+Z,EAAuB,CAAC,EAExB,IAAC,YAAQL,EAAiB,QAAS1Z,CAAa,GAAK,IAAC,YAAQyZ,EAAmB,QAASvL,CAAO,GACnGoL,EAAW,EACXE,EAAS,CAACM,CAAO,CAAC,EAClBL,EAAmB,QAAUvL,EAC7ByL,EAAa,QAAU3Z,EAAc,GAAKA,EAAc,MAExDwZ,EAAUd,IAERqB,EAAWrB,EAAM,OAAQM,GAAS,IAAC,YAAQc,EAAQ,WAAYd,EAAK,UAAU,CAAC,EAE/Ee,EAAW,CAAC,GAAGA,EAAUD,CAAO,EAAE,KAAK,CAACtiB,EAAGC,KAAMuiB,EAAUxiB,EAAGC,GAAGud,CAAa,CAAC,EACxE+E,EACR,CAEL,EAAG,CAAC3F,EAAcpU,EAAegV,EAAe9G,EAASoL,EAAYC,CAAiB,CAAC,EAEvF,MAAMU,KAAa,eACjB,CAAC,CAAE,KAAAxP,EAAM,GAAAC,CAAG,IAAyB,CACnC6O,EAAkB,EAClBG,EAAiB,QAAU,CAAE,KAAAjP,EAAM,GAAAC,CAAG,EACtCF,EAAa,CAAE,KAAAC,EAAM,GAAAC,CAAG,CAAC,CAC3B,EACA,CAACF,EAAc+O,CAAiB,CAClC,EAEMS,EAAY,CAACxiB,EAAaC,EAAaud,IACvCA,IAAkB,KAAc,UAC3Bxd,EAAE,WAAW,GAAKC,EAAE,WAAW,GAAK,EAAI,GAE1CD,EAAE,WAAW,GAAKC,EAAE,WAAW,GAAK,GAAK,EAG5CyiB,EACJ,gBAAC3nB,EAAA,IACC,cAAY,kBACZ,UAAWa,EAAO,UAClB,QAAQ,YACR,QAAS,IAAM,CAKb,MAHA,MAAkB,0CAA2C,CAC3D,SAAU,iBACZ,CAAC,EACIymB,EAQHI,EAAW,CAAE,KAAM7F,EAAa,KAAOuF,EAAa,QAAS,GAAIvF,EAAa,IAAK,CAAC,MARrE,CACf,MAAM+F,EAAcvB,EAAkB,GAAK,EAC3CqB,EAAW,CACT,KAAMvB,EAAMC,EAAmBwB,CAAW,EAAE,WAAW,KACvD,GAAIzB,EAAMC,EAAmBwB,CAAW,EAAE,WAAW,EACvD,CAAC,CACH,CAIAd,EAAgB,CAClB,EACA,SAAUpK,CAAA,EAEV,gBAAC,OAAI,UAAW7b,EAAO,kBACpB6b,EAAU,gBAACgK,GAAA,EAAO,IAAC,EAAK,gBAACxkB,GAAA,EAAI,CAAC,KAAMmkB,EAAkB,WAAa,aAAc,KAAK,IAAK,GAAG,YAEjG,CACF,EAGIwB,EACJ,gBAAC7nB,EAAA,IACC,cAAY,kBACZ,UAAWa,EAAO,UAClB,QAAQ,YACR,QAAS,IAAM,CAKb,MAJA,MAAkB,0CAA2C,CAC3D,SAAU,iBACZ,CAAC,EAEG,CAACwmB,EAAa,CAChB,MAAMO,EAAcvB,EAAkB,EAAI,GAC1CqB,EAAW,CACT,KAAMvB,EAAMC,EAAmBwB,CAAW,EAAE,WAAW,KACvD,GAAIzB,EAAMC,EAAmBwB,CAAW,EAAE,WAAW,EACvD,CAAC,CACH,CACAd,EAAgB,CAElB,EACA,SAAUpK,GAAW2K,CAAA,EAErB,gBAAC,OAAI,UAAWxmB,EAAO,kBACpB6b,GAAW,gBAACgK,GAAA,EAAO,IAAC,EACpBW,GAAe3K,EAAU,KAAO,gBAACxa,GAAA,EAAI,CAAC,KAAMmkB,EAAkB,aAAe,WAAY,KAAK,IAAK,GACnGgB,EAAc,iBAAmB,YACpC,CACF,EAGIS,KAAc,eAClB,CAACrB,EAAgBsB,IAAuB,IACtC,MAAkB,0CAA2C,CAC3D,SAAU,OACV,WAAAA,CACF,CAAC,EACDL,EAAW,CAAE,KAAMjB,EAAK,WAAW,KAAM,GAAIA,EAAK,WAAW,EAAG,CAAC,EACjEK,EAAgB,CAClB,EACA,CAACY,EAAYZ,CAAe,CAC9B,EAEMkB,KAAqB,eAAY,IAAM,IAC3C,MAAkB,yCAAyC,EAC3DlB,EAAgB,CAClB,EAAG,CAACA,CAAe,CAAC,EAEpB,OACE,gBAAC,OAAI,UAAWjmB,EAAO,cACpB,CAACsC,EAAA,EAAO,eAAe,uBACtB,gCACGkjB,EAAkBsB,EAAkBE,EACrC,gBAAC3B,GAAA,CACC,MAAAC,EACA,iBAAAC,EACA,gBAAAC,EACA,SAAA/Y,EACA,QAAAoP,EACA,QAASoL,CAAA,CACX,EACCzB,EAAkBwB,EAAkBF,CACvC,EAEF,gBAAC3nB,EAAA,IACC,cAAY,cACZ,UAAWa,EAAO,kBAClB,QAAQ,YACR,QAASmnB,EACT,MAAM,iBAEN,gBAAC9lB,GAAA,EAAI,CAAC,KAAK,WAAW,KAAK,IAAK,EAClC,CACF,CAEJ,CAEA,YAAe,QAAK2kB,EAAc,EAE5B,GAAY,CAAC1kB,EAAsBkkB,IAA6B,CACpE,MAAM4B,EAAqB,kBAAkB9lB,EAAM,QAAQ,CAAC,CAAC,QAAQ,IAAoB,MACzF,MAAO,CACL,gBAAc;AAAA,oBACE8lB,CAAkB;AAAA;AAAA;AAAA,QAG9B9kB,EAAA,EAAO,eAAe,sBACpB,6BACA,oBAAoBkjB,EAAkB,aAAe,eAAe,GAAG;AAAA;AAAA,aAEpElkB,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA,MAGzB,aAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASX,oBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASlB,qBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOHA,EAAM,QAAQ,CAAC,CAAC;AAAA,KAElC,CACF,E,gBCvPA,SAAS,GAAUA,EAAsB,CACvC,MAAO,CACL,cAAY,OAAI,CACd,QAAS,GAAGA,EAAM,QAAQ,EAAG,CAAC,MAAMA,EAAM,QAAQ,EAAG,CAAC,IAAIA,EAAM,QAAQ,EAAG,CAAC,EAC9E,CAAC,CACH,CACF,CAEO,SAAS+lB,GAAiB/W,EAAoF,CACnH,MAAMhP,KAAQ,MAAU,EAClBtB,EAAS,GAAUsB,CAAK,EAC9B,OACE,gBAACwI,GAAA,EAAK,CAAC,UAAW9J,EAAO,YACvB,gBAACoK,GAAA,EAAK,CAAC,MAAOkG,EAAM,MAAO,KAAM,OAAQ,YAAa,wBAAyB,SAAUA,EAAM,SAAU,CAC3G,CAEJ,C,gBChBA,SAAS,GAAUhP,EAAsB,CACvC,MAAO,CACL,SAAO,OAAI,CACT,aAAcA,EAAM,QAAQ,CAAC,EAC7B,WAAYA,EAAM,QAAQ,IAAI,EAC9B,SAAUA,EAAM,WAAW,QAC7B,CAAC,CACH,CACF,CAEO,SAASgmB,IAAuB,CACrC,MAAMhmB,KAAQ,MAAU,EAClBtB,EAAS,GAAUsB,CAAK,EAC9B,OAAO,gBAAC,OAAI,UAAWtB,EAAO,OAAO,WAAS,CAChD,C,gBCZA,SAAS,GAAUsB,EAAsB,CACvC,MAAO,CACL,YAAU,OAAI,CACZ,OAAQ,OACR,WAAYA,EAAM,QAAQ,CAAC,EAC3B,QAAS,EACX,CAAC,EACD,cAAY,OAAI,CACd,WAAYA,EAAM,QAAQ,EAAG,EAC7B,YAAaA,EAAM,QAAQ,EAAG,EAC9B,WAAY,OACZ,WAAY,OACZ,OAAQ,OACR,SAAUA,EAAM,WAAW,QAAQ,EAAE,EACrC,QAAS,EACX,CAAC,EACD,eAAa,OAAI,CACf,QAAS,OACT,WAAY,SACZ,eAAgB,gBAChB,MAAO,MACT,CAAC,EAED,iBAAe,OAAI,CACjB,SAAU,CACR,SAAU,SACV,aAAc,WACd,WAAY,SACZ,QAAS,QACT,SAAU,MACZ,CACF,CAAC,CACH,CACF,CAEO,SAASimB,GAAkBjX,EAMA,CAChC,MAAMhP,KAAQ,MAAU,EAClBtB,EAAS,GAAUsB,CAAK,EAE9B,GAAIgP,EAAM,OAAOA,EAAM,KAAK,EAC1B,OACE,gCACE,gBAAC,OAAI,UAAWtQ,EAAO,aACrB,gBAACwnB,GAAA,GACC,UAAWxnB,EAAO,cAClB,MAAOsQ,EAAM,MACb,SAAUA,EAAM,SAChB,QAASA,EAAM,OAAOA,EAAM,KAAK,GAAG,QAAU,GAChD,EACCA,EAAM,WACL,gBAAC,UAAO,UAAWtQ,EAAO,WAAY,QAASsQ,EAAM,UAClDA,EAAM,OAAOA,EAAM,KAAK,GAAG,wBAAwB,GACtD,CAEJ,EACCA,EAAM,WACL,gBAACjP,GAAA,GACC,aAAW,qBACX,MAAM,2BACN,KAAK,gBACL,KAAK,KACL,UAAWrB,EAAO,SACpB,CAEJ,CAIN,CCvEO,SAASynB,GAAoBnmB,EAAsB,CACxD,MAAO,CACL,QAAM,OAAI,CACR,UAAWA,EAAM,QAAQ,CAAC,EAC1B,aAAcA,EAAM,QAAQ,CAAC,EAC7B,QAAS,OACT,WAAYA,EAAM,OAAO,WAAW,OACtC,CAAC,EACD,YAAU,OAAI,CACZ,WAAYA,EAAM,OAAO,WAAW,SACtC,CAAC,EACD,iBAAe,OAAI,CACjB,aAAcA,EAAM,QAAQ,GAAG,EAE/B,YAAaA,EAAM,QAAQ,EAAG,CAChC,CAAC,CACH,CACF,CAEA,SAASomB,GAAWC,EAAuC,CACzD,MAAO,CAACvjB,EAAWC,IAAc,CAC/B,MAAMujB,EAAKD,EAAOvjB,CAAC,EACbyjB,EAAKF,EAAOtjB,CAAC,EAGnB,OAAIujB,EAAG,OAAS,MAAQC,EAAG,OAAS,KAC3BD,EAAG,MAAQC,EAAG,MAIhB,CACT,CACF,CAEO,MAAMC,GAAyBxX,GAMnB,CACjB,KAAM,CAAE,cAAAyX,EAAe,OAAAJ,EAAQ,YAAAK,EAAa,aAAAC,CAAa,EAAI3X,EACvDhP,KAAQ,MAAU,EAClBtB,EAASynB,GAAoBnmB,CAAK,EAClC4mB,EAAY,OAAO,KAAKP,CAAM,EAAE,OAAQQ,GAAcH,EAAYG,CAAS,CAAC,EAE5EC,EAAaC,GAAuB,CACnCA,EAAO,aAGZN,EAAcM,EAAO,OAAO,MAAOA,EAAO,YAAY,KAAK,CAC7D,EAEMC,EAAeH,GAAsB,CACzC,MAAMhgB,EAAQwf,EAAOQ,CAAS,EAC9B,GAAIhgB,EACF,MAAO,GAAGggB,CAAS,eAAehgB,GAAO,uBAAuB,gBAIpE,EAEA,OAAI+f,EAAU,OAEV,gBAAC,MAAe,CAAC,UAAAE,CAAA,EACf,gBAAC,MAAS,CAAC,YAAY,eAAe,UAAU,YAC5CG,GACA,gBAAC,OAAI,UAAWvoB,EAAO,cAAgB,GAAGuoB,EAAS,eAAgB,IAAKA,EAAS,UAC9EL,EAAU,KAAKR,GAAWC,CAAM,CAAC,EAAE,IAAI,CAACQ,EAAW3Y,IAClD,gBAAC,MAAS,CAAC,YAAa2Y,EAAW,IAAKA,EAAW,MAAA3Y,CAAA,EAChD,CAAC+Y,EAA6BC,IAC7B,gBAAC,OACC,aAAW,MAAGxoB,EAAO,KAAMwoB,EAAS,WAAaxoB,EAAO,SAAW,MAAS,EAC5E,IAAKuoB,EAAS,SACb,GAAGA,EAAS,eACZ,GAAGA,EAAS,gBACb,MAAOD,EAAYH,CAAS,GAE5B,gBAACZ,GAAA,CACC,MAAOY,EACP,SAAU,IAAMF,EAAaE,CAAS,EACtC,OAAAR,EACA,UAAW,GACb,CACF,CAEJ,CACD,EACAY,EAAS,WACZ,CAEJ,CACF,EAIG,gBAACjB,GAAoB,IAAC,CAC/B,ECnGMmB,GAAW,IAAI,KAAK,SAAS,OAAW,CAAE,YAAa,MAAO,CAAC,EAErE,SAAS,GAAWd,EAAuC,CACzD,MAAO,CAACvjB,EAAWC,IAAc,CAC/B,MAAMujB,EAAKD,EAAOvjB,CAAC,EACbyjB,EAAKF,EAAOtjB,CAAC,EAGnB,OAAIujB,GAAM,MAAQC,GAAM,KAEpB,EAAOA,EAAG,OAAS,cAAgB,EAAOD,EAAG,OAAS,eACtD,EAAOC,EAAG,OAAS,cAAgB,EAAOD,EAAG,OAAS,eACtDa,GAAS,QAAQrkB,EAAGC,CAAC,EAKlB,CACT,CACF,CAEO,MAAMqkB,GAA4BpY,GAItB,CACjB,KAAM,CAAE,OAAAqX,EAAQ,YAAAK,EAAa,aAAAC,CAAa,EAAI3X,EACxChP,KAAQ,MAAU,EAClBtB,EAASynB,GAAoBnmB,CAAK,EAClC4mB,EAAY,OAAO,KAAKP,CAAM,EAAE,OAAQQ,GAAcH,EAAYG,CAAS,CAAC,EAClF,OAAID,EAAU,OAGV,gBAAC,OAAI,UAAWloB,EAAO,eACpBkoB,EAAU,KAAK,GAAWP,CAAM,CAAC,EAAE,IAAI,CAACQ,EAAW3Y,IAClD,gBAAC,OACC,IAAK2Y,EACL,UAAWnoB,EAAO,KAClB,MAAO,GAAGmoB,CAAS,eAAeR,EAAOQ,CAAS,GAAG,uBAAuB,kBAE5E,gBAACZ,GAAA,CACC,UAAW,GACX,MAAOY,EACP,SAAU,IAAMF,EAAaE,CAAS,EACtC,OAAAR,CAAA,CACF,CACF,CACD,CACH,EAIG,gBAACL,GAAoB,IAAC,CAC/B,ECpDA,SAAS,GAAUhmB,EAAsB,CACvC,MAAO,CACL,eAAa,OAAI,CACf,UAAW,SACX,OAAQ,oBAER,uBAAwB,CACtB,QAAS,MACX,EAEA,eAAgB,MAClB,CAAC,EACD,sBAAoB,OAAI,CACtB,WAAY,OACZ,WAAY,OACZ,OAAQ,OACR,SAAUA,EAAM,WAAW,QAAQ,EAAE,CACvC,CAAC,EACD,gBAAc,OAAI,CAChB,QAAS,OACT,eAAgB,gBAChB,SAAUA,EAAM,WAAW,GAAG,SAC9B,WAAYA,EAAM,OAAO,WAAW,UACpC,SAAU,SACV,IAAK,EACL,KAAM,EACN,WAAYA,EAAM,QAAQ,GAAI,EAC9B,aAAcA,EAAM,QAAQ,GAAI,EAChC,cAAeA,EAAM,QAAQ,GAAI,EACjC,YAAaA,EAAM,QAAQ,GAAG,EAC9B,OAAQ,EACR,aAAcA,EAAM,QAAQ,CAAC,CAC/B,CAAC,CACH,CACF,CAEO,MAAMqnB,GAAwBrY,GAM/B,CACJ,MAAMhP,KAAQ,MAAU,EAClBtB,EAAS,GAAUsB,CAAK,EAE9B,OACE,gBAAC,OAAI,UAAWtB,EAAO,aAErB,gCACE,gBAAC,OAAI,UAAWA,EAAO,cAAc,kBAEnC,gBAAC,UAAO,QAASsQ,EAAM,MAAO,UAAWtQ,EAAO,oBAAoB,OAEpE,CACF,EACA,gBAAC8nB,GAAA,CACC,cAAexX,EAAM,cACrB,aAAcA,EAAM,aACpB,OAAQA,EAAM,yBAA2BA,EAAM,gBAC/C,YAAcpG,GAAUoG,EAAM,gBAAgBpG,CAAK,GAAG,QAAU,GAChE,GAAI,kBACN,EAEA,gBAAC,OAAI,UAAWlK,EAAO,cAAc,QAAM,EAC3C,gBAAC0oB,GAAA,CACC,aAAcpY,EAAM,aACpB,OAAQA,EAAM,yBAA2BA,EAAM,gBAC/C,YAAcpG,GAAU,CAACoG,EAAM,gBAAgBpG,CAAK,GAAG,OACzD,CACF,CACF,CAEJ,E,gBChFA,MAAM0e,GAAK,IAAI,KAAO,CACpB,UAAW,EACX,SAAU,EACV,SAAU,EACV,SAAU,EACV,SAAU,CACZ,CAAC,EAEM,SAASC,GAAYC,EAAoB/mB,EAAegnB,EAAwC,CACrG,KAAM,CAACC,EAAMC,EAAMC,CAAK,EAAIN,GAAG,OAAOE,EAAU/mB,EAAO,EAAG,GAAG,EAE7D,IAAIonB,EAA0B,CAAC,EAC3BC,EAA0B,IAAI,IAClC,GAAIJ,GAAQE,EAAO,CAMjB,MAAMG,EAAO,CAACC,EAAcC,IAAqB,CAC3CA,GACFH,EAAW,IAAIE,CAAI,CAEvB,EAGA,QAASzhB,EAAI,EAAGA,EAAIqhB,EAAM,OAAQrhB,IAAK,CACrC,IAAI2hB,EAAUN,EAAMrhB,CAAC,EAGrB,KAAO,UAAUihB,EAASG,EAAK,IAAIO,CAAO,CAAC,EAAGP,EAAK,OAAOO,CAAO,EAAGH,CAAI,EAExEF,EAAc,KAAKL,EAASG,EAAK,IAAIO,CAAO,CAAC,CAAC,CAChD,CAEAT,EAAW,CAACI,EAAe,CAAC,GAAGC,CAAU,CAAC,CAAC,CAC7C,MAAYrnB,GACVgnB,EAAW,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,CAEvB,CAEO,MAAMU,MAAuB,aAAeZ,GAAa,GAAG,ECc5D,SAASa,GAAcpZ,EAAc,CAC1C,KAAM,CAAE,WAAAqZ,EAAY,iBAAAC,EAAkB,WAAAC,CAAW,EAAIvZ,EAC/CwZ,EAAeD,GAAY,QAE3B,CAAC/H,EAAiBiI,CAAkB,KAAI,YAAyC,MAAS,EAG1F,CAACC,EAAyBC,CAA0B,KAAI,YAAyC,MAAS,EAC1G,CAACC,EAAaC,CAAc,KAAI,YAAiB,EAAE,EAEnD3d,EAAS4d,GAAmB,EAC5BC,EAAkB/Z,GAAO,YAAY,MAGrC,CAACga,EAAkBC,CAAmB,KAAI,YAC9CZ,EAAW,KAAMa,GAAMA,EAAE,QAAUH,CAAe,GAAKV,EAAW,CAAC,CACrE,EAEMc,KAAsB,eACzBC,GAAmC,CAClC,MAAMC,EAAqBra,EAAM,YAAY,QAC7C,OAAIqa,GACF,OAAO,OAAOA,CAAkB,EAAE,QAAQ,CAAC9mB,EAAK2L,IAAU,CACpDkb,EAAW7mB,CAAG,IAChB6mB,EAAW7mB,CAAG,EAAE,OAAS,GACzB6mB,EAAW7mB,CAAG,EAAE,MAAQ2L,EAE5B,CAAC,EAEIkb,CACT,EACA,CAACpa,EAAM,YAAY,OAAO,CAC5B,EACMyR,KAAY,MAAeuI,CAAgB,KAEjD,aAAU,IAAM,CACd,GAAIvI,GAAW,UAAU,MAAQA,GAAW,UAAU,MAAQ,CAAC+H,EAAc,CAC3E,MAAMc,EAAiB,CAAE,EAAG7I,GAAW,UAAU,MAAQ,GAAI,EAAGA,GAAW,UAAU,MAAQ,EAAG,EAChG6H,EAAiB,CACf,QAAS,OAAO,OAAOgB,CAAc,EACrC,kBAAmB,QACnB,eAAgB7I,GAAW,kBAAkB,GAAK,MACpD,CAAC,CACH,CACF,EAAG,CAACA,EAAW+H,EAAcF,CAAgB,CAAC,KAK9C,aAAU,IAAM,CACd,MAAMiB,EAAWlB,EAAW,KAAMa,GAAMA,EAAE,QAAUH,CAAe,GAAKV,EAAW,CAAC,EAChFkB,GACFN,EAAoBM,CAAQ,CAEhC,EAAG,CAAClB,EAAYU,CAAe,CAAC,KAOhC,aAAU,IAAM,CACd,GAAI,CAACvI,GAAmB,CAACkI,EACvB,OAEF,IAAIc,EAAc,CAAE,GAAGd,CAAwB,EAC3Ce,EAAO,GACX,OAAO,KAAKjJ,CAAe,EAAE,QAASje,GAAQ,CACxCinB,EAAYjnB,CAAG,GAAKinB,EAAYjnB,CAAG,EAAE,SAAWie,EAAgBje,CAAG,EAAE,SACvEinB,EAAYjnB,CAAG,EAAIie,EAAgBje,CAAG,EACtCknB,EAAO,GAEX,CAAC,EACGA,GACFd,EAA2Ba,CAAW,CAE1C,EAAG,CAAChJ,EAAiBkI,CAAuB,CAAC,KAU7C,aAAU,IAAM,CAEd,GAAI,CAACM,EAAiB,OACpB,OAEF,MAAMU,EAAmBV,EAAmBA,EAAiB,OAAS,EAChEvI,KAAY,MAAeuI,CAAgB,EAC3C3C,EAAS5F,GAAW,0BAA0B,EAE9CkJ,EAAc,CAAC,EAEjBlJ,GACFkJ,EAAY,KAAK,GAAGlJ,EAAU,YAAY,OAAQ/X,IAAU,CAACA,IAAO,QAAQ,QAAQ,MAAM,CAAC,EAEzF+X,GAAW,eACbkJ,EAAY,KAAKlJ,GAAW,aAAa,EAEvCA,GAAW,WACbkJ,EAAY,KAAKlJ,GAAW,SAAS,EAEnCA,GAAW,WACbkJ,EAAY,KAAKlJ,GAAW,SAAS,EAIvC,MAAMmJ,EAAmB,IAAI,IAG7B,IAAIC,EAAwC,CAAC,EAGzCxD,GAAQ,QAAUqD,IAEpBrD,EAAO,QAASA,IAAmB,CACb,OAAO,KAAKA,EAAM,EAE1B,QAASxf,IAAU,CAE7B,GAAI+iB,EAAiB,IAAI/iB,EAAK,EAAG,CAC/B,MAAM+B,GAAQghB,EAAiB,IAAI/iB,EAAK,EACpC+B,KACEA,IAAO,OACTghB,EAAiB,IAAI/iB,GAAO,CAC1B,wBAAyB+B,GAAM,wBAA0B,EACzD,OAAQ,GACR,MAAOA,GAAM,KACf,CAAC,EAEDghB,EAAiB,IAAI/iB,GAAO,CAC1B,wBAAyB+B,GAAM,wBAA0B,EACzD,OAAQ,GACR,MAAO,MACT,CAAC,EAIP,MACEghB,EAAiB,IAAI/iB,GAAO,CAAE,wBAAyB,EAAG,OAAQ,GAAO,MAAO,MAAU,CAAC,CAE/F,CAAC,CACH,CAAC,EAGDgjB,EAAoB,OAAO,YAAYD,CAAgB,EAGvD,OAAO,KAAKC,CAAiB,EAAE,QAAStnB,IAAQ,CAC9CsnB,EAAkBtnB,EAAG,EAAE,wBAA0BunB,GAC/CD,EAAkBtnB,EAAG,EAAE,wBACvBmnB,CACF,CACF,CAAC,GAIHC,EAAY,QAASjhB,IAAU,CAC7B,MAAM9E,EAAWimB,EAAkBnhB,GAAM,IAAI,GAAG,OAC1CwF,GAAQ2b,EAAkBnhB,GAAM,IAAI,GAAG,MACzC9E,GAAYsK,KAAU,OACxB2b,EAAkBnhB,GAAM,IAAI,EAAI,CAC9B,wBAAyBohB,GACvBphB,GAAM,OAAO,OAAQE,IAAUA,IAAU,IAA2B,EAAE,OACtE8gB,CACF,EACA,OAAQ,GACR,MAAAxb,EACF,EAEA2b,EAAkBnhB,GAAM,IAAI,EAAI,CAC9B,wBAAyBohB,GACvBphB,GAAM,OAAO,OAAQE,IAAUA,IAAU,IAA2B,EAAE,OACtE8gB,CACF,EACA,OAAQ,GACR,MAAO,MACT,CAEJ,CAAC,EAEDG,EAAoBV,EAAoBU,CAAiB,EAG1C,OAAO,KAAKA,CAAiB,EAAE,OAAQtnB,IAAQsnB,EAAkBtnB,EAAG,EAAE,MAAM,EAGhF,SAAW,IAChBke,GAAW,WAAW,OACxBoJ,EAAkBpJ,EAAU,UAAU,IAAI,EAAE,OAAS,IAEnDA,GAAW,WAAW,OACxBoJ,EAAkBpJ,EAAU,UAAU,IAAI,EAAE,OAAS,KAIrDA,GAAW,WAAW,MAAQA,GAAW,WAAW,OACtDoJ,EAAkBpJ,EAAU,UAAU,IAAI,EAAE,KAAO,aACnDoJ,EAAkBpJ,EAAU,UAAU,IAAI,EAAE,KAAO,cAGrDgI,EAAmBoB,CAAiB,CAGtC,EAAG,CAACb,EAAkBG,CAAmB,CAAC,EAE1C,KAAM,CAACY,EAAcC,CAAe,KAAI,YAAS,GAAG,EAC9CC,EAAajb,EAAM,MAAQ+a,EAEjC,GAAI,CAACvJ,EACH,OAAO,KAGT,SAAS0J,EAAkBC,EAAoB,CAC7C,GAAI3J,EAAiB,CACnB,MAAMxN,EAAW,CAACwN,EAAgB2J,CAAU,GAAG,OACzCC,EAAmB,OAAO,KAAK5J,CAAe,EAAE,OAAQ6J,GAAW7J,EAAgB6J,CAAM,GAAG,MAAM,GAAG,OACrG/sB,EAAQ,CACZ,aAAc0V,EAAW,MAAQ,SACjC,YAAaA,EAAWoX,EAAmB,EAAIA,EAAmB,EAClE,eAAgBpb,EAAM,cACxB,KACA,MAAkB,mDAAoD1R,CAAK,CAC7E,CACF,CAEA,SAASgtB,EAAkBC,EAA2B,IACpD,MAAkB,sDAAuD,CACvE,YAAaA,EACb,eAAgBvb,EAAM,gBAAkB,SAC1C,CAAC,CACH,CAEA,MAAMwb,EAAiB,IAAM,CAC3B,MAAMX,EAAoB,CAAE,GAAGrJ,CAAgB,EAC/C,IAAItS,EAAQ,EACZ,OAAO,KAAK2b,CAAiB,EAAE,QAAStnB,GAAQ,CAC9C,MAAMkoB,EAAiB,CAAC,CAACZ,EAAkBtnB,CAAG,EAAE,KAEhDsnB,EAAkBtnB,CAAG,EAAE,OAASkoB,EAEhCZ,EAAkBtnB,CAAG,EAAE,MAAQkoB,EAAiBvc,IAAU,MAC5D,CAAC,EACDua,EAAmBoB,CAAiB,CACtC,EAEMpD,EAAgB,CAACiE,EAAqBC,IAA6B,CACvE,GAAID,IAAgBC,EAClB,OAGF,MAAMd,EAAoB,CAAE,GAAGrJ,CAAgB,EAEzC5f,EAAO,OAAO,KAAKipB,CAAiB,EACvC,OAAQtnB,GAAQsnB,EAAkBtnB,CAAG,EAAE,MAAM,EAC7C,IAAKA,IAAS,CACb,UAAWA,EACX,MAAOsnB,EAAkBtnB,CAAG,EAAE,OAAS,CACzC,EAAE,EACD,KAAK,CAACO,EAAGC,KAAMD,EAAE,MAAQC,GAAE,KAAK,EAE7B,CAAC6nB,CAAM,EAAIhqB,EAAK,OAAO8pB,EAAa,CAAC,EAC3C9pB,EAAK,OAAO+pB,EAAkB,EAAGC,CAAM,EAEvChqB,EAAK,QAAQ,CAAC2B,EAAK2L,KAAU,CAC3B2b,EAAkBtnB,EAAI,SAAS,EAAE,MAAQ2L,EAC3C,CAAC,EAGDua,EAAmBoB,CAAiB,EAGpCgB,EAAmBhB,CAAiB,CACtC,EAEA,SAASgB,EAAmBhB,EAAuC,CAEjE,MAAMiB,EAAkB,OAAO,KAAKjB,CAAiB,EAElD,OAAQtnB,GAAQsnB,EAAkBtnB,CAAG,GAAG,MAAM,EAC9C,KAAK,CAACO,EAAGC,KAAM,CACd,MAAMgoB,GAAKlB,EAAkB/mB,CAAC,EACxBkoB,EAAKnB,EAAkB9mB,EAAC,EAC9B,OAAIgoB,GAAG,QAAU,QAAaC,EAAG,QAAU,OAClCD,GAAG,MAAQC,EAAG,MAEhB,CACT,CAAC,EAEGC,EAAqC,OAAO,OAChD,CAAC,EAEDH,CACF,EAEMxB,EAAiB,CAAE,EAAG7I,GAAW,UAAU,MAAQ,GAAI,EAAGA,GAAW,UAAU,MAAQ,EAAG,EAC1FyK,EAAuC,CAC3C,GAAGlc,EAAM,WAET,QAAS,OAAO,KAAKic,CAAU,EAAE,OAASA,EAAa3B,EACvD,MAAON,EAAiB,MACxB,kBAAmB,QACnB,eAAgBvI,GAAW,kBAAkB,GAAK,MACpD,EAGA6H,EAAiB4C,CAAa,CAChC,CAGA,MAAMvE,EAAgBwD,GAA0B,CAC9C,GAAI,CAAC3J,GAAmB,EAAE2J,KAAc3J,GAAkB,CACxD,QAAQ,KAAK,uBAAwBA,CAAe,EACpD,MACF,CAEA,MAAM2K,EAAS,OAAO,KAAK3K,CAAe,EAAE,OAAQrR,GAAMqR,EAAgBrR,CAAC,EAAE,MAAM,EAAE,OAC/EvL,EAAY4c,EAAgB2J,CAAU,EAAE,OAAgB,OAAP,GAEvD,IAAIN,EA4BJ,GA3BIjmB,EACFimB,EAAoB,CAClB,GAAGrJ,EACH,CAAC2J,CAAU,EAAG,CACZ,GAAG3J,EAAgB2J,CAAU,EAC7B,OAAQvmB,EACR,MAAOunB,CACT,CACF,EAEAtB,EAAoB,CAClB,GAAGrJ,EACH,CAAC2J,CAAU,EAAG,CACZ,GAAG3J,EAAgB2J,CAAU,EAC7B,OAAQ,GACR,MAAO,MACT,CACF,EAIFD,EAAkBC,CAAU,EAG5B1B,EAAmBoB,CAAiB,EAGhCnB,EAAyB,CAC3B,MAAM0C,EAAS,CAAC1C,EAAwByB,CAAU,GAAG,OACrD,IAAIkB,EACAD,EACFC,EAA4B,CAC1B,GAAG3C,EACH,CAACyB,CAAU,EAAG,CACZ,GAAGzB,EAAwByB,CAAU,EACrC,OAAAiB,EACA,MAAOD,CACT,CACF,EAEAE,EAA4B,CAC1B,GAAG3C,EACH,CAACyB,CAAU,EAAG,CACZ,GAAGzB,EAAwByB,CAAU,EACrC,OAAQ,GACR,MAAO,MACT,CACF,EAGFxB,EAA2B0C,CAAyB,CACtD,CAEAR,EAAmBhB,CAAiB,CACtC,EAGMpC,EAAc6D,GAAqB,CACvC,MAAMC,EAAUD,EAAK,CAAC,EACtB,IAAIE,EAAyC,CAAC,EAC1CC,EAAkB,EACtBF,EAAQ,QAASG,GAAU,CACrBA,KAASlL,IACXgL,EAAmBE,CAAK,EAAIlL,EAAgBkL,CAAK,EACjDD,IAEJ,CAAC,EACD9C,EAA2B6C,CAAkB,EAC7ClB,EAAkBmB,CAAe,CACnC,EAGME,EAAUC,GAAmB,CACjCrE,GAAY,OAAO,KAAK/G,CAAe,EAAGoL,EAAQnE,CAAU,CAC9D,EAGMoE,EAAuB5e,GAAyC,CACpE,MAAMrE,EAAQqE,EAAE,eAAe,MAC/B4b,EAAejgB,CAAK,EAChBA,EACF+iB,EAAO/iB,CAAK,EAGZ+f,EAA2B,MAAS,CAExC,EAEMmD,EAAyBljB,GAAmC,CACtCyf,EAAW,KAAMvH,GAAUA,EAAM,QAAUlY,EAAM,KAAK,GAE9EqgB,EAAoBZ,EAAW,KAAMvH,GAAUA,EAAM,QAAUlY,EAAM,KAAK,GAAKyf,EAAW,CAAC,CAAC,EAE9FrZ,EAAM,iBAAiB,CAAE,MAAOpG,EAAM,MAAO,eAAgB6X,GAAW,kBAAkB,GAAK,MAAU,CAAC,CAC5G,EAEM/hB,EAAS,GAAUsQ,EAAM,MAAO9D,EAAQ6e,CAAY,EAEpDgC,GAA8B,CAACzuB,EAAO0S,EAAW9O,IAAQ,CAC7D,MAAM8qB,EAAkB,OAAO9qB,EAAI,MAAM,MAAM,MAAM,EAAG,EAAE,CAAC,EACtD,MAAM8qB,CAAe,GACxBhC,EAAgBgC,CAAe,CAEnC,EAEA,OACE,gCACE,gBAAC,WACE3D,EAAW,OAAS,GACnB,gBAAC,WACC,gBAAC4D,GAAA,GACC,MAAM,eACN,QAAQ,oCACR,WAAY,GACZ,QAAQ,6CAER,gBAACtjB,GAAA,IACC,QAAS,oCACT,aAAY,uBACZ,MAAOqgB,EAAiB,MACxB,QAASX,EAAW,IAAKvH,IAChB,CACL,MAAOA,EAAM,MACb,MAAOA,EAAM,KACf,EACD,EACD,SAAUgL,CAAA,CACZ,CACF,CACF,CAEJ,EACA,gBAAC,OAAI,UAAWptB,EAAO,SACrB,gBAACqQ,GAAA,CACC,OAAQ,CACN,MAAO,EACT,EACA,cAAe,CAAE,MAAOrQ,EAAO,QAAS,EACxC,SAAUqtB,EAAA,EAEV,gBAAC,WAAQ,UAAWrtB,EAAO,SACzB,gBAACqnB,GAAgB,CAAC,MAAO6C,EAAa,SAAUiD,CAAA,CAAqB,EACrE,gBAACxE,GAAA,CACC,cAAAZ,EACA,aAAAE,EACA,wBAAA+B,EACA,gBAAAlI,EACA,MAAOgK,CAAA,CACT,CACF,CACF,EACA,gBAACpK,GAAA,CACC,UAAAK,EACA,mBAAoBzR,EAAM,mBAC1B,sBAAuBA,EAAM,sBAC7B,cAAeA,EAAM,cACrB,MAAOA,EAAM,MACb,UAAWA,EAAM,UACjB,SAAUA,EAAM,SAChB,MAAOib,EACP,UAAWjB,EACX,gBAAAxI,EACA,OAAAtV,CAAA,CACF,CACF,CACF,CAEJ,CAEA,MAAM4e,GAAY,CAAClhB,EAAesjB,IACzB,KAAK,KAAM,IAAMtjB,EAASsjB,CAAK,EAGxC,SAAS,GAAUlsB,EAAsBkL,EAAgBD,EAAe,CACtE,MAAO,CACL,WAAS,OAAI,CACX,QAAS,MACX,CAAC,EACD,WAAS,OAAI,CACX,OAAAC,EACA,SAAUlL,EAAM,WAAW,QAAQ,EAAE,EACrC,UAAW,SACX,MAAAiL,EACA,aAAcjL,EAAM,QAAQ,CAAC,CAC/B,CAAC,EACD,YAAU,OAAI,CACZ,WAAYA,EAAM,OAAO,UAAU,KACnC,WAAY,8BACZ,SAAU,WACV,OAAQ,iBACR,MAAO,GAAGA,EAAM,QAAQ,CAAC,CAAC,cAC1B,IAAK,iBACL,MAAO,GAAGA,EAAM,QAAQ,CAAC,CAAC,cAC1B,OAAQ,OACR,aAAcA,EAAM,MAAM,OAAO,KAChC,UAAY,CACX,WAAYA,EAAM,OAAO,UAAU,KACrC,CACF,CAAC,CACH,CACF,CAEO,MAAM8oB,GAAqB,IAKzB,KAAK,IAAI,OAAO,YAAc,IAAK,GAAG,EC/jBxC,SAASqD,GAAyBnd,EAAc,CACrD,KAAM,CAAC0I,EAAQC,CAAS,KAAI,YAAS,EAAK,EACpCyU,EAA4B,IAC5B,CAAE,MAAAC,EAAO,MAAAjpB,EAAO,gBAAAkpB,EAAiB,kBAAAC,EAAmB,SAAAC,EAAU,SAAAC,EAAW,SAAU,EAAIzd,EAGvF5R,EAAUivB,GAAO,SAAWA,GAAO,MAAM,SAAW,GACpDK,EAAa,CAAChV,GAAUta,EAAQ,OAASgvB,EACzCpsB,KAAQ,MAAU,EAClBtB,EAAS,GAAUsB,CAAK,EAE9B,OACE,gBAAC,OAAI,UAAWtB,EAAO,6BACrB,gBAAC2L,GAAA,EAAK,CAAC,MAAAjH,EAAc,SAAAqpB,EAAoB,SAAAD,CAAA,EACvC,gBAAC,OAAI,UAAW9tB,EAAO,wBACpBguB,EACC,gBAAC7uB,EAAA,IACC,QAAQ,YACR,KAAK,KACL,QAAS,IAAM,CACb8Z,EAAU,EAAI,CAChB,GACD,cAED,EAEAva,EAEDkvB,GAAmBC,GAClB,gBAAC,OAAI,UAAW7tB,EAAO,wBACrB,gBAACb,EAAA,GAAM,CAAC,QAAQ,UAAU,KAAK,KAAK,QAAS0uB,CAAA,EAC1CD,CACH,CACF,CAEJ,CACF,CACF,CAEJ,CAEA,MAAM,GAAatsB,IACV,CACL,+BAA6B,OAAI,CAC/B,MAAO,MACP,SAAU,GAAGA,EAAM,YAAY,OAAO,EAAE,KACxC,OAAQ,QACV,CAAC,EACD,0BAAwB,OAAI,CAC1B,OAAQA,EAAM,QAAQ,CAAC,EACtB,OAAW,CACV,SAAU,WACV,MAAOA,EAAM,QAAQ,CAAC,EACtB,IAAKA,EAAM,QAAQ,CAAC,CACtB,CACF,CAAC,CACH,G,eCrCK,SAAS2sB,GAAgB3d,EAAc,CAC5C,KAAM,CAAE,MAAA/D,EAAO,SAAAE,EAAU,UAAAkV,EAAW,kBAAAuM,EAAmB,sBAAAC,EAAuB,qBAAAC,CAAqB,EAAI9d,EACjGhP,KAAQ,MAAU,EAClBtB,KAAS,MAAW,EAAS,EAC7BquB,EAAU,SAAS/sB,EAAM,QAAQ,CAAC,EAAE,MAAM,EAAG,EAAE,EAAG,EAAE,EACpDkL,EAAS,IAET8hB,EAAiBhe,EAAM,eAEvBie,KAAiB,OAA4BD,GAAgB,IAAI,EACvE,IAAIE,EAAYD,EAAiB,GAAGA,EAAe,IAAI,GAAK,MAExD,OAAoBD,EAAe,IAAI,IACzCE,EAAY,CACVA,EACA,oHACF,EACG,OAAO,WAAQ,EACf,KAAK,IAAI,GAGd,IAAIC,EAAqB,gBAAC,YAAMD,CAAU,EAE1C,OAAIF,EAAe,QAAU,MAAa,YACxCG,EACE,gCACGA,EACD,gBAACrtB,GAAA,EAAO,CAAC,QAAQ,aACf,gBAACC,GAAA,EAAI,CAAC,KAAK,cAAc,KAAK,KAAK,UAAWrB,EAAO,UAAW,cAAY,uBAAwB,EACtG,CACF,GAKF,gBAAC,OAAI,MAAO,CAAE,OAAAwM,CAAO,EAAG,UAAWxM,EAAO,kBACxC,gBAAC0uB,GAAA,GACC,mBAAoB,CAClB,MAAO,CAAC,KAAK,CACf,EACA,WAAW,QACX,aAAcJ,EAAe,OAAS,MAAa,KACnD,KAAMA,EAAe,KACrB,OAAA9hB,EACA,MAAOD,EAAQ8hB,EAAU,EACzB,cAAe/d,EAAM,cACrB,aAAc4d,EACd,SAAAzhB,EACA,YAAakV,EACb,mBAAoB,KAAmB,MACvC,sBAAAwM,EACA,aAAY,GACZ,aAAcC,EACd,SAAU9d,EAAM,SAChB,YAAaA,EAAM,YACrB,EACCme,GAAsB,gBAAC,OAAI,UAAWzuB,EAAO,oBAAqByuB,CAAmB,CACxF,CAEJ,CAEA,MAAM,GAAantB,IACV,CACL,sBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMLA,EAAM,WAAW,UAAU,QAAQ;AAAA,eACvCA,EAAM,OAAO,KAAK,SAAS;AAAA,MAEtC,oBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,MAMlB,aAAW;AAAA,eACAA,EAAM,OAAO,QAAQ,IAAI;AAAA,KAEtC,GC/GK,SAASqtB,GAAuBC,EAAkD,CAIvF,MAHI,CAACA,GAGD,CAACA,EAAS,OAAS,CAACA,EAAS,OACxB,IAGMA,EAAS,MAAQ,CAACA,EAAS,KAAK,EAAIA,EAAS,QAAU,CAAC,GAEzD,KAAMjB,IACF,GAAGA,EAAM,SAAWA,EAAM,MAAM,OAAO,IAAI,YAAY,GACxD,SAAS,SAAS,CAClC,CACH,CCmBO,MAAMkB,GAAsB,CAAC,CAClC,eAAAP,EACA,cAAA1hB,EACA,kBAAAshB,EACA,MAAA3hB,EACA,iBAAAuiB,EACA,sBAAAX,EACA,SAAArhB,EACA,UAAA6U,EACA,SAAAlV,EACA,QAAA+I,CACF,IAAa,CACX,KAAM,CACJ,WAAAuZ,EACA,aAAcC,EACd,aAAcC,EACd,YAAAC,CACF,KAAI,WAAQ,IAAM,CAChB,IAAIC,EAAe,KACnB,MAAMvC,EAAO0B,GAAgB,KAAK,OAAQlM,GAAqBA,EAAM,MAAM,YAAc,KAAU,WAAW,EACxG8M,EACJZ,GAAgB,KAAK,OAAQlM,GAAqBA,EAAM,MAAM,YAAc,KAAU,WAAW,GAAK,CAAC,EACnGgN,KAAS,WAAOxC,GAAQ,CAAC,EAAG,4BAA4B,EACxDyC,KAAU,YAAQD,EAAQ,4BAA4B,EACtDL,KAAa,cAAUM,EAAUnlB,GAAU,CAC/C,MAAMolB,KAAa,OAA0BplB,CAAK,EAClD,OAAAilB,EAAe,KAAK,IAAIA,EAAcG,EAAW,OAAO,EACjDA,EAAW,UACpB,CAAC,EACKC,KAAe,UAA0B,YAAQ,OAAO,OAAOR,CAAU,CAAC,CAAC,EACjF,MAAO,CACL,aAAAI,EACA,aAAAI,EACA,WAAAR,EACA,YAAAG,CACF,CACF,EAAG,CAACZ,CAAc,CAAC,EAEbtuB,KAAS,MAAW,EAAS,EAE7BwvB,EAAqB,OAAO,KAAKT,CAAU,EAAE,OAE7CU,EAAiB,OAAO,OAAOV,CAAU,EAAE,KAAMnC,GAAsB,CAC3E,MAAM8C,EAAYC,GAAmB/C,EAAMhgB,CAAa,EACxD,MAAO,IAAC,OAAoBggB,CAAI,GAAK8C,GAAaA,EAAY,CAChE,CAAC,EAEKE,EAAejB,GAAuBL,CAAc,EAEpDtN,EAAe,CACnB,KAAM,KAAK,IAAIpU,EAAc,KAAMqiB,EAA0B,IAAI,EACjE,GAAI,KAAK,IAAIriB,EAAc,GAAIqiB,EAA0B,EAAE,CAC7D,EAEA,OAAIX,GAAgB,QAAU,MAAa,QAClC,gBAAC,YAAK,YAAU,EACdsB,EAEP,gBAACnC,GAAA,CACC,MAAM,sCAEN,SAAS,OACT,gBAAgB,QAChB,kBAAmBqB,EACnB,SAAUtZ,CAAA,CACZ,EAEO8Y,GAAgB,QAAU,OAC5B,gBAACb,GAAwB,CAAC,MAAOa,EAAe,MAAO,MAAM,0CAA2C,GAG7GkB,IAAuB,EAEvB,gBAAC,OAAI,UAAWxvB,EAAO,gBACrB,gBAAC2L,GAAA,EAAK,CAAC,SAAS,OAAO,MAAM,4BAA2B,yEAExD,CACF,EAKF,gBAAC,OAAI,UAAW3L,EAAO,eACpB,OAAO,KAAK+uB,CAAU,EAAE,IAAI,CAAC7R,EAAM1N,IAAU,CAC5C,MAAM8e,EAAiB,CAAE,KAAMS,EAAW7R,CAAI,CAAE,EAChD,OACE,gBAAC+Q,GAAA,CACC,IAAKze,EACL,cAAewR,EACf,qBAAsBgO,EACtB,MAAAziB,EACA,eAAgB+hB,EAChB,kBAAAJ,EACA,SAAAzhB,EACA,UAAAkV,EACA,iBAAAmN,EAEA,sBAAuBU,EAAqB,EAAI,IAAM,CAAC,EAAIrB,EAC3D,SAAArhB,EACA,YAAAoiB,CAAA,CACF,CAEJ,CAAC,EACAO,GACC,gBAAC,OAAI,UAAWzvB,EAAO,oBACrB,gBAACutB,GAAA,EAAW,CAAC,MAAM,oBAAoB,YAAW,IAChD,gBAACpuB,EAAA,GAAM,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,YAAY,QAAS2vB,EAAkB,GAAG,eAAgB,EAClG,CACF,CAEJ,CAEJ,EAEM,GAAaxtB,IACV,CACL,iBAAe;AAAA;AAAA,MAGf,sBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOpB,eAAa;AAAA,mBACEA,EAAM,WAAW,UAAU,QAAQ;AAAA,eACvCA,EAAM,OAAO,KAAK,SAAS;AAAA,MAEtC,kBAAgB;AAAA;AAAA,mBAEDA,EAAM,YAAY,OAAO,EAAE;AAAA;AAAA,KAG5C,GAGF,SAASquB,GACPrB,EACAuB,EACoB,CACpB,MAAMC,EAAYxB,GAAkBA,EAAe,CAAC,GAAKA,EAAe,CAAC,EAAE,MAAM,QAAQ,cACzF,OAAOwB,GAAaD,EAAkB,KAAOA,EAAkB,KAAOC,EAAU,KAAOA,EAAU,IAAM,MACzG,C,gBC9CA,MAAMC,GAAgB,CACpB,KAAkB,KAClB,KAAkB,MAClB,KAAkB,QAClB,KAAkB,SACpB,EAEMC,GAA8B,IACR,KAAM,IAAI,IAAoB,IAC9B,QACjB,QAEF,OAGT,MAAMC,WAAqB,eAA4B,CAwBrD,YAAY3f,EAAc,CACxB,MAAMA,CAAK,EAtBb,mBAAa,aAA0B,EAGvC,WAAe,CACb,WAAY,KAAM,QAAQ,KAAc,WAAY,EAAK,EACzD,SAAU,KAAM,QAAQ,KAAc,SAAU,EAAI,EACpD,eAAgB,KAAM,QAAQ,KAAc,eAAgB,EAAI,EAChE,mBAAoB,KAAM,QAAQ,KAAc,mBAAoB,EAAK,EACzE,cAAe,KAAkB,KACjC,gBAAiB,CAAC,EAClB,cAAe,KAAM,IAAI,KAAc,aAAa,GAAK,KAAc,WACvE,WAAY,GACZ,gBAAiB,CAAC,EAClB,YAAa,GACb,YAAa,GACb,WAAY,OACZ,WAAY,OACZ,kBAAmB,KAAK,MAAM,YAAY,MAAM,mBAAqB0f,GAA4B,EACjG,cAAe,MACjB,EAkCA,sBAAoBE,GAAmD,CACrE,MAAMvtB,KAAsC,OAAS,EAAE,QAAQ,MAAM,KAAK,MAAM,SAAS,EACrFA,GAAO,gBACT,UACE,OAAiB,KAAK,MAAM,UAAW,OAAQ,CAC7C,GAAGA,EAAM,YAAY,KACrB,QAASutB,EAAe,SAAW,KAAK,MAAM,YAAY,MAAM,QAChE,kBAAmBA,EAAe,mBAAqB,KAAK,MAAM,kBAClE,eAAgBA,EAAe,eAC/B,MAAOA,EAAe,OAAS,KAAK,MAAM,YAAY,MAAM,KAC9D,CAAC,CACH,CAEJ,EAuBA,mBAAiBrR,GAAsB,CAChCA,EAGH,KAAK,MAAM,SAAS,QAClB,IAAI,MAAe,CACjB,MAAO,CACL,KAAMA,EAAI,WACZ,CACF,CAAC,CACH,EARA,KAAK,MAAM,SAAS,QAAQ,IAAI,KAAqB,CAUzD,EAEA,wBAAsBsR,GAAyB,CAC7C,KAAK,SAAS,CAAE,cAAeA,CAAK,CAAC,CACvC,EAEA,2BAAwB,IAAM,CAC5B,KAAK,SAAS,CAAE,WAAY,EAAK,CAAC,EAElC,KAAK,eAAiB,OAAO,WAAW,IAAM,CAC5C,KAAK,SAAUC,GAAc,CAC3B,MAAMC,EACJD,EAAU,gBAAkB,KAAc,WAAa,KAAc,UAAY,KAAc,WACjG,YAAM,IAAI,KAAc,cAAeC,CAAY,EAC5C,CAAE,cAAeA,CAAa,CACvC,CAAC,CACH,EAAG,CAAC,EACJ,KAAK,oBAAsB,OAAO,WAAW,IAAM,KAAK,SAAS,CAAE,WAAY,EAAM,CAAC,EAAG,GAAI,CAC/F,EAEA,sBAAmB,IAAM,CACvB,KAAK,SAAUD,IAAe,CAC5B,YAAa,CAACA,EAAU,WAC1B,EAAE,CACJ,EAEA,2BAAyBE,GAAyC,CAChE,KAAK,SAAS,KAAO,CACnB,kBAAmBA,CACrB,EAAE,EACF,MAAMC,EAAU,CACd,GAAG,KAAK,MAAM,YAAY,KAC1B,kBAAmBD,CACrB,EACA,KAAK,iBAAiBC,CAAO,KAE7B,MAAkB,6CAA8C,CAC9D,qBAAsBD,EACtB,eAAgB,KAAK,MAAM,gBAAkB,SAC/C,CAAC,CACH,EAEA,mBAAiBtM,GAAqC,IACpD,MAAkB,6CAA8C,CAC9D,kBAAmBA,EACnB,eAAgB,KAAK,MAAM,cAC7B,CAAC,EACD,KAAK,SAAS,CAAE,cAAAA,CAAc,CAAC,CACjC,EAEA,oBAAkBplB,GAA+C,CAC/D,KAAM,CAAE,OAAAoQ,CAAO,EAAIpQ,EACnB,GAAIoQ,EAAQ,CACV,MAAMwhB,EAAaxhB,EAAO,QAC1B,KAAK,SAAS,CACZ,WAAAwhB,CACF,CAAC,EACD,KAAM,IAAI,KAAc,WAAYA,CAAU,CAChD,CACF,EAEA,kBAAgB5xB,GAA+C,CAC7D,KAAM,CAAE,OAAAoQ,CAAO,EAAIpQ,EACnB,GAAIoQ,EAAQ,CACV,MAAMyhB,EAAWzhB,EAAO,QACxB,KAAK,SAAS,CACZ,SAAAyhB,CACF,CAAC,EACD,KAAM,IAAI,KAAc,SAAUA,CAAQ,CAC5C,CACF,EAEA,4BAA0B7xB,GAA+C,CACvE,KAAM,CAAE,OAAAoQ,CAAO,EAAIpQ,EACnB,GAAIoQ,EAAQ,CACV,MAAM0hB,EAAiB1hB,EAAO,QAC9B,KAAK,SAAS,CACZ,eAAA0hB,CACF,CAAC,EACD,KAAM,IAAI,KAAc,eAAgBA,CAAc,CACxD,CACF,EAEA,gCAA8B9xB,GAA+C,CAC3E,KAAM,CAAE,OAAAoQ,CAAO,EAAIpQ,EACnB,GAAIoQ,EAAQ,CACV,MAAM2hB,EAAqB3hB,EAAO,QAClC,KAAK,SAAS,CACZ,mBAAA2hB,CACF,CAAC,EACD,KAAM,IAAI,KAAc,mBAAoBA,CAAkB,CAChE,CACF,EAEA,sBAAoBC,GAA8B,CAChD,MAAMC,EAAkBD,EAAgB,IAAK3oB,MAAU,OAAmBA,CAAK,CAAC,EAChF,KAAK,SAAS,CAAE,gBAAA4oB,CAAgB,CAAC,CACnC,EAEA,gCAA8B5rB,GAAuB,CACnD,KAAK,MAAM,uBAAuB,CAACA,CAAS,KAC5C,MAAkB,gDAAiD,CACjE,eAAgB,KAAK,MAAM,eAC3B,KAAOA,EAAqB,QAAT,MACrB,CAAC,CACH,EAEA,iBAAerG,GAAgC,CAC7CA,EAAM,eAAe,EACjB,KAAK,MAAM,kBACb,KAAK,MAAM,gBAAgB,KAC3B,MAAkB,+CAAgD,CAChE,KAAM,QACN,eAAgB,KAAK,MAAM,cAC7B,CAAC,EAEL,EAEA,qBAAmBA,GAAgC,CACjDA,EAAM,eAAe,EACjB,KAAK,MAAM,gBACb,KAAK,MAAM,eAAe,CAE9B,EAEA,eAAaiF,GAAgB,CACb,KAAK,MAAM,gBAAgB,QAAQA,CAAG,IAEtC,IACZ,KAAK,SAAUlB,IACN,CACL,gBAAiBA,EAAM,gBAAgB,OAAOkB,CAAG,CACnD,EACD,CAEL,EAEA,eAAaA,GAAgB,CACb,KAAK,MAAM,gBAAgB,QAAQA,CAAG,EACxC,IACV,KAAK,SAAUlB,IACN,CACL,gBAAiBA,EAAM,gBAAgB,OAAQmuB,GAAMjtB,IAAQitB,CAAC,CAChE,EACD,CAEL,EAEA,yBAAsB,IAAM,CAC1B,KAAK,SAAUnuB,IACN,CACL,gBAAiB,CAAC,CACpB,EACD,CACH,EAEA,oBAAiB,IAAM,CACrB,KAAK,SAAS,CACZ,YAAa,GACb,WAAY,MACd,CAAC,CACH,EAEA,mBAAgB,CAACkc,EAAkBrJ,IAAwB,CAEzD,KAAK,SAAS,CACZ,YAAa,GACb,WAAYqJ,CACd,CAAC,KACD,MAAkB,0CAA2C,CAC3D,eAAgBA,EAAI,eACpB,UAAWA,EAAI,GACjB,CAAC,EACD,KAAK,eAAiB,IAAM,CAC1B,KAAK,SAAS,CACZ,YAAa,GACb,WAAY,MACd,CAAC,KACD,MAAkB,0CAA2C,CAC3D,eAAgBA,EAAI,eACpB,UAAWA,EAAI,GACjB,CAAC,EACDrJ,EAAQ,CACV,CACF,EA0CA,sBAAmB,MAAOqJ,GAAqB,CAK7C,GAAIA,EAAI,QAAU,OAChB,OAIF,MAAMkS,KAAW,SAAyB,OAAS,EAAE,QAAQ,MAAM,KAAK,MAAM,SAAS,CAAE,EACzFA,EAAS,YAAc,CACrB,GAAG,KAAK,MAAM,WACd,KAAM,CAAE,GAAIlS,EAAI,IAAK,kBAAmB,KAAK,MAAM,mBAAqBmR,GAA4B,CAAE,CACxG,EACAe,EAAS,MAAQ,KAAK,kBAAkBlS,CAAG,EAG3C,MAAMmS,KAAkB,OAAyBD,CAAQ,EACnDE,EAAU,kBAAkB,KAAK,GAAG,OAAO,SAAS,IAAI,EAAE,EAAG,CAAC,EAC9D1X,EAAM,MAAQ,UAAU,GAAG0X,CAAO,WAAY,CAAE,KAAMD,CAAgB,CAAC,EAC7E,QAAM,MAAuBzX,CAAG,KAEhC,MAAkB,yCAA0C,CAC1D,eAAgBsF,EAAI,gBAAkB,UACtC,UAAWA,EAAI,IACf,YAAaA,EAAI,QACnB,CAAC,CACH,EAEA,oBAAkBtO,GAAyB,CACzC,GAAIjO,EAAA,EAAO,eAAe,sBAAuB,CAC3C,KAAK,MAAM,gBACb,KAAK,WAAW,SAAS,eAAe,EACxC,KAAK,MAAM,cAAc,OAAO,CAC9B,SAAU,SACV,IAAK,KAAK,MAAM,cAAc,UAAYiO,EAAQ,sBAAsB,EAAE,IAAM,OAAO,YAAc,CACvG,CAAC,GAGH,MACF,CACA,KAAM,CAAE,cAAA4O,CAAc,EAAI,KAAK,MAE3BA,GACFA,EAAc,OAAO,CACnB,SAAU,SACV,IAAKA,EAAc,UAAY5O,EAAQ,sBAAsB,EAAE,IAAM,OAAO,YAAc,CAC5F,CAAC,CAEL,EAEA,8BAAwB,MAAYgU,GAC3B,CAAC,CAACA,EAAQ,KAAMU,GAAMA,EAAE,mBAAmB,CACnD,EAED,kBAAY,MAAW,CAACV,EAAwBP,IAAqC,CACnF,MAAMkN,KAAc,OAAa3M,EAASP,CAAa,EACjDC,EAAaiN,EAAY,OAAO,CAACC,EAAKtS,IAASA,EAAI,WAAasS,EAAMtS,EAAI,WAAasS,EAAM,CAAC,EACpG,MAAO,CAAE,YAAAD,EAAa,WAAAjN,CAAW,CACnC,CAAC,EAED,mBAAa,MAAW,CAACM,EAAwBsM,OACxC,OAAgBtM,EAAS,IAAI,IAAIsM,CAAe,CAAC,CACzD,EAED,8BAAwB,MAAYtM,GAAqE,CACvG,GAAI,CAACA,GAAWA,EAAQ,SAAW,EACjC,OAEF,MAAM1D,EAAiB0D,EAAQ,CAAC,EAAE,YAC5BzD,EAAgByD,EAAQA,EAAQ,OAAS,CAAC,EAAE,YAElD,OAAIzD,EAAgBD,EACX,CAAE,KAAMC,EAAe,GAAID,CAAe,EAG5C,CAAE,KAAMA,EAAgB,GAAIC,CAAc,CACnD,CAAC,EAED,qBAAkB,IAAM,CAClBxe,EAAA,EAAO,eAAe,uBACpB,KAAK,MAAM,eACb,KAAK,MAAM,cAAc,OAAO,CAC9B,SAAU,OACV,IAAK,CACP,CAAC,EAGL,KAAK,WAAW,SAAS,eAAe,CAC1C,EA1YE,KAAK,mBAAqBgO,EAAM,SAAS,aAAa,aAAc,CAAE,UAAW,EAAM,CAAC,CAC1F,CAEA,sBAAuB,CACjB,KAAK,gBACP,OAAO,aAAa,KAAK,cAAc,EAGrC,KAAK,qBACP,OAAO,aAAa,KAAK,mBAAmB,GAK5C,KAAK,OAAO,YAAY,MAAM,SAC9B,KAAK,OAAO,YAAY,MAAM,OAC9B,KAAK,OAAO,YAAY,MAAM,oBAE9B,UACE,OAAiB,KAAK,MAAM,UAAW,OAAQ,CAC7C,GAAG,KAAK,MAAM,YAAY,KAC1B,QAAS,OACT,kBAAmB,KAAK,MAAM,kBAC9B,eAAgB,OAChB,MAAO,MACT,CAAC,CACH,CAEJ,CAiBA,mBAAmB8gB,EAAkC,CAWnD,GAVI,KAAK,MAAM,SAAW,CAACA,EAAU,SAAW,KAAK,MAAM,YAAY,MAAM,KAE3E,OAAO,KAAK,MAAM,WAAW,KAAK,MAElC,UACE,OAAiB,KAAK,MAAM,UAAW,OAAQ,CAC7C,GAAG,KAAK,MAAM,UAChB,CAAC,CACH,GAEE,KAAK,MAAM,YAAY,MAAM,oBAAsBA,EAAU,YAAY,MAAM,kBAAmB,CACpG,MAAMC,EAAoB,KAAK,MAAM,YAAY,MAAM,mBAAqBrB,GAA4B,EAExG,KAAK,SAAS,CACZ,kBAAAqB,CACF,CAAC,EACD,KAAM,IAAI,KAAsBA,CAAiB,CACnD,CACF,CAwMA,eAAexS,EAAkByS,EAA4C,CAC3E,QAASzpB,EAAIypB,EAAQ,QAAQzS,CAAG,EAAI,EAAGhX,GAAK,EAAGA,IAC7C,GAAIypB,EAAQzpB,CAAC,EAAE,YAAcgX,EAAI,YAC/B,OAAOyS,EAAQzpB,CAAC,EAIpB,OAAO,IACT,CAEA,kBAAkBgX,EAAkB,CAClC,MAAM1H,EAAQ,CACZ,KAAM,IAAI,KAAK,KAAK,MAAM,cAAc,IAAI,EAAE,YAAY,EAC1D,GAAI,IAAI,KAAK,KAAK,MAAM,cAAc,EAAE,EAAE,YAAY,CACxD,EACA,GAAI,CAAC7U,EAAA,EAAO,eAAe,sBACzB,OAAO6U,EAKT,MAAMma,EAAU,KAAK,MAAM,QAAQ,OAAQC,GAAWA,EAAO,UAAU,QAAU1S,EAAI,UAAU,KAAK,EAC9F2S,EAAU,KAAK,eAAe3S,EAAKyS,CAAO,EAEhD,OAAIzS,EAAI,YAAc,KAAK,MAAM,cAAc,IAAM,CAAC2S,EAG7C,CACL,KAAM,IAAI,KAAK,KAAK,MAAM,cAAc,IAAI,EAAE,YAAY,EAE1D,GAAI,IAAI,KAAK3S,EAAI,YAAc,CAAC,EAAE,YAAY,CAChD,EAGK,CACL,KAAM,IAAI,KAAK,KAAK,MAAM,cAAc,IAAI,EAAE,YAAY,EAC1D,GAAI,IAAI,KAAK2S,EAAUA,EAAQ,YAAc,KAAK,MAAM,cAAc,EAAE,EAAE,YAAY,CACxF,CACF,CA8FA,QAAS,CACP,KAAM,CACJ,MAAAjlB,EACA,UAAAoV,EACA,QAAA4C,EACA,SAAAkN,EACA,kBAAAC,EACA,eAAApD,EACA,mBAAAqD,EACA,QAAA9V,EAAU,GACV,mBAAAwH,EACA,sBAAAC,EACA,SAAA7W,EACA,SAAAmlB,EACA,UAAAC,EACA,kBAAAC,EACA,cAAAllB,EACA,aAAAwK,EACA,cAAA2a,EACA,MAAAzwB,EACA,YAAA0wB,EACA,WAAA9L,EACA,kBAAAC,EACA,UAAA1lB,EACA,cAAAwxB,EACA,mBAAAC,EACA,mBAAAC,EACA,aAAAlT,CACF,EAAI,KAAK,MAEH,CACJ,WAAAuR,EACA,SAAAC,EACA,eAAAC,EACA,mBAAAC,EACA,cAAA3M,GACA,gBAAA6M,EACA,cAAAjP,EACA,WAAAwQ,EACA,gBAAAlO,EACA,YAAAG,EACA,YAAAgO,EACA,WAAAC,EACF,EAAI,KAAK,MAEHC,GAAcnI,GAAmB,EACjCpqB,EAAS,GAAUsB,EAAOovB,EAAgB6B,EAAW,EACrDC,GAAUjO,GAAWA,EAAQ,OAAS,EACtCH,GAAsB,KAAK,sBAAsBG,CAAO,EAExDkO,GAAe,KAAK,WAAWlO,EAASsM,CAAe,EACvD,CAAE,YAAAK,GAAa,WAAAjN,EAAW,EAAI,KAAK,UAAUwO,GAAczO,EAAa,EACxE0O,GAAkB,KAAK,sBAAsBnO,CAAO,EAEpDoO,GAAWd,EAAY,YAAY,qBAA4BA,CAAS,CAAC,GAAK,cAEpF,OACE,gCACGI,GAAiBK,IAChB,gBAACM,GAAA,GACC,KAAMP,EACN,IAAKC,GACL,QAAS,KAAK,eACd,cAAe,CAACzT,GAAKgU,KAAYZ,EAAcpT,GAAKyT,GAAYO,EAAO,EACvE,mBAAAV,EACA,mBAAAD,EACA,cAAAtQ,EACA,SAAAnV,CAAA,CACF,EAEF,gBAACW,GAAA,IACC,MAAM,cACN,YAAW,GACX,UAAW,CAACskB,EACZ,iBAAkB,KAAK,4BAEtBA,GACC,gBAAC7C,GAAA,CACC,cAAAjiB,EACA,MAAAL,EACA,eAAA+hB,EACA,kBAAmBlX,EACnB,SAAA3K,EACA,UAAAkV,EACA,iBAAkBgQ,EAClB,sBAAuB,KAAK,iBAC5B,SAAU,KAAK,mBACf,QAAS,IAAM,KAAK,2BAA2B,EAAI,EACrD,CAEJ,EACA,gBAACvkB,GAAA,IACC,WAAY,CACV9K,EAAA,EAAO,eAAe,8BACpB,KAAK,MAAM,oBAAsB,OAAS,KACxC,gBAAC8K,GAAA,GAAY,UAAZ,CAAsB,MAAM,WAAW,IAAI,KAC1C,gBAACiU,GAAY,CAAC,YAAY,qCAAsC,EAClE,EAEA,IACN,EACA,MAAO,OACP,QACE,gCACG/e,EAAA,EAAO,eAAe,+BACrB,gBAAC,OAAI,UAAWtC,EAAO,mBACrB,gBAAC8yB,GAAA,GACC,UAAW9yB,EAAO,uBAClB,QAAS,CACP,CACE,MAAO,OACP,MAAO,OACP,YAAa,oCACf,EACA,CACE,MAAO,QACP,MAAO,QACP,YAAa,qCACf,CACF,EACA,KAAK,KACL,MAAO,KAAK,MAAM,kBAClB,SAAU,KAAK,sBACjB,CACF,CAEJ,EAEF,aAAc6b,EAAU,MAAa,QAAU,MAAa,MAE5D,gBAAC,OAAI,UAAW7b,EAAO,kBACpB,KAAK,MAAM,oBAAsB,SAChC,gBAAC,OAAI,UAAWA,EAAO,YACrB,gBAAC+yB,GAAA,EAAc,KACb,gBAACxF,GAAA,EAAW,CAAC,MAAM,OAAO,UAAWvtB,EAAO,sBAAuB,YAAW,IAC5E,gBAAC,MACC,MAAOywB,EACP,SAAU,KAAK,aACf,UAAWzwB,EAAO,uBAClB,YAAW,GACX,GAAI,aAAaS,CAAS,GAC5B,CACF,EACA,gBAAC8sB,GAAA,EAAW,CAAC,MAAM,gBAAgB,UAAWvtB,EAAO,sBAAuB,YAAW,IACrF,gBAAC,MACC,MAAOwwB,EACP,SAAU,KAAK,eACf,UAAWxwB,EAAO,uBAClB,YAAW,GACX,GAAI,iBAAiBS,CAAS,GAChC,CACF,EACA,gBAAC8sB,GAAA,EAAW,CAAC,MAAM,aAAa,UAAWvtB,EAAO,sBAAuB,YAAW,IAClF,gBAAC,MACC,MAAO0wB,EACP,SAAU,KAAK,uBACf,UAAW1wB,EAAO,uBAClB,YAAW,GACX,GAAI,cAAcS,CAAS,GAC7B,CACF,EACA,gBAAC8sB,GAAA,EAAW,CAAC,MAAM,gBAAgB,UAAWvtB,EAAO,sBAAuB,YAAW,IACrF,gBAAC,MACC,MAAO2wB,EACP,SAAU,KAAK,2BACf,UAAW3wB,EAAO,uBAClB,YAAW,GACX,GAAI,YAAYS,CAAS,GAC3B,CACF,EACA,gBAAC8sB,GAAA,EAAW,CAAC,MAAM,gBAAgB,UAAWvtB,EAAO,sBAAuB,YAAW,IACrF,gBAAC8yB,GAAA,GACC,QAAS/C,GAAc,IAAKiD,KAAe,CACzC,SAAO,eAAWA,EAAS,EAC3B,MAAOA,GACP,YAAa,KAAqBA,EAAS,CAC7C,EAAE,EACF,MAAOhP,GACP,SAAU,KAAK,cACf,UAAWhkB,EAAO,aACpB,CACF,CACF,EAEA,gBAAC,WACC,gBAACutB,GAAA,GACC,MAAM,kBACN,UAAWvtB,EAAO,sBAClB,YAAW,GACX,SAAUoyB,GAAcvW,CAAA,EAExB,gBAACiX,GAAA,GACC,QAAS,CACP,CACE,MAAO,eACP,MAAO,KAAc,WACrB,YAAa,+BACf,EACA,CACE,MAAO,eACP,MAAO,KAAc,UACrB,YAAa,+BACf,CACF,EACA,MAAOlR,EACP,SAAU,KAAK,sBACf,UAAW5hB,EAAO,aACpB,CACF,CACF,CACF,EAEF,gBAAC,OAAI,IAAK,KAAK,WAAY,EAC3B,gBAAC8jB,GAAA,CACC,QAAAS,EACA,KAAMkN,GAAY,CAAC,EACnB,cAAAzN,GACA,WAAAC,GACA,oBAAAG,GACA,YAAAC,EACA,gBAAAH,EACA,iBAAkB,KAAK,iBACvB,oBAAqB,KAAK,oBAC5B,CACF,EACA,gBAAC,OACC,aAAW,MAAGlkB,EAAO,YAAa,KAAK,MAAM,oBAAsB,QAAUA,EAAO,UAAY,MAAS,GAExG,KAAK,MAAM,oBAAsB,SAAWwyB,IAC3C,gBAAC,OAAI,UAAWxyB,EAAO,QAAS,cAAY,gBAE1C,gBAAC0pB,GAAA,CACC,cAAe,KAAK,MAAM,cAC1B,MAAO,KAAK,MAAM,MAClB,UAAW,KAAK,MAAM,UACtB,SAAAjd,EACA,MAAOF,EAAQ,GACf,WAAY,KAAK,MAAM,YAAc,CAAC,EACtC,mBAAA8W,EACA,sBAAAC,EACA,WAAY,KAAK,MAAM,YAAY,KACnC,MAAAhiB,EACA,iBAAkB,KAAK,iBACvB,eAAgB,KAAK,MAAM,eAC7B,CACF,EAED,KAAK,MAAM,oBAAsB,QAAUkxB,IAC1C,gBAAC,OACC,UAAWlwB,EAAA,EAAO,eAAe,sBAAwBtC,EAAO,kBAAoBA,EAAO,QAC3F,cAAY,UACZ,IAAK,KAAK,oBAEV,gBAACgf,GAAA,CACC,QAAAnD,EACA,aAAAoD,EACA,MAAO,KAAK,MAAM,MAClB,SAAAxS,EACA,KAAM8X,EACN,cAAe,KAAK,MAAM,cAC1B,UAAW3C,CAAA,EAEX,gBAACqR,GAAA,GACC,QAAA1O,EACA,iBAAkB2M,GAClB,cAAAlN,GACA,mBAAAX,EACA,sBAAAC,EACA,kBAAAwO,EACA,mBAAAK,EACA,WAAA3B,EACA,SAAAC,EACA,iBAAkB,GAClB,YAAApM,EACA,eAAAqM,EACA,mBAAAC,EACA,SAAAlkB,EACA,cAAAslB,EACA,cAAAnQ,EACA,gBAAAsC,EACA,iBAAkB,KAAK,UACvB,iBAAkB,KAAK,UACvB,IAAK,MAAQ,QACb,cAAe,KAAK,cACpB,cAAe,KAAK,cACpB,iBAAkB,KAAK,iBACvB,iBAAkB,KAAK,MAAM,YAAY,MAAM,GAC/C,eAAgB,KAAK,eACrB,oBAAqB,KAAK,MAAM,oBAChC,kBAAmB,CAAC,CAAC,KAAK,MAAM,cAChC,mBAAoB,KAAK,MAAM,mBAC/B,sBAAuB,KAAK,MAAM,sBACpC,CACF,CACF,EAED,CAACrI,GAAW,CAAC2W,IAAW,CAACZ,GACxB,gBAAC,OAAI,UAAW5xB,EAAO,SACrB,gBAAC,OAAI,UAAWA,EAAO,QAAQ,iBAE7B,gBAACb,EAAA,GAAM,CAAC,KAAK,KAAK,QAAQ,YAAY,QAAS,KAAK,aAAa,qBAEjE,CACF,CACF,EAEDyyB,GACC,gBAAC,OAAI,UAAW5xB,EAAO,SACrB,gBAAC,OAAI,UAAWA,EAAO,QACrB,gBAAC,YAAM2yB,EAAS,EAChB,gBAACxzB,EAAA,GAAM,CAAC,KAAK,KAAK,QAAQ,YAAY,QAAS,KAAK,iBAAiB,WAErE,CACF,CACF,EAEF,gBAAC,IACC,cAAAyiB,EACA,aAAc8Q,IAAmB9lB,EACjC,cAAAA,EACA,SAAAH,EACA,aAAA2K,EACA,QAAAyE,EACA,QAASmW,GAAe,CAAC,EACzB,gBAAiB,KAAK,gBACtB,kBAAA7L,EACA,WAAAD,CAAA,CACF,CACF,CACF,CACF,CAEJ,CACF,CAEO,MAAMgN,MAAO,MAAWjD,EAAY,EAErC,GAAY,CAAC3uB,EAAsBovB,EAAyB6B,KACzD,CACL,UAAQ,OAAI,CACV,QAAS,CACP,WAAY,OACd,CACF,CAAC,EACD,cAAY,OAAI,CACd,QAAS,OACT,eAAgB,gBAChB,WAAY,WACZ,SAAU,OACV,gBAAiBjxB,EAAM,OAAO,WAAW,QACzC,QAAS,GAAGA,EAAM,QAAQ,CAAC,CAAC,IAAIA,EAAM,QAAQ,CAAC,CAAC,GAChD,aAAcA,EAAM,MAAM,OAAO,QACjC,OAAQ,GAAGA,EAAM,QAAQ,EAAG,EAAG,CAAC,CAAC,GACjC,OAAQ,aAAaA,EAAM,OAAO,OAAO,MAAM,EACjD,CAAC,EACD,gBAAc,OAAI,CAChB,OAAQ,GAAGA,EAAM,QAAQ,GAAK,EAAG,EAAG,CAAC,CAAC,EACxC,CAAC,EACD,yBAAuB,OAAI,CACzB,YAAa,CACX,YAAa,GACf,CACF,CAAC,EACD,0BAAwB,OAAI,CAC1B,QAAS,KAAKA,EAAM,QAAQ,CAAC,CAAC,MAChC,CAAC,EACD,gBAAc,OAAI,CAChB,OAAQ,GACV,CAAC,EACD,eAAa,OAAI,CACf,QAAS,OACT,cAAe,MACf,eAAgB,eAClB,CAAC,EACD,aAAW,OAAI,CACb,UAAW,GAAGixB,CAAW,IAC3B,CAAC,EACD,qBAAmB,OAAI,CACrB,UAAW,SACX,MAAO,OACP,UAAW,MACb,CAAC,EACD,WAAS,OAAI,CACX,UAAW,GAAG7B,EAAiB,QAAU,QAAQ,GACjD,UAAW,UACX,MAAO,MACT,CAAC,EACD,qBAAmB,OAAI,CACrB,QAAS,OACT,KAAM,IACN,eAAgB,eAClB,CAAC,EACD,0BAAwB,OAAI,CAC1B,OAAQ,SAASpvB,EAAM,QAAQ,CAAC,CAAC,EACnC,CAAC,EACD,oBAAkB,OAAI,CACpB,SAAU,UACV,GAAIgB,EAAA,EAAO,eAAe,uBAAyB,CAAE,aAAc,KAAM,CAC3E,CAAC,CACH,GCr8BI6wB,GAAqB,IAIrBC,GAAkB,IAElB,MAAY,MAAW,KACpB,CACL,aAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOX,mBAAiB;AAAA;AAAA;AAAA,4BAGOD,EAAkB,eAAeC,EAAe;AAAA,MAExE,YAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOV,kBAAgB;AAAA;AAAA;AAAA,4BAGQD,EAAkB,eAAeC,EAAe;AAAA,KAE1E,EACD,EAWM,SAASC,GAAwB/iB,EAAc,CACpD,KAAM,CAAE,QAAAgjB,EAAS,SAAAvwB,CAAS,EAAIuN,EACxBtQ,EAAS,GAAU,EACzB,OACE,gBAAC6Y,GAAA,GACC,GAAIya,EACJ,aAAc,GACd,cAAe,GACf,QAASH,GAAqBC,GAC9B,WAAY,CACV,MAAOpzB,EAAO,UACd,YAAaA,EAAO,gBACpB,KAAMA,EAAO,SACb,WAAYA,EAAO,cACrB,GAEC+C,CACH,CAEJ,CCKA,MAAMwwB,WAAsB,eAAsD,CAAlF,kCACE,WAA4B,CAC1B,YAAa,CAAC,CAChB,EA6DA,kBAAgB3mB,GAAqC,CACnD,KAAM,CAAE,UAAAnM,EAAW,gBAAA+yB,CAAgB,EAAI,KAAK,MAC5CA,EAAgB,CAAE,UAAA/yB,EAAW,cAAAmM,CAAc,CAAC,CAC9C,EAEA,kBAAgBA,GAAqC,CACnD,KAAM,CAAE,UAAAnM,EAAW,aAAAwe,CAAa,EAAI,KAAK,MACzCA,EAAa,CAAE,UAAAxe,EAAW,cAAAmM,CAAc,CAAC,CAC3C,EAcA,sBAAmB,MACjBiS,EACA4U,EACAZ,IACoC,CACpC,KAAM,CAAE,YAAAb,CAAY,EAAI,KAAK,MAE7B,GAAI,CAACyB,EAAQ,UAAU,OAAS,CAAC,KAAK,MAAM,YAAYA,EAAQ,UAAU,KAAK,EAC7E,OAAO,QAAQ,QAAQ,CAAC,CAAC,EAG3B,MAAMC,EAAK,KAAK,MAAM,YAAYD,EAAQ,UAAU,KAAK,EACzD,GAAI,IAAC,MAAsBC,CAAE,EAC3B,OAAO,QAAQ,QAAQ,CAAC,CAAC,EAG3B,MAAM3xB,EAAQ,KAAK,SAASiwB,EAAayB,EAASC,CAAE,EACpD,OAAO3xB,EAAQ2xB,EAAG,iBAAiB7U,EAAKgU,EAAS9wB,CAAK,EAAI,QAAQ,QAAQ,CAAC,CAAC,CAC9E,EAEA,2BAAwB,MACtB8c,EACAgU,EACAc,EAAe,KACe,CAC9B,KAAM,CAAE,YAAA3B,CAAY,EAAI,KAAK,MAE7B,GAAI,CAACnT,EAAI,UAAU,OAAS,CAAC,KAAK,MAAM,YAAYA,EAAI,UAAU,KAAK,EACrE,OAAO,QAAQ,QAAQ,IAAI,EAG7B,MAAM6U,EAAK,KAAK,MAAM,YAAY7U,EAAI,UAAU,KAAK,EACrD,GAAI,IAAC,MAAsB6U,CAAE,EAC3B,OAAO,QAAQ,QAAQ,IAAI,EAG7B,MAAM3xB,EAAQ,KAAK,SAASiwB,EAAanT,EAAK6U,CAAE,EAChD,OAAO3xB,GAAS2xB,EAAG,sBACfA,EAAG,sBAAsB7U,EAAKgU,EAAS9wB,EAAO4xB,CAAY,EAC1D,QAAQ,QAAQ,IAAI,CAC1B,EAEA,wBAAqB,CAAC9U,EAAkB+U,IAAkD,CACxF,KAAM,CAAE,YAAA5B,CAAY,EAAI,KAAK,MAE7B,GAAI,CAACnT,EAAI,UAAU,OAAS,CAAC,KAAK,MAAM,YAAYA,EAAI,UAAU,KAAK,EACrE,OAAO,+BAAE,EAGX,MAAM6U,EAAK,KAAK,MAAM,YAAY7U,EAAI,UAAU,KAAK,EACrD,GAAI,IAAC,MAAsB6U,CAAE,EAC3B,OAAO,+BAAE,EAGX,MAAM3xB,EAAQ,KAAK,SAASiwB,EAAanT,EAAK6U,CAAE,EAChD,OAAO3xB,MAAS,MAAwB2xB,CAAE,GAAKA,EAAG,mBAChDA,EAAG,mBAAmB7U,EAAK+U,EAAiB7xB,CAAK,EAEjD,+BAAE,CAEN,EAEA,uBAAqB8c,GACf,CAACA,GAAK,UAAU,OAAS,CAAC,KAAK,MAAM,YAAYA,EAAI,UAAU,KAAK,EAC/D,MAEF,MAAsB,KAAK,MAAM,YAAYA,EAAI,UAAU,KAAK,CAAC,EAG1E,mBAAgB,CAAC7U,EAAc6pB,EAAkBhS,IAAyB,CACxE,KAAM,CAAE,YAAAhV,EAAa,MAAAsK,CAAM,EAAI,KAAK,MACpC,SAAO,OAAwB,CAAE,MAAAnN,EAAO,SAAA6pB,EAAU,YAAAhnB,EAAa,MAAAsK,EAAO,UAAA0K,CAAU,CAAC,CACnF,EAEA,+BAA4B,IACnB,OAAO,OAAO,KAAK,MAAM,WAAW,EAAE,KAC1C6R,GAAOA,GAAI,gBAAe,MAA4BA,CAAE,MAAK,MAAiCA,CAAE,CACnG,EAGF,0BAAuB,IACd,OAAO,OAAO,KAAK,MAAM,WAAW,EAAE,KAC1CA,MAAO,MAA4BA,CAAE,GAAKA,GAAI,+BAA+B,EAAE,SAAS,mBAAmB,CAC9G,EAGF,6BAA0B,IACjB,OAAO,OAAO,KAAK,MAAM,WAAW,EAAE,KAC1CA,MAAO,MAA4BA,CAAE,GAAKA,GAAI,+BAA+B,EAAE,SAAS,uBAAuB,CAClH,EAGF,uBAAoB,IAAM,CACxB,KAAK,MAAM,kBAAkB,KAAK,MAAM,SAAS,CACnD,EAEA,gBAAa,IAAM,CACjB,KAAK,MAAM,WAAW,KAAK,MAAM,SAAS,CAC5C,EAnLA,mBAAoB,CAClB,KAAK,0BAA0B,CACjC,CAEA,mBAAmBtC,EAA+B,CAC5CA,EAAU,cAAgB,KAAK,MAAM,aACvC,KAAK,0BAA0B,CAEnC,CAEQ,2BAA4B,CAClC,KAAM,CAAE,YAAAY,EAAa,mBAAApW,CAAmB,EAAI,KAAK,MACjD,GAAI,CAACoW,GAAe,CAACpW,EACnB,OAGF,MAAMkY,EAAkD,CAAC,EAGzD,GAAIlY,EAAmB,MAAQ,MAAuB,CACpDoW,EAAY,QAAQ,CAAC,CAAE,MAAA+B,CAAM,IAAM,CACjCD,EAAYC,CAAK,EAAInY,CACvB,CAAC,EACD,KAAK,SAAS,CAAE,YAAAkY,CAAY,CAAC,EAC7B,MACF,CAGA,MAAME,EAAmE,CAAC,EAC1E,UAAWjyB,KAASiwB,EAAa,CAC/B,GAAI,CAACjwB,EAAM,WACT,UAEgB,CAAC+xB,EAAY/xB,EAAM,KAAK,GAAK+xB,EAAY/xB,EAAM,KAAK,EAAE,MAAQA,EAAM,WAAW,MAE/FiyB,EAAW,KACT,IAAI,QAASC,GAAY,IACvB,MAAiB,EACd,IAAIlyB,EAAM,UAAU,EACpB,KAAM2xB,GAAO,CACZO,EAAQ,CAAE,GAAAP,EAAI,MAAO3xB,EAAM,KAAM,CAAC,CACpC,CAAC,CACL,CAAC,CACH,CAEJ,CAEKiyB,EAAW,QAIhB,QAAQ,IAAIA,CAAU,EAAE,KAAME,GAAc,CAC1CA,EAAU,QAAQ,CAAC,CAAE,GAAAR,EAAI,MAAAK,CAAM,IAAM,CACnCD,EAAYC,CAAK,EAAIL,CACvB,CAAC,EACD,KAAK,SAAS,CAAE,YAAAI,CAAY,CAAC,CAC/B,CAAC,CACH,CAYQ,SACN9B,EACAnT,EACAjD,EACA,CAGA,OAAQoW,GAAe,CAAC,GAAG,KACxBmC,GAAMA,EAAE,QAAUtV,EAAI,UAAU,OAASsV,EAAE,YAAc,MAAQA,EAAE,WAAW,OAASvY,EAAmB,IAC7G,CACF,CAsGA,QAAS,CACP,KAAM,CACJ,QAAAC,EACA,aAAAuY,EACA,QAAA7P,EACA,SAAAkN,EACA,WAAA4C,EACA,YAAArC,EACA,2BAAAsC,EACA,6BAAAC,EACA,mBAAAlR,EACA,sBAAAC,EACA,gBAAAkR,EACA,eAAAC,EACA,cAAA7nB,EACA,SAAAH,EACA,aAAAuU,EACA,SAAA4Q,EACA,MAAAza,EACA,MAAA5K,EACA,YAAAM,EACA,OAAA0L,EACA,UAAA9X,EACA,WAAAi0B,EACA,cAAAvV,CACF,EAAI,KAAK,MAET,OAAKoF,EAKH,gCACE,gBAAC8O,GAAuB,CAAC,QAAS9a,CAAA,EAChC,gBAAC3M,GAAA,EAAQ,CAAC,MAAM,OAAO,QAAS,GAAO,OAAM,IAC3C,gBAAC0P,GAAgB,CAAC,UAAA7a,CAAA,EACd8a,GACA,gBAACwD,GAAA,CACC,QAAAwF,EACA,SAAA9X,EACA,SAAU8O,EAAS,KACnB,SAAU,KAAK,MAAM,SACrB,QAASA,EAAS,MAClB,SAAUA,EAAS,OACnB,QAASA,EAAS,MAClB,eAAgB,KAAK,MAAM,eAC7B,CAEJ,CACF,CACF,EACA,gBAAC8X,GAAuB,CAAC,QAAS,CAAC9a,CAAA,EACjC,gBAAC2a,GAAA,CACC,UAAAzyB,EACA,eAAgB,KAAK,MAAM,oBAAoB,KAC/C,QAAA8jB,EACA,SAAAkN,EACA,WAAA4C,EACA,kBAAmBK,EAAW,QAC9B,uBAAyBj2B,GACvB81B,EAA6B9zB,EAAWhC,EAAS,KAAuB,UAAU,EAEpF,eAAgBi2B,EAAW,KAC3B,YAAA1C,EACA,MAAAzlB,EACA,UAAWM,EACX,QAAAgP,EACA,aAAAuY,EACA,mBAAoB,IAAME,EAA2B7zB,EAAW,KAAuB,UAAU,EACjG,aAAc,KAAK,aACnB,aAAc,KAAK,aACnB,mBAAoB,KAAK,0BAA0B,EAAI4iB,EAAqB,OAC5E,sBAAuB,KAAK,0BAA0B,EAAIC,EAAwB,OAClF,gBAAAkR,EACA,eAAAC,EACA,cAAA7nB,EACA,aAAAoU,EACA,SAAAvU,EACA,SAAAmlB,EACA,UAAWza,EAAM,IACjB,kBAAmB,KAAK,kBACxB,cAAe,KAAK,iBACpB,mBAAoB,KAAK,sBACzB,mBAAoB,KAAK,mBACzB,cAAe,KAAK,cACpB,kBAAmB,KAAK,kBACxB,WAAY,KAAK,WACjB,SAAU,KAAK,MAAM,SACrB,WAAY,KAAK,MAAM,WACvB,WAAY,KAAK,MAAM,WACvB,cAAAgI,EACA,oBAAqB,KAAK,0BAA0B,EAAI,KAAK,MAAM,oBAAsB,OACzF,MAAAhI,EACA,mBAAoB,KAAK,qBAAqB,EAAI,KAAK,MAAM,mBAAqB,OAClF,sBAAuB,KAAK,wBAAwB,EAAI,KAAK,MAAM,sBAAwB,OAC7F,CACF,CACF,EArEO,IAuEX,CACF,CAEA,SAAS,GAAgBxU,EAAmB,CAAE,UAAAlC,CAAU,EAA0B,CAEhF,MAAMmD,EADUjB,EAAM,QACiB,MAAMlC,CAAS,EAChD,CACJ,WAAAk0B,EACA,SAAA/C,EACA,mBAAAhW,EACA,OAAArD,EACA,SAAAC,EACA,eAAAoc,EACA,MAAAzd,EACA,cAAAvK,EACA,qBAAAioB,CACF,EAAIjxB,EACEiY,KAAU,MAAuBpb,CAAS,EAAEkC,CAAK,EACjDknB,EAAajmB,EAAK,YAClB6I,KAAW,MAAY9J,EAAM,IAAI,EACjC+xB,EAAaG,EAAqB,KAAuB,UAAU,EAEzE,MAAO,CACL,QAAAhZ,EACA,QAAS8Y,GAAY,KACrB,SAAUA,GAAY,KACtB,WAAYA,GAAY,OACxB,YAAaA,GAAY,QACzB,aAAcA,GAAY,aAC1B,SAAA/C,EACA,SAAAnlB,EACA,mBAAAmP,EACA,OAAArD,EACA,SAAAC,EACA,eAAAoc,EACA,MAAAzd,EACA,cAAAvK,EACA,WAAA8nB,EACA,WAAA7K,EACA,WAAYjmB,EAAK,cAAc,UACjC,CACF,CAEA,MAAM,GAAqB,CACzB,gBAAe,MACf,aAAY,MACZ,kBAAiB,KACjB,WAAU,KACV,2BAA0B,KAC1B,6BAA4B,IAC9B,EAKA,MAHkB,YAAQ,GAAiB,EAAkB,EAGpC2vB,EAAa,EC3X/B,SAASuB,GAAgBxkB,EAAc,CAC5C,KAAM,CAAE,cAAAmF,EAAe,SAAAhJ,EAAU,QAAAhO,EAAS,qBAAAs2B,EAAsB,mBAAAnZ,EAAoB,QAAAd,EAAS,UAAA6G,CAAU,EAAIrR,EAErGtQ,KAAS,MAAW,EAAS,EAC7Bg1B,EAA8Bhc,GAAoB,CACtD+b,EAAqB/b,CAAM,KAC3B,MAAkB,6CAA8C,CAC9D,eAAgB4C,GAAoB,MAAQ,UAC5C,KAAM5C,EAAS,OAAS,OAC1B,CAAC,CACH,EAEMic,EAAwB,IAAM,CAIlC,GAHI,CAACrZ,GAGD,IAAC,MAA6BA,EAAoB,KAAuB,UAAU,EACrF,OAAO,KAGT,MAAMsZ,EAAmBpa,EACtB,IAAK/Y,GAAU6Z,EAAmB,sBAAsB,CAAE,KAAM,KAAuB,UAAW,EAAG7Z,CAAK,CAAC,EAC3G,OAAQA,GAA8B,CAAC,CAACA,CAAK,EAEhD,GAAI,CAACmzB,EAAiB,OACpB,OAAO,KAGT,MAAMC,EAAc,IAAM,CACxBxT,EAAU,CAAE,QAASuT,EAAkB,cAAetZ,EAAmB,GAAI,CAAC,KAC9E,MAAkB,mDAAoD,CACpE,eAAgBA,GAAoB,MAAQ,UAC5C,aAAcsZ,EAAiB,MACjC,CAAC,CACH,EAEA,OACE,gBAAC/1B,EAAA,GAAM,CAAC,KAAK,KAAK,UAAWa,EAAO,iBAAkB,QAASm1B,CAAA,EAAa,yBAE5E,CAEJ,EAEA,IAAIC,EAEJ,GAAI3f,IAAkB,OACpB2f,EAAyB,aAChB3f,EAAc,QAAU,OACjC2f,EACE,gBAAC3H,GAAwB,CAAC,MAAOhY,EAAc,MAAO,MAAM,2CAA4C,WAEjGA,EAAc,QAAU,MAAa,QAC9C2f,EAAyB,gBAAC,YAAK,2BAAyB,UAC/C3f,EAAc,KAAK,SAAW,GAAKA,EAAc,KAAK,MAAO2M,GAAUA,EAAM,SAAW,CAAC,EAClGgT,EAAyB,gBAAC,YAAK,sBAAoB,MAC9C,CACL,MAAMC,KAAO,OAAqB5f,EAAc,IAAI,EACpD2f,EACE,gCACE,gBAACH,EAAA,IAAsB,EACvB,gBAAC,OAAI,UAAWj1B,EAAO,cACrB,gBAACizB,GAAA,GACC,QAASoC,EAAK,KACd,cAAe,KAAkB,KACjC,WAAY,KAAM,QAAQ,KAAc,WAAY,EAAK,EACzD,SAAU,KAAM,QAAQ,KAAc,SAAU,EAAI,EACpD,eAAgB,KAAM,QAAQ,KAAc,eAAgB,EAAI,EAChE,mBAAoB,KAAM,QAAQ,KAAc,mBAAoB,EAAK,EACzE,SAAA5oB,EACA,iBAAkB,GACpB,CACF,CACF,CAEJ,CAEA,OAAOgJ,GAAe,QAAU,MAAa,WAC3C,gBAAC7J,GAAA,GACC,MACE,gBAAC,WAAI,cAEH,gBAACxK,GAAA,EAAO,CAAC,QAAQ,yDACf,gBAACC,GAAA,EAAI,CAAC,KAAK,cAAc,UAAWrB,EAAO,YAAa,CAC1D,CACF,EAEF,OAAQvB,EACR,YAAa,GACb,SAAUu2B,CAAA,EAETI,CACH,EACE,IACN,CAEA,MAAM,GAAa9zB,IACV,CACL,oBAAkB;AAAA;AAAA,aAETA,EAAM,QAAQ,CAAC,CAAC;AAAA,eACdA,EAAM,QAAQ,CAAC,CAAC;AAAA,MAE3B,gBAAc;AAAA;AAAA,MAGd,eAAa;AAAA,qBACIA,EAAM,QAAQ,CAAC,CAAC;AAAA,KAEnC,GCxIWg0B,GAAS,IAAM,CAC1B,MAAMC,KAAM,MAAW,EAAS,EAChC,OACE,gCACE,gBAAC9tB,GAAA,EAAc,CAAC,cAAY,kBAAkB,UAAW8tB,EAAI,SAC3D,gBAAC,QAAK,UAAWA,EAAI,SAAU,SAAU,CAC3C,CACF,CAEJ,EAEM,GAAaj0B,IAA0B,CAC3C,WAAS,OAAI,CACX,MAAO,eACP,QAASA,EAAM,QAAQ,CAAC,EACxB,WAAYA,EAAM,OAAO,WAAW,QACpC,aAAcA,EAAM,MAAM,OAAO,QACjC,QAAS,OACT,cAAe,SACf,WAAY,SACZ,eAAgB,SAChB,SAAU,CACZ,CAAC,EACD,WAAS,OAAI,CACX,SAAUA,EAAM,WAAW,GAAG,SAC9B,QAASA,EAAM,QAAQ,CAAC,EACxB,MAAOA,EAAM,OAAO,KAAK,QAC3B,CAAC,CACH,G,gBC1BA,SAASk0B,GAAcl0B,EAAsB,CAC3C,SAAO,OAAI,CACT,SAAU,GAAGA,EAAM,YAAY,OAAO,EAAE,KACxC,UAAWA,EAAM,QAAQ,CAAC,EAC1B,UAAW,QACb,CAAC,CACH,CAEO,MAAMm0B,GAA2B,IAAM,CAC5C,MAAMC,KAAa,MAAWF,EAAa,EAErCG,EACJ,MAAW,cAAc,sBAAoB,iBAAiB,GAC9D,MAAW,cAAc,sBAAoB,gBAAgB,EAEzDj3B,EACJ,uGACIk3B,EACJ,gCACE,gBAACv0B,GAAA,EAAI,CAAC,KAAK,QAAS,GACpB,gCAAE,yEAAuE,EACzE,gBAAC,KACC,KAAK,uFACL,OAAO,SACP,IAAI,aACJ,UAAU,aACX,YAED,CACF,EAGIw0B,EACJ,gBAAC,KAAU,CAAC,KAAK,KAAK,KAAK,kBAAkB,KAAK,WAAW,SAAU,CAACF,CAAA,EAAqB,iBAE7F,EAGF,OAAO,gBAACG,GAAA,EAAgB,CAAC,oBAAqBD,EAAY,UAAWH,EAAY,OAAAE,EAAgB,QAAAl3B,CAAA,CAAkB,CACrH,E,wCCjCA,MAAM,GAAa4C,IAA0B,CAC3C,eAAa;AAAA;AAAA;AAAA;AAAA,iBAIEA,EAAM,WAAW,UAAU,QAAQ;AAAA,aACvCA,EAAM,OAAO,KAAK,SAAS;AAAA,GAExC,GAcO,SAASy0B,GAA8BzlB,EAAc,CAC1D,KAAM,CAAE,WAAAuF,EAAY,MAAAsB,EAAO,YAAAtK,EAAa,cAAAmpB,EAAe,eAAAC,CAAe,EAAI3lB,EACpE4lB,KAAW,OAAS/e,EAAOtK,CAAW,EACtCvL,KAAQ,MAAU,EAClBtB,KAAS,MAAW,EAAS,EAK7B2M,KAAS,OAAoB,CACjC,YAAa,CACX,SAAU,CAAC,EACX,UAAW,CAAC,CACd,EACA,KAAMkJ,EAEN,iBAAmB3L,GAAUA,EAC7B,MAAA5I,CACF,CAAC,EAEK,CAAE,MAAA60B,CAAM,KAAIC,GAAA,GAAoBzpB,CAAM,EACtC,CAAC1H,EAAWG,CAAe,KAAIY,GAAA,GAAU,EAAI,EAE7CqwB,EAAU,IAAM,CACpBjxB,EAAgB,KAChB,MAAkB,0CAA2C,CAC3D,eAAA6wB,EACA,gBAAiB3zB,EAAA,EAAO,UAAU,QAClC,WAAY,CAAC,IACf,CAAC,CACH,EAGM,CAAE,OAAQg0B,CAAa,KAAIC,GAAA,GAAc,EACzCC,KAAe,UAAuB,IAAI,EAC1C,CAACnvB,EAAKovB,CAAM,KAAI,YAAS,GAAG,KAClC,aAAU,IAAM,CACd,GAAID,EAAa,QAAS,CACxB,KAAM,CAAE,IAAAnvB,CAAI,EAAImvB,EAAa,QAAQ,sBAAsB,EAC3DC,EAAOpvB,CAAG,CACZ,CACF,EAAG,CAACmvB,CAAY,CAAC,EACjB,MAAMhqB,EAAS8pB,EAAejvB,EAAM,GAE9BqvB,EACJV,GAAiBG,EAAM,CAAC,GAAG,OAAS,IAClC,gBAAC,QAAK,UAAWn2B,EAAO,aAAa,KAAGm2B,EAAM,CAAC,EAAE,OAAO,8BAA4B,EAClF,KAEN,OACE,gBAAC/oB,GAAA,IACC,MAAO,aACP,WAAYspB,EAEZ,YAAa,CAAC,CAACV,EACf,UAAWA,EAAgB/wB,EAAY,GACvC,iBAAkB+wB,EAAgBK,EAAU,QAE5C,gBAAC,OACC,IAAKG,EACL,MACER,EACI,CAAE,OAAQ,GAAI,EACd,CACE,UAAW,IACX,OAAAxpB,CACF,GAGN,gBAACmqB,GAAA,EAAS,CAAC,WAAYhqB,EAAQ,SAAAupB,CAAA,CAAoB,CACrD,CACF,CAEJ,CAEA,SAAS,GAAgBvzB,EAAmB,CAAE,UAAAlC,CAAU,EAAa,CACnE,MAAO,CACL,MAAOkC,EAAM,QAAQ,MAAMlC,CAAS,EAAG,KACzC,CACF,CAGO,MAAMm2B,MADK,YAAQ,GAAiB,CAAC,CAAC,EACDb,EAA6B,E,mDClGzE,MAAMc,GAAiBp2B,GAAsB,CAC3C,MAAMq2B,KAAsB,MAAuBr2B,CAAS,EAC5D,MAAO,CACL,cAAY,OAAeq2B,EAAsB/oB,GAAMA,EAAG,OAAO,EACjE,oBAAkB,OAAe+oB,EAAsB/oB,GAAMA,EAAG,aAAa,EAC7E,cAAY,OAAe+oB,EAAsB/oB,GAAMA,EAAG,OAAO,EACjE,kBAAgB,OAAe+oB,EAAsB/oB,GAAMA,EAAG,WAAW,EACzE,iCAA+B,OAC7B+oB,EACC/oB,MAAM,OAAiB,EAAE,oBAAoBA,EAAG,oBAAoB,GAAG,CAC1E,CACF,CACF,EAEagpB,GAAY,CAAC,CAAE,UAAAt2B,CAAU,IAAa,CACjD,MAAMV,KAAW,eAAY,EACvB,CAAE,WAAAi3B,EAAY,8BAAAC,EAA+B,iBAAAC,EAAkB,WAAAC,EAAY,eAAAC,CAAe,KAAI,WAClG,IAAMP,GAAcp2B,CAAS,EAC7B,CAACA,CAAS,CACZ,EAEMqa,KAAU,eAAYkc,CAAU,EAChC5a,KAAa,eAAY6a,CAA6B,EACtDxhB,KAAgB,eAAYyhB,CAAgB,EAC5CG,KAAU,eAAYF,CAAU,EAChCG,KAAc,eAAYF,CAAc,EAExCG,KAAe,eAAY,IAAM,CACrCx3B,KAAS,MAAW,CAAE,UAAAU,CAAU,CAAC,CAAC,CACpC,EAAG,CAACV,EAAUU,CAAS,CAAC,EAElBsJ,KAAW,eACdytB,GAA4B,CAC3Bz3B,KAAS,MAAc,CAAE,UAAAU,EAAW,QAAS+2B,CAAW,CAAC,CAAC,CAC5D,EACA,CAACz3B,EAAUU,CAAS,CACtB,EAEMg3B,KAAa,eAChB11B,GAAqB,CACpBgI,EAAS,CAAC,GAAG+Q,EAAS,CAAE,GAAG/Y,EAAO,SAAO,OAAiB+Y,CAAO,CAAE,CAAC,CAAC,CACvE,EACA,CAAC/Q,EAAU+Q,CAAO,CACpB,EAEM4c,EAAgB,IAAM,IAC1B,MAAkB,gCAAgC,CACpD,EAEMC,EAAiB,IAAM,IAC3B,MAAkB,kCAAkC,CACtD,EAEMC,EAAkBC,GAA0B,IAChD,MAAkB,2BAA4BA,IAAgB,OAAY,CAAC,EAAI,CAAE,aAAcA,CAAY,CAAC,CAC9G,EAEA,OACE,gBAACC,GAAA,GACC,WAAA1b,EACA,QAAAtB,EACA,gBAAiB/Q,EACjB,WAAA0tB,EACA,aAAAF,EACA,cAAAG,EACA,eAAAC,EACA,eAAAC,EACA,KAAMniB,EACN,IAAK,MAAQ,QACb,QAAA4hB,EACA,SAAUC,EACV,gBAAiB,CAACv0B,EAAUgxB,IAC1B,gBAAChsB,GAAA,CACC,MAAOgsB,EACP,KAAK,QACL,IAAKA,EACL,QAAQ,UACR,gBAAiB,IACjB,MAAM,SAELhxB,CACH,EAEJ,CAEJ,E,qFClFA,MAAM,GAAS,CACb,WAAS;AAAA;AAAA;AAAA,IAIT,iBAAe;AAAA;AAAA;AAAA;AAAA,IAKf,eAAa;AAAA;AAAA;AAAA,IAIb,UAAQ;AAAA;AAAA,IAGR,eAAa;AAAA;AAAA,IAGb,UAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAQV,EAEMg1B,GAAuB,IACvBC,GAA6C,EAsHnD,GA/G0B1nB,GAAiC,CACzD,KAAM,CAAE,YAAA2nB,CAAY,EAAI3nB,EAClBuR,KAAY,cAAUoW,CAAW,EACjCC,KAAU,UAAoB,IAAI,EAElCC,EAActW,EAAU,OAAO,OAAQ7X,GAAUA,EAAM,KAAK,SAAS,OAAO,CAAC,EAC7EouB,KAAQC,GAAA,GAAuCxW,CAAS,EACxD,CAAE,MAAAtV,CAAM,KAAIgqB,GAAA,GAAc,EAC1B,CAAC+B,EAAgBC,CAAiB,KAAI,YAC1ChsB,GAASwrB,IAAwBI,EAAY,OAASH,EACxD,EAEMQ,EAAiB,IAAM,CAC3BD,EAAkB,CAACD,CAAc,EACjC,MAAMhoB,EAAQ,CACZ,WAAY,CAACgoB,CACf,KACA,MAAkB,gEAAiEhoB,CAAK,CAC1F,KAEA,aAAU,IAAM,CAEd4nB,EAAQ,SAAS,gBAAgB,EAAG,EAAI,CAC1C,EAAG,CAACI,CAAc,CAAC,EAEnB,MAAMG,EAA0BhM,GAA2B,CAIzD,GAAIA,EAAS,GAAiB,CAC5B,IAAI0E,EAAM,EACV,QAAStpB,EAAI,EAAGA,EAAI4kB,EAAQ5kB,IAC1BspB,GAAOuH,EAAkB7wB,EAAG,EAAI,EAGlC,OAAO,KAAK,IAAI,IAAespB,CAAG,CACpC,CAEA,MAAO,IACT,EAEMuH,EAAoB,CAACC,EAAmBL,IAA4B,CAGxE,GAAI,CAACA,EACH,MAAO,IAET,MAAM10B,EAAOw0B,EAAMO,CAAS,EAG5B,MAAO,KAAM,IAAoB,OAAO,KAAK/0B,CAAI,EAAE,OAASu0B,EAAY,QAAU,EACpF,EAEMS,EAAW,qBAAkB,SAAM,CAAC,GAE1C,OACE,gBAAC,eACC,gBAAC,UAAO,UAAW,GAAO,QACxB,gBAAC9uB,GAAA,EAAK,CAAC,UAAW,GAAO,cAAe,MAAO,iBAAkB,QAAS,kBACxE,gBAAC,OAAI,UAAW,GAAO,QACrB,gBAAC+uB,GAAA,EAAM,CAAC,SAAUL,EAAgB,GAAII,EAAU,MAAON,EAAgB,MAAO,iBAAkB,CAClG,CACF,EAEA,gBAAC,OAAI,UAAW,GAAO,aAAa,kBAAgBF,EAAM,MAAO,CACnE,EAEA,gBAAC,OAAI,KAAM,SAEP,gCAEGD,EAAY,OAAS,GAAK,CAACG,GAC1B,gBAACQ,GAAA,EAAU,CAAC,YAAAX,EAA0B,SAAUG,CAAA,CAAgB,EAElE,gBAAC,OACC,IAAKJ,EACL,UAAWE,EAAM,OACjB,UAAW,GAAO,QAClB,SAAW5oB,GAAUkpB,EAAkBlpB,EAAO8oB,CAAc,EAC5D,OAAQG,EAAuBL,EAAM,MAAM,EAC3C,MAAM,QAEL,CAAC,CAAE,MAAA5oB,EAAO,MAAAwF,CAAM,IAAM,CACrB,IAAI+jB,EACJ,OAAIT,IACFS,EAAsBZ,EAAY,OAAQa,GAAe,CACvD,MAAMC,EAAgBb,EAAM5oB,CAAK,EAAEwpB,EAAW,IAAI,EAClD,OAAOC,GAAiBA,IAAkB,IAC5C,CAAC,GAID,gBAAC,OAAI,KAAK,MAAM,MAAO,CAAE,GAAGjkB,EAAO,SAAU,QAAS,GACpD,gBAACkkB,GAAA,IACC,eAAAZ,EACA,YAAaS,EACb,oBAAqBZ,EAAY,OACjC,QAASC,EAAM5oB,CAAK,EAAE,SACtB,aAAc4oB,EAAM5oB,CAAK,EAC3B,CACF,CAEJ,CACF,CACF,CAEJ,CACF,CAEJ,EC3IA,SAAS,GAAgB7M,EAAmB,CAAE,UAAAlC,CAAU,EAAgC,CAEtF,MAAMmD,EADUjB,EAAM,QACiB,MAAMlC,CAAS,EAChD,CAAE,YAAAw3B,EAAa,oBAAAkB,EAAqB,MAAAhiB,EAAO,cAAA1B,CAAc,EAAI7R,EAC7Dw1B,EAAkCD,EAAsB,CAACA,CAAmB,EAAI,CAAC,EACjF9Q,GAAU4P,GAAa,QAAU,GAAK,GAAKkB,EAAsBlB,EAAcmB,EAGrF,MAAO,CAAE,QAFO3jB,EAAc,MAEZ,YAAa4S,EAAQ,MAAAlR,CAAM,CAC/C,CAEA,MAAM,MAAY,YAAQ,GAAiB,CAAC,CAAC,EAItC,MAAMkiB,WAA+B,eAA+C,CACzF,YAAY/oB,EAAc,CACxB,MAAMA,CAAK,EAUb,0BAAwBgpB,GAAoC,CAC1D,KAAK,SAAS,CAAE,aAAAA,CAAa,CAAC,CAChC,EAaA,iBAAc,IAAM,CAClB,MAAMjL,KAAU,OAAI,CAClB,QAAS,OACT,eAAgB,gBAChB,KAAM,GACR,CAAC,EACKkL,EAAqE,MAAqB,IAAKvkB,IAAW,CAC9G,MAAOA,EAEP,MAAOA,EAAM,CAAC,EAAE,YAAY,EAAIA,EAAM,MAAM,CAAC,EAAE,QAAQ,IAAK,GAAG,CACjE,EAAE,EAEF,OACE,gBAAC,OAAI,UAAWqZ,CAAA,EACd,gBAACyE,GAAA,GACC,QAAS,IAAM,CACb,MAAMxiB,EAAQ,CACZ,MACE,KAAK,MAAM,eAAiB,sBAAoB,MAC5C,sBAAoB,IACpB,sBAAoB,KAC5B,KACA,MAAkB,6DAA8DA,CAAK,CACvF,EACA,KAAK,KACL,QAASipB,EACT,MAAO,KAAK,OAAO,aACnB,SAAU,KAAK,qBACjB,CACF,CAEJ,EArDMjpB,EAAM,oBACR,KAAK,MAAQ,CACX,aAAc,sBAAoB,GACpC,EAEJ,CAMA,gBAAiB,CACf,KAAM,CAAE,YAAA2nB,CAAY,EAAI,KAAK,MAE7B,MAAI,CAACA,GAAeA,EAAY,SAAW,EAClC,IAIF,KAAK,IAAI,KAAK,IAAI,IAAKA,EAAY,CAAC,EAAE,OAAS,EAAE,EAAI,EAAE,CAChE,CAmCA,QAAS,CACP,KAAM,CAAE,QAAApc,EAAS,kBAAAqH,EAAmB,YAAA+U,EAAa,MAAA1rB,EAAO,YAAAM,EAAa,MAAAsK,EAAO,UAAAqiB,EAAW,SAAA/sB,CAAS,EAAI,KAAK,MACnGD,EAAS,KAAK,eAAe,EAC7B+e,EAAahf,EAAQ,UAAO,MAAM,aAAe,EAAI,MAE3D,IAAIsJ,EAAaoiB,EAEjB,MAAMwB,KAAwB,OAAoC5sB,EAAasK,CAAK,EAEhFtB,GAAY,SACdA,KAAa,OAAoB,CAC/B,KAAMA,EACN,SAAApJ,EACA,MAAO,UAAO,OACd,oBAAkB,MAAe,EAAE,QAAQ,QAAK,MAAe,CAAC,EAChE,YAAa,CACX,SAAU,CAAC,EACX,UAAW,CAAC,CACd,EACA,sBAAAgtB,CACF,CAAC,GAGH,MAAM9sB,EAASkJ,GAAY,OACxBuM,GAAqD,CAAC,CAACA,GAASA,EAAM,SAAW,CACpF,EAEM1d,EAAQ,KAAK,MAAM,eAAiB,sBAAoB,IAAM,MAAQ,QACtEyD,EAAQ,KAAK,OAAO,eAAiB,OAAY,KAAK,YAAY,EAAI,QAGtEuxB,EAAc,CAAC,KAAK,OAAO,cAAgB,KAAK,OAAO,eAAiB,sBAAoB,MAElG,OACE,gBAACtsB,GAAA,GAAW,CAAC,MAAA1I,EAAc,QAASyD,EAAO,aAAc0T,CAAA,EACtDlP,GAAQ,QACP,gCACG+sB,GACC,gBAACnW,GAAA,GACC,UAAAiW,EACA,KAAM7sB,EAAO,CAAC,EACd,MAAO4e,EACP,OAAA/e,EACA,kBAAA0W,CAAA,CACF,EAED,KAAK,OAAO,eAAiB,sBAAoB,KAAO,gBAAC,GAAgB,CAAC,YAAavW,EAAO,CAAC,EAAG,CACrG,EAED,CAACA,GAAQ,QAAU,gBAAC6U,GAAY,CAAC,UAAW,CAAC,CAAE,MAAO,mBAAoB,CAAC,EAAG,CACjF,CAEJ,CACF,CAEA,SAAe,GAAU6X,EAAsB,E,gBCtJxC,MAAMM,GAAUrpB,GAAiB,CACtC,MAAMspB,EAA8B,CAClC,WAAY,WAAWtpB,EAAM,QAAQ,YACrC,QAAS,CACX,EAEMupB,EAAqD,CACzD,OAAQ,CAAE,QAAS,EAAG,QAAS,MAAO,EACtC,SAAU,CAAE,QAAS,CAAE,EACvB,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,CACxB,EAEA,OACE,gBAACC,GAAA,IACC,GAAIxpB,EAAM,GACV,QAASA,EAAM,SACf,cAAeA,EAAM,eAAiB,GACtC,SAAUA,EAAM,UAEd3N,GACA,gBAAC,OACC,MAAO,CACL,GAAGi3B,EACH,GAAGC,EAAiBl3B,CAAK,CAC3B,GAEC2N,EAAM,QACT,CAEJ,CAEJ,ECjCaypB,GAAkBzpB,GAA+B,CAC5D,KAAM,CAAE,WAAA0pB,CAAW,EAAI1pB,EACjB2pB,EAAY,EAAAD,EACZE,EAAWD,EAAY,IAAM,GAC7Bv1B,EAAQs1B,EAAa,cAAgB,gBACrCt7B,EAAUs7B,GAAY,SAAWA,GAAY,MAAM,SAAW,KAEpE,OACE,gBAACL,GAAM,CAAC,GAAIM,EAAW,SAAAC,CAAA,EACrB,gBAACvuB,GAAA,EAAK,CAAC,SAAS,QAAQ,MAAAjH,EAAc,WAAY,GAC/ChG,CACH,CACF,CAEJ,ECdO,SAASy7B,GAAuB7pB,EAAc,CACnD,MAAMmF,KAAgB,eAAa9S,GAAUA,EAAM,QAAQ,MAAM2N,EAAM,SAAS,EAAG,aAAa,EAC1F0pB,EAAavkB,GAAe,QAAU,MAAa,MAAQA,GAAe,MAAQ,OAGxF,OAAIukB,GAAY,MACP,KAGF,gBAACD,GAAc,CAAC,WAAAC,CAAA,CAAwB,CACjD,C,0HCGA,SAAS,GAAgBr3B,EAAmB,CAAE,UAAAlC,CAAU,EAA0B,CAChF,MAAM25B,EAAUz3B,EAAM,QAChB,CAAE,mBAAAiZ,CAAmB,EAAIwe,EAAQ,MAAM35B,CAAS,EACtD,MAAO,CACL,UAAAA,EACA,mBAAAmb,CACF,CACF,CAEA,MAAM,GAAqB,CACzB,iBAAgB,MAChB,kBAAiB,MACjB,mBAAkB,MAClB,gBAAe,MACf,WAAU,IACZ,EAEM,MAAY,YAAQ,GAAiB,EAAkB,EAQvD,GAAata,GAAyB,CAE1C,MAAM+4B,EAAmB,QACnBC,EAA0B,QAG1BC,EAAYj5B,EAAM,OAAO,WAAW,UAE1C,MAAO,CACL,aAAW;AAAA;AAAA;AAAA;AAAA,0BAIWA,EAAM,OAAO,OAAO,IAAI;AAAA,gBAClCA,EAAM,QAAQ,CAAC,CAAC;AAAA,0BACNi5B,CAAS;AAAA,uBACZj5B,EAAM,MAAM,OAAO,OAAO;AAAA;AAAA,iBAEhCA,EAAM,GAAG,QAAQ,MAAM;AAAA;AAAA,MAGpC,WAAS;AAAA;AAAA;AAAA;AAAA,iBAIIA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA,mCAGEA,EAAM,OAAO,OAAO,IAAI;AAAA,mBACxCA,EAAM,QAAQ,GAAK,CAAC,CAAC;AAAA;AAAA;AAAA,kBAGtBA,EAAM,WAAW,QAAQ;AAAA,qBACtBA,EAAM,WAAW,QAAQ;AAAA,wBACtBA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA,MAGpC,sBAAoB;AAAA,mBACLg5B,CAAuB;AAAA;AAAA;AAAA,mBAGvBh5B,EAAM,WAAW,KAAK,IAAI;AAAA;AAAA,uBAEtBA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA,MAGnC,kBAAgB;AAAA,qBACCA,EAAM,WAAW,gBAAgB;AAAA,2BAC3B+4B,CAAgB;AAAA,MAEvC,0BAAwB;AAAA,2BACDA,CAAgB;AAAA,oBACvB/4B,EAAM,QAAQ,CAAC,CAAC;AAAA,MAEhC,WAAS;AAAA;AAAA,mBAEMA,EAAM,WAAW,UAAU,QAAQ;AAAA,qBACjCA,EAAM,WAAW,iBAAiB;AAAA,oBACnCA,EAAM,QAAQ,EAAG,CAAC;AAAA,MAElC,oBAAkB;AAAA;AAAA,sBAEAA,EAAM,QAAQ,CAAC,CAAC;AAAA,wBACdA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA,MAGpC,YAAU;AAAA;AAAA,MAGV,aAAW;AAAA,mBACIg5B,CAAuB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKvBh5B,EAAM,QAAQ,GAAK,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOpC,UAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOcA,EAAM,OAAO,WAAW,SAAS;AAAA,KAEzD,CACF,EAEO,SAASk5B,GAAgBlqB,EAAc,CAC5C,KAAM,CACJ,iBAAAmqB,EACA,mBAAAC,EACA,gBAAAC,EACA,kBAAAC,EACA,iBAAAC,EACA,UAAAp6B,EACA,mBAAAmb,EACA,WAAAkf,CACF,EAAIxqB,EAEE,CAACyqB,EAAqBC,CAAsB,KAAI,YAAS,EAAK,EAC9D,CAACC,EAASC,CAAU,KAAI,YAA6BT,EAAiB,OAAO,EAC7E,CAAE,MAAOU,EAAiB,QAAAtf,CAAQ,KAAInR,GAAA,GAAS,SAAY,CAC/D,IAAIkR,EACJ,GAAI,CACFA,EAAqB,QAAM,MAAiB,EAAE,IAAI6e,EAAiB,aAAa,CAClF,MAAY,CAAC,CAEb,MAAO,CACL,mBAAA7e,EACA,QAAS,MAAM,QAAQ,IACrB6e,EAAiB,QAAQ,IAAI,MAAO14B,GAAU,CAC5C,IAAIq5B,EACJ,GAAIxf,GAAoB,KAAK,MAC3B,GAAI,CACFwf,EAAa,QAAM,MAAiB,EAAE,IAAIr5B,EAAM,UAAU,CAC5D,MAAY,CAAC,MAEbq5B,EAAaxf,EAGf,MAAO,CACL,MAAA7Z,EACA,WAAAq5B,CACF,CACF,CAAC,CACH,CACF,CACF,EAAG,CAACX,EAAiB,cAAeA,EAAiB,OAAO,CAAC,EAEvDz6B,KAAS,MAAW,EAAS,EAE7Bqc,EAAa,SAAY,CAC7B,MAAMgf,EAAeZ,EAAiB,QAChCa,EAAsBb,EAAiB,gBAAkB7e,GAAoB,IAC/E0f,GACF,MAAMT,EAAiB,CAAE,UAAAp6B,EAAW,WAAYg6B,EAAiB,aAAc,CAAC,EAElFK,EAAWr6B,EAAW46B,CAAY,KAElC,MAAkB,oCAAqC,CACrD,oBAAqB/4B,EAAA,EAAO,oBAC5B,oBAAAg5B,CACF,CAAC,CACH,EAEMC,EAAc,SAAY,CAC9B,MAAMC,EAAc,CAAC,GAAGf,EAAiB,QAAQ,IAAK14B,GAAUA,EAAM,YAAY,MAAQ,SAAS,CAAC,EAMpG,MALA,MAAkB,2CAA4C,CAC5D,YAAAy5B,EACA,MAAO,EAAQL,GAAiB,oBAAoB,KAAK,KAC3D,CAAC,EAEGtf,GAAW,CAACsf,EACd,OAGF,MAAMM,EAAcN,EAAgB,QACjC,IAAKp5B,MACG,OAAgBA,EAAM,MAAOA,EAAM,UAAU,CACrD,EACA,KAAK;AAAA,CAAI,KAEZ,OAAsB05B,CAAW,KACjC,UACE,UACE,UAA0B,KAAE,iDAAkD,2BAA2B,CAAC,CAC5G,CACF,CACF,EAEMC,EAAoB,SAAY,CACpC,MAAMC,KAAO,OAAyBlB,CAAgB,EACtD,QAAM,MAAuBkB,CAAI,CACnC,EAEMC,EAAgB,IAAM,CAC1B,MAAMC,EAAiBC,GAAoB,CACzClB,EAAkBkB,CAAO,KACzB,UACE,UAAU,UAA0B,KAAE,kDAAmD,eAAe,CAAC,CAAC,CAC5G,KACA,MAAkB,wCAAyC,CACzD,oBAAqBx5B,EAAA,EAAO,mBAC9B,CAAC,CACH,EAGIm4B,EAAiB,WACnB,OAAa,EAAE,QACb,IAAI,MAAsB,CACxB,SAAO,KAAE,4DAA6D,QAAQ,EAC9E,QAAM,KACJ,mEACA,iEACF,EACA,WAAS,KAAE,2CAA4C,QAAQ,EAC/D,KAAM,YACN,UAAW,IAAMoB,EAAcpB,EAAiB,EAAE,CACpD,CAAC,CACH,EAEAoB,EAAcpB,EAAiB,EAAE,CAErC,EAEMsB,EAAe,IAAM,CACzBpB,EAAgBF,EAAiB,GAAI,CAACA,EAAiB,OAAO,KAC9D,MAAkB,wCAAyC,CACzD,oBAAqBn4B,EAAA,EAAO,oBAC5B,SAAU,CAACm4B,EAAiB,OAC9B,CAAC,CACH,EAEMuB,EAA4B,IAAMhB,EAAuB,CAACD,CAAmB,EAE7EkB,EAAkB,IAAM,CAC5BvB,EAAmBD,EAAiB,GAAIQ,CAAO,EAC/CD,EAAuB,EAAK,KAC5B,MAAkB,0CAA2C,CAC3D,oBAAqB14B,EAAA,EAAO,mBAC9B,CAAC,CACH,EAEM45B,EAAwB,IAAM,CAClClB,EAAuB,EAAK,EAC5BE,EAAWT,EAAiB,OAAO,CACrC,EAEM0B,EAAaC,GAAkC,CAC/CA,EAAS,MAAQ,UAAYA,EAAS,UAAYA,EAAS,UAC7DH,EAAgB,EAGdG,EAAS,MAAQ,UACnBF,EAAsB,CAE1B,EAEMG,EACJ,gBAAC,OACC,UAAWr8B,EAAO,uBAClB,aACEi7B,KACI,KAAE,gDAAiD,qBAAqB,KACxE,KAAE,6CAA8C,kBAAkB,GAGxE,gBAACqB,GAAA,GACC,UAAAH,EACA,MAAOlB,EACP,YACEA,EACI,UACA,KAAE,iDAAkD,iDAAiD,EAE3G,SAAW1sB,GAAM2sB,EAAW3sB,EAAE,cAAc,KAAK,EACjD,UAAWvO,EAAO,SACpB,EACA,gBAAC,OAAI,UAAWA,EAAO,kBACrB,gBAACb,EAAA,GAAM,CAAC,QAAS88B,CAAA,EACf,gBAAC,KAAK,CAAC,QAAQ,0CAAyC,cAAY,CACtE,EACA,gBAAC98B,EAAA,GAAM,CAAC,QAAQ,YAAY,QAAS+8B,CAAA,EACnC,gBAAC,KAAK,CAAC,QAAQ,oCAAmC,QAAM,CAC1D,CACF,CACF,EAGIK,EACJ,gBAAC,OAAI,UAAWv8B,EAAO,oBACrB,gBAACkM,GAAA,GACC,KAAK,cACL,QAAS8vB,EACT,QACEvB,EAAiB,SAAS,OAAS,KAC/B,KAAE,iDAAkD,cAAc,KAClE,KAAE,gDAAiD,aAAa,EAExE,EACA,gBAACvuB,GAAA,GACC,KAAK,OACL,QAASqvB,EACT,WAAS,KAAE,+CAAgD,yBAAyB,EACtF,EACCJ,GAAiB,oBAChB,gBAACjvB,GAAA,GACC,KAAK,YACL,QAASwvB,EACT,QACE,gBAAC,KAAK,CAAC,QAAQ,yDAAwD,kCAEvE,EAEJ,EAEF,gBAACxvB,GAAA,GACC,KAAK,YACL,SAAO,KAAE,+CAAgD,cAAc,EACvE,WAAS,KAAE,iDAAkD,cAAc,EAC3E,QAAS0vB,CAAA,CACX,EACA,gBAAC1vB,GAAA,GACC,KAAMuuB,EAAiB,QAAU,WAAa,OAC9C,SAAUA,EAAiB,QAAU,OAAS,UAC9C,QAASsB,EACT,QACEtB,EAAiB,WACb,KAAE,iDAAkD,cAAc,KAClE,KAAE,+CAAgD,YAAY,EAEtE,CACF,EAGF,OACE,gBAAC,OAAI,UAAWz6B,EAAO,WACrB,gBAAC,OAAI,UAAWA,EAAO,SACrB,gBAACw8B,GAAA,CAAe,MAAOrB,GAAiB,mBAAoB,KAAK,IAAK,GAErEoB,CACH,EACA,gBAAC,OAAI,aAAW,MAAGv8B,EAAO,OAAO,GAC/B,gBAAC,OAAI,UAAWA,EAAO,gBACpBm7B,GAAiB,QAAQ,IAAI,CAAChH,EAAGtsB,IACzB,gBAAC40B,GAAA,CAAM,MAAOtI,EAAG,IAAK,GAAGA,CAAC,IAAItsB,CAAC,GAAI,WAAYszB,GAAiB,oBAAoB,KAAK,MAAO,CACxG,EACA,CAACJ,GAAuBN,EAAiB,SACxC,gBAAC,OACC,gBAAY,KAAE,gDAAiD,eAAe,EAC9E,UAAWz6B,EAAO,SAEjBy6B,EAAiB,OACpB,EAEDM,GAAuBsB,CAC1B,EACC,CAACtB,GACA,gBAAC,OAAI,UAAW/6B,EAAO,WACrB,gBAACb,EAAA,IACC,QAAQ,YACR,QAASkd,EACT,SACE,CAAC8e,GAAiB,oBAAsBA,EAAgB,QAAQ,KAAMp5B,GAAU,CAACA,EAAM,UAAU,GAGlG6Z,GAAoB,MAAQ6e,EAAiB,cAC5C,gBAAC,KAAK,CAAC,QAAQ,8CAA6C,WAAS,EAErE,gBAAC,KAAK,CAAC,QAAQ,sDAAqD,kCAEpE,CAEJ,CACF,CAEJ,EACC5e,GACC,gBAAC6gB,GAAA,GACC,QAAM,KAAE,yCAA0C,YAAY,EAC9D,UAAW18B,EAAO,OACpB,CAEJ,CAEJ,CAEA,MAAM28B,GAAkBr7B,IAA0B,CAChD,YAAU;AAAA,4BACgBA,EAAM,OAAO,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASlD,mBAAiB;AAAA;AAAA;AAAA,IAIjB,aAAW;AAAA;AAAA,GAGb,GAWMm7B,GAAQ,CAAC,CAAE,MAAA16B,EAAO,WAAA66B,EAAa,EAAM,IAAkB,CAC3D,MAAM58B,KAAS,MAAW28B,EAAc,EAExC,OACE,gBAAC,OAAI,UAAW38B,EAAO,UACpB48B,GACC,gBAAC,OAAI,UAAW58B,EAAO,iBACrB,gBAACw8B,GAAA,CAAe,MAAOz6B,EAAM,WAAY,KAAK,IAAK,GAClD,IACH,EAEF,gBAAC,QAAK,gBAAY,KAAE,6CAA8C,YAAY,EAAG,UAAW/B,EAAO,cAChG,OAAgB+B,EAAM,MAAOA,EAAM,UAAU,CAChD,CACF,CAEJ,EAEM86B,GAAmBhuB,GAAuBvN,MAAyB;AAAA;AAAA;AAAA,eAG1DA,EAAM,WAAWuN,IAAS,KAAO,YAAc,MAAM,EAAE,QAAQ;AAAA,iBAC7DvN,EAAM,WAAW,gBAAgB;AAAA;AAAA,EAIlD,SAASk7B,GAAe,CAAE,MAAAM,EAAO,KAAAjuB,CAAK,EAAiD,CACrF,MAAM5O,KAAY,eAAaqB,GAAyBu7B,GAAgBhuB,CAAI,EAAEvN,CAAK,EAAG,CAACuN,CAAI,CAAC,EACtF7O,KAAS,MAAWC,CAAS,EAEnC,OACE,gBAAC,OAAI,UAAWD,CAAA,EACd,gBAAC,OACC,IAAK88B,GAAO,KAAK,KAAK,MAAM,OAAS,gCACrC,IAAKA,GAAO,SAAQ,KAAE,iDAAkD,oCAAoC,EAC5G,gBAAY,KAAE,kDAAmD,kBAAkB,EACrF,EACA,gBAAC,OAAI,gBAAY,KAAE,kDAAmD,kBAAkB,GACrFA,GAAO,SAAQ,KAAE,iDAAkD,oCAAoC,CAC1G,CACF,CAEJ,CAEA,SAAe,GAAUtC,EAAe,EC7clC,GAAY,CAACl5B,EAAsBkL,KAChC,CACL,aAAW;AAAA;AAAA,MAGX,eAAa;AAAA,mBACElL,EAAM,WAAW,UAAU,QAAQ;AAAA;AAAA,sBAEhCA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA,uBAGfA,EAAM,WAAW,gBAAgB;AAAA,yBAC/BA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA,MAGrC,oBAAkB;AAAA;AAAA;AAAA,MAIlB,mBAAiB;AAAA;AAAA,sBAECA,EAAM,QAAQ,CAAC,CAAC;AAAA,MAElC,eAAa;AAAA;AAAA,MAGb,UAAQ;AAAA;AAAA,gBAEIkL,EAAS,GAAG;AAAA;AAAA,iBAEXlL,EAAM,QAAQ,CAAC,CAAC;AAAA,MAE7B,aAAW;AAAA;AAAA;AAAA;AAAA,MAKX,eAAa;AAAA,uBACMA,EAAM,QAAQ,CAAC,CAAC;AAAA,MAEnC,eAAa;AAAA;AAAA,uBAEMA,EAAM,QAAQ,CAAC,CAAC;AAAA,MAEnC,QAAM;AAAA;AAAA,MAGN,eAAa;AAAA;AAAA;AAAA;AAAA,oBAIGA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,MAKhC,WAAS;AAAA,mBACMA,EAAM,WAAW,GAAG,QAAQ;AAAA,gBAC/BA,EAAM,QAAQ,EAAG,IAAM,EAAG,GAAI,CAAC;AAAA,MAE3C,UAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKSA,EAAM,WAAW,eAAe;AAAA,mBAClCA,EAAM,WAAW,UAAU,QAAQ;AAAA;AAAA,uBAE/BA,EAAM,WAAW,gBAAgB;AAAA,uBACjCA,EAAM,QAAQ,GAAI,CAAC;AAAA;AAAA,MAGtC,WAAS;AAAA,mBACMA,EAAM,WAAW,UAAU,QAAQ;AAAA,qBACjCA,EAAM,WAAW,iBAAiB;AAAA,qBAClCA,EAAM,QAAQ,EAAG,CAAC;AAAA,KAErC,GAGK,SAASy7B,GAAsBzsB,EAAmC,CACvE,KAAM,CACJ,QAAAwK,EACA,aAAAkiB,EACA,QAAAnhB,EACA,yBAAAohB,EACA,cAAAC,EACA,wBAAAC,EACA,oBAAAC,EACA,oBAAAC,EACA,UAAA58B,EACA,OAAA+L,EACA,yBAAA8wB,CACF,EAAIhtB,EAEEtQ,KAAS,MAAW,GAAWwM,CAAM,EAErC+wB,KAAoB,OAAsB,EAuBhD,MArBA,aAAU,IAAM,CACd,MAAMC,EACJ,CAACH,EAAoB,sBAAwBA,EAAoB,0BAC7DA,EAAoB,0BACpB,CAACC,CAAwB,EACzBG,EAAoC,CACxC,OAAQ,GACR,UAAW,MAAU,WACrB,kBAAAD,EACA,KAAM,EACN,GAAIH,EAAoB,gBACxB,QAAS,EACX,EACA,OAAAH,EAAcO,CAAO,EAEd,IAAM,CACXN,EAAwB,CAC1B,CAEF,EAAG,CAAC,CAAC,EAED,CAACF,EACH,OACE,gBAAC,YACC,gBAAC,KAAK,CAAC,QAAQ,4CAA2C,YAAU,EAAQ,GAC9E,EAOJ,MAAMS,KAA0B,OAAqB5iB,EAASmiB,EAAyB,SAAS,EAC1FU,EAAmBC,GAAoB,EACvCC,EAAiB/iB,EAAQ,QAAUA,EAAQ,SAAWkiB,EACtDc,EAAa,CACjBb,EAAyB,MAAQ,EACjCA,EAAyB,IAAMI,EAAoB,eACrD,EAEA,OACE,gBAAC,OAAI,UAAWr9B,EAAO,WACrB,gBAAC,OAAI,UAAWA,EAAO,iBACrB,gBAAC,OAAI,UAAWA,EAAO,aACrB,gBAAC,OAAI,UAAWA,EAAO,aACrB,gBAAC,KAAK,CAAC,QAAQ,mDAAkD,gBAAc,CACjF,EACA,gBAAC,OAAI,UAAWA,EAAO,gBAAc,OAAwB89B,EAAW,CAAC,CAAC,CAAE,EAC5E,gBAAC,OAAI,UAAW99B,EAAO,QACrB,gBAAC+9B,GAAA,GACC,qBAAsB,GACtB,IAAK,EACL,IAAKV,EAAoB,gBACzB,MAAOS,EACP,YAAY,WACZ,oBAAqB,MACrB,QAAS,GACT,cAAgB5zB,GAAU,CACxBgzB,EAAc,CAAE,KAAMhzB,EAAO,CAAC,EAAG,GAAIA,EAAO,CAAC,CAAE,CAAC,CAClD,EACF,CACF,EACA,gBAAC,OAAI,UAAWlK,EAAO,gBAAc,OAAwB89B,EAAW,CAAC,CAAC,CAAE,CAC9E,CACF,EAEA,gBAAC,OAAI,UAAW99B,EAAO,iBAAkB,cAAY,6BACnD,gBAAC,OAAI,UAAWA,EAAO,WACpB,CAACq9B,EAAoB,sBACpB,gBAAC,OACC,UAAWr9B,EAAO,YAClB,QAASu9B,EAAkB,IAAK7J,IACvB,CAAE,MAAOA,EAAG,KAAM,MAAOA,EAAG,IAAK,EACzC,EACD,MAAOuJ,EAAyB,kBAChC,eAAa,KACX,sDACA,oCACF,EACA,gBAAY,KAAE,qDAAsD,oCAAoC,EACxG,SAAWpK,GAA+B,CACxCqK,EAAc,CAAE,kBAAmBrK,EAAQ,IAAKhZ,GAAWA,EAAO,KAAK,CAAE,CAAC,CAC5E,EACF,EAEF,gBAAC,OAAI,UAAW7Z,EAAO,aACrB,gBAACg+B,GAAA,GACC,YAAa,GACb,eAAa,KAAE,sDAAuD,gBAAgB,EACtF,MAAOf,EAAyB,OAChC,SAAWhQ,GAAmBiQ,EAAc,CAAE,OAAAjQ,CAAO,CAAC,EACxD,CACF,EACA,gBAAC,OACC,gBAAY,KAAE,mDAAoD,cAAc,EAChF,UAAWjtB,EAAO,MAElB,gBAACiK,GAAA,IACC,MAAO0zB,EAAiB,OAAQzU,GAAUA,EAAM,QAAU+T,EAAyB,SAAS,EAC5F,QAASU,EACT,eAAa,KAAE,oDAAqD,iBAAiB,EACrF,SAAWpvB,GAAkC2uB,EAAc,CAAE,UAAW3uB,EAAE,KAAM,CAAC,EACnF,CACF,CACF,EAECsN,GACC,gBAAC,YACC,gBAAC,KAAK,CAAC,QAAQ,oDAAmD,oBAAkB,CACtF,EAGD,CAACA,GACA,OAAO,KAAK6hB,CAAuB,EAAE,IAAKO,GAEtC,gBAAC,OAAI,IAAKA,CAAA,EACR,gBAAC,OAAI,UAAWj+B,EAAO,SACpBi+B,EAAS,IACV,gBAAC,QAAK,UAAWj+B,EAAO,SACrB69B,EACC,gBAAC,MACC,QAAQ,8DACR,SAAS,iCACT,OAAQ,CAAE,MAAOH,EAAwBO,CAAO,EAAE,MAAO,EAC3D,EAEA,gBAAC,MACC,QAAQ,sDACR,SAAS,sBACT,OAAQ,CAAE,MAAOP,EAAwBO,CAAO,EAAE,MAAO,EAC3D,CAEJ,CACF,EACCP,EAAwBO,CAAO,EAAE,IAAK9J,GAC9B,gBAAC,GAAe,CAAC,iBAAkBA,EAAG,IAAKA,EAAE,GAAI,UAAA1zB,CAAA,CAAsB,CAC/E,CACH,CAEH,EACFo9B,EACC,gBAAC,WACC,gBAAC,MACC,QAAQ,mDACR,SAAS,sDACT,OAAQ,CAAE,MAAO/iB,EAAQ,OAAQ,MAAOkiB,CAAa,EACrD,WAAY,CACV,gBAAC79B,EAAA,GAAM,CAAC,QAASi+B,EAAqB,IAAI,kBAAiB,WAE3D,CACF,EACF,CACF,EACE,KACJ,gBAAC,OAAI,UAAWp9B,EAAO,QACnBsC,EAAA,EAAO,oBAKL,MAJA,KACE,iDACA,qEACF,CAEN,CACF,CACF,CAEJ,C,gBCjRA,MAAM,GAAahB,IACV,CACL,aAAW;AAAA,mBACIA,EAAM,WAAW,UAAU,QAAQ;AAAA,MAElD,gBAAc;AAAA,uBACKA,EAAM,QAAQ,CAAC,CAAC;AAAA,MAEnC,SAAO;AAAA;AAAA,MAGP,QAAM;AAAA,qBACWA,EAAM,WAAW,cAAc;AAAA,MAEhD,gBAAc;AAAA,uBACKA,EAAM,QAAQ,CAAC,CAAC;AAAA,KAErC,GAGI48B,GAAyB,CAC7B,CAAE,MAAO,EAAG,SAAO,KAAE,4DAA6D,QAAQ,CAAE,EAC5F,CAAE,MAAO,EAAG,SAAO,KAAE,4DAA6D,QAAQ,CAAE,EAC5F,CAAE,MAAO,EAAG,SAAO,KAAE,4DAA6D,QAAQ,CAAE,EAC5F,CAAE,MAAO,GAAI,SAAO,KAAE,6DAA8D,SAAS,CAAE,CACjG,EAEO,SAASC,GAAuB7tB,EAAiC,CACtE,KAAM,CACJ,gBAAA8tB,EACA,qBAAAC,EACA,qBAAAC,EACA,wBAAAC,EACA,2BAAAC,EACA,2BAAAC,EACA,kBAAAC,CACF,EAAIpuB,EACEtQ,KAAS,MAAW,EAAS,EAC7B2+B,EAAiBT,GAAuB,KAAM3b,GAAMA,EAAE,QAAU6b,CAAe,EAE/EQ,EAAW,IAAM,IACrB,OAAa,EAAE,QACb,IAAI,MAAsB,CACxB,SAAO,KAAE,iDAAkD,QAAQ,EACnE,QAAM,KACJ,wDACA,iEACF,EACA,WAAS,KAAE,mDAAoD,QAAQ,EACvE,KAAM,YACN,UAAW,IAAM,CACfF,EAAkB,KAClB,UACE,UACE,UACE,KAAE,0DAA2D,uBAAuB,CACtF,CACF,CACF,CACF,CACF,CAAC,CACH,CACF,EAEA,OACE,gBAAC,OAAI,UAAW1+B,EAAO,cACpB,OAAkB,EAAE,gBACnB,gBAAC8J,GAAA,GACC,SAAO,KAAE,sDAAuD,mBAAmB,EACnF,eAAa,KACX,kEACA,gIACA,CAAE,kBAAiB,KAAC,CACtB,GAEA,gBAAC,OAAI,UAAW9J,EAAO,OACrB,gBAACiK,GAAA,GAAM,CAAC,MAAO00B,EAAgB,QAAST,GAAwB,SAAUK,CAAA,CAAyB,CACrG,CACF,EAEA,gBAAC5yB,GAAA,EAAK,CAAC,SAAS,OAAO,SAAO,KAAE,sDAAuD,mBAAmB,MACvG,KACC,+CACA,oFACA,CACE,YAAagzB,GAAgB,KAC/B,CACF,CACF,EAEF,gBAACpR,GAAA,GACC,SAAO,KACL,uDACA,qFACF,EACA,UAAWvtB,EAAO,cAElB,gBAAC,MACC,GAAG,oDACH,MAAOq+B,EACP,SAAUG,CAAA,CACZ,CACF,KACC,OAAkB,EAAE,sBACnB,gBAACjR,GAAA,GACC,SAAO,KACL,gEACA,+DACF,EACA,UAAWvtB,EAAO,cAElB,gBAAC,MACC,GAAG,sDACH,MAAOs+B,EACP,SAAUG,CAAA,CACZ,CACF,KAED,OAAkB,EAAE,cACnB,gBAAC,WACC,gBAAC,OAAI,UAAWz+B,EAAO,MACrB,gBAAC,KAAK,CAAC,QAAQ,yDAAwD,qBAAmB,CAC5F,EACA,gBAAC,OAAI,UAAWA,EAAO,cACrB,gBAAC,KAAK,CAAC,QAAQ,wDAAuD,gDAEtE,CACF,EACA,gBAACb,EAAA,GAAM,CAAC,QAAQ,cAAc,QAASy/B,CAAA,EACrC,gBAAC,KAAK,CAAC,QAAQ,gEAA+D,qBAAmB,CACnG,CACF,CAEJ,CAEJ,CCjIA,MAAM,GAAat9B,IACV,CACL,aAAW;AAAA;AAAA,MAGX,oBAAkB;AAAA;AAAA,MAGlB,aAAW;AAAA;AAAA;AAAA;AAAA,MAKX,eAAa;AAAA;AAAA,uBAEMA,EAAM,QAAQ,CAAC,CAAC;AAAA,MAEnC,eAAa;AAAA,uBACMA,EAAM,QAAQ,CAAC,CAAC;AAAA,MAEnC,QAAM;AAAA;AAAA,MAGN,UAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKSA,EAAM,WAAW,eAAe;AAAA,mBAClCA,EAAM,WAAW,UAAU,QAAQ;AAAA;AAAA,uBAE/BA,EAAM,WAAW,gBAAgB;AAAA,uBACjCA,EAAM,QAAQ,GAAI,CAAC;AAAA;AAAA,KAGxC,GAGK,SAASu9B,GAAsBvuB,EAAmC,CACvE,KAAM,CACJ,cAAA4sB,EACA,wBAAAC,EACA,oBAAAC,EACA,yBAAAE,EACA,oBAAAD,EACA,QAAAviB,EACA,aAAAkiB,EACA,QAAAnhB,EACA,yBAAAohB,EACA,UAAAx8B,CACF,EAAI6P,EAEEtQ,KAAS,MAAW,EAAS,EAE7Bu9B,KAAoB,OAAsB,EAsBhD,MApBA,aAAU,IAAM,CACd,MAAMC,EACJH,EAAoB,sBAAwBA,EAAoB,0BAC5DA,EAAoB,0BACpB,CAACC,CAAwB,EACzBG,EAAoC,CACxC,OAAQ,GACR,UAAW,MAAU,WACrB,kBAAAD,EACA,KAAM,EACN,GAAIH,EAAoB,gBACxB,QAAS,EACX,EACA,OAAAH,EAAcO,CAAO,EACd,IAAM,CACXN,EAAwB,CAC1B,CAEF,EAAG,CAAC,CAAC,EAED,CAACF,EACH,OACE,gBAAC,YACC,gBAAC,KAAK,CAAC,QAAQ,4CAA2C,YAAU,EAAQ,GAC9E,EAIJ,MAAMU,EAAmBC,GAAoB,EAE7C,OACE,gBAAC,OAAI,UAAW59B,EAAO,WACrB,gBAAC,OAAI,UAAWA,EAAO,kBACrB,gBAAC,OAAI,UAAWA,EAAO,WACpB,CAACq9B,EAAoB,sBACpB,gBAAC,OACC,UAAWr9B,EAAO,YAClB,QAASu9B,EAAkB,IAAK7J,IACvB,CAAE,MAAOA,EAAG,KAAM,MAAOA,EAAG,IAAK,EACzC,EACD,MAAOuJ,EAAyB,kBAChC,eAAa,KACX,8DACA,oCACF,EACA,gBAAY,KACV,6DACA,oCACF,EACA,SAAWpK,GAA+B,CACxCqK,EAAc,CAAE,kBAAmBrK,EAAQ,IAAKhZ,GAAWA,EAAO,KAAK,CAAE,CAAC,CAC5E,EACF,EAEF,gBAAC,OAAI,UAAW7Z,EAAO,aACrB,gBAACg+B,GAAA,GACC,YAAa,GACb,eAAa,KAAE,8DAA+D,gBAAgB,EAC9F,MAAOf,EAAyB,OAChC,SAAWhQ,GAAmBiQ,EAAc,CAAE,OAAAjQ,CAAO,CAAC,EACxD,CACF,EACA,gBAAC,OACC,gBAAY,KAAE,2DAA4D,cAAc,EACxF,UAAWjtB,EAAO,MAElB,gBAACiK,GAAA,IACC,MAAO0zB,EAAiB,OAAQzU,GAAUA,EAAM,QAAU+T,EAAyB,SAAS,EAC5F,QAASU,EACT,eAAa,KAAE,4DAA6D,iBAAiB,EAC7F,SAAWpvB,GAAkC2uB,EAAc,CAAE,UAAW3uB,EAAE,KAAM,CAAC,EACnF,CACF,CACF,EACCsN,GACC,gBAAC,YACC,gBAAC,KAAK,CAAC,QAAQ,oDAAmD,oBAAkB,CACtF,EAED,CAACA,GACAf,EAAQ,IAAKqZ,GACJ,gBAAC,GAAe,CAAC,iBAAkBA,EAAG,IAAKA,EAAE,GAAI,UAAA1zB,CAAA,CAAsB,CAC/E,EACFqa,EAAQ,QAAUA,EAAQ,SAAWkiB,EACpC,gBAAC,WACC,gBAAC,MACC,QAAQ,mDACR,SAAS,sDACT,OAAQ,CAAE,MAAOliB,EAAQ,OAAQ,MAAOkiB,CAAa,EACrD,WAAY,CACV,gBAAC79B,EAAA,GAAM,CAAC,QAASi+B,EAAqB,IAAI,kBAAiB,WAE3D,CACF,EACF,CACF,EACE,KACJ,gBAAC,OAAI,UAAWp9B,EAAO,QACnBsC,EAAA,EAAO,oBAKL,MAJA,KACE,yDACA,qEACF,CAEN,CACF,CACF,CAEJ,CCpLO,IAAKw8B,IAAAA,IACVA,EAAA,YAAc,gBACdA,EAAA,QAAU,UACVA,EAAA,SAAW,WAHDA,IAAAA,IAAA,IAML,MAAMlB,GAAsB,IACjC,CACE,CAAE,SAAO,KAAE,oCAAqC,cAAc,EAAG,MAAO,MAAU,UAAW,EAC7F,CAAE,SAAO,KAAE,oCAAqC,cAAc,EAAG,MAAO,MAAU,SAAU,EAC5F,CAAE,SAAO,KAAE,sCAAuC,iBAAiB,EAAG,MAAO,MAAU,YAAa,EACpG,CAAE,SAAO,KAAE,sCAAuC,iBAAiB,EAAG,MAAO,MAAU,YAAa,CACtG,EAAE,OAAQ/jB,MAAW,OAAkB,EAAE,iBAAiB,SAASA,EAAO,KAAK,CAAC,EAoB3E,SAASklB,GAAYzuB,EAAyB,CACnD,KAAM,CACJ,YAAA0uB,EACA,iBAAAC,EACA,OAAAzyB,EACA,UAAA/L,EACA,kBAAAi+B,EACA,QAAAlpB,EACA,SAAA0pB,EACA,yBAAA5B,CACF,EAAIhtB,EAEE,CAACuL,EAASsjB,CAAU,KAAI,YAAS,EAAK,EAEtCC,EAAkBC,GAAmD,CACzE/uB,EAAM,sBAAsB,CAAE,GAAGA,EAAM,oBAAqB,GAAG+uB,CAAiB,CAAC,CACnF,EAEMnC,EAAiBoC,GAAwD,CAC7E,MAAM7B,EAAU,CACd,GAAGntB,EAAM,yBACT,GAAGgvB,EACH,KAAM,CACR,EACAhvB,EAAM,2BAA2BA,EAAM,UAAWmtB,CAAO,EACzD8B,EAAgB,CAClB,EAEMA,KAAkB,aAAS,IAAM,CACrCjvB,EAAM,gBAAgBA,EAAM,SAAS,EACrC6uB,EAAW,EAAI,CACjB,EAAG,GAAG,EAEAZ,EAA2BH,GAA6C,CACxEA,EAAgB,QAAU,QAC5BgB,EAAe,CAAE,gBAAiBhB,EAAgB,KAAM,CAAC,CAE7D,EAEMI,EAA6B,IACjCY,EAAe,CAAE,qBAAsB,CAAC9uB,EAAM,oBAAoB,oBAAqB,CAAC,EAEpFkvB,EAA6B,IACjCJ,EAAe,CAAE,qBAAsB,CAAC9uB,EAAM,oBAAoB,oBAAqB,CAAC,KAE1F,aAAU,IAAM,CACd6uB,EAAW,EAAK,CAClB,EAAG,CAACH,CAAW,CAAC,EAEhB,MAAMS,EAAwB,CAC5B,SAAO,KAAE,qCAAsC,eAAe,EAC9D,MAAO,gBACP,QACE,gBAAC1C,GAAA,CACC,QAASiC,EACT,aAAcC,GAAoB,EAClC,QAAApjB,EACA,cAAAqhB,EACA,wBAAyB,IAAM5sB,EAAM,wBAAwBA,EAAM,SAAS,EAC5E,oBAAqB,IAAMA,EAAM,oBAAoBA,EAAM,SAAS,EACpE,yBAAAgtB,EACA,oBAAqBhtB,EAAM,oBAC3B,yBAA0BA,EAAM,yBAChC,UAAA7P,EACA,OAAA+L,CAAA,CACF,EAEF,KAAM,SACR,EAEMkzB,EAAwB,CAC5B,SAAO,KAAE,+BAAgC,SAAS,EAClD,MAAO,UACP,QACE,gBAACb,GAAA,CACC,QAASG,EACT,aAAcC,GAAoB,EAClC,QAAApjB,EACA,yBAAAyhB,EACA,cAAAJ,EACA,wBAAyB,IAAM5sB,EAAM,wBAAwBA,EAAM,SAAS,EAC5E,oBAAqB,IAAMA,EAAM,oBAAoBA,EAAM,SAAS,EACpE,oBAAqBA,EAAM,oBAC3B,yBAA0BA,EAAM,yBAChC,UAAA7P,CAAA,CACF,EAEF,KAAM,MACR,EAEMk/B,EAAyB,CAC7B,SAAO,KAAE,gCAAiC,UAAU,EACpD,MAAO,WACP,QACE,gBAACxB,GAAA,CACC,gBAAiB7tB,EAAM,oBAAoB,gBAC3C,qBAAsBA,EAAM,oBAAoB,qBAChD,qBAAsBA,EAAM,oBAAoB,qBAChD,wBAAAiuB,EACA,2BAAAC,EACA,2BAA4BgB,EAC5B,kBAAAd,CAAA,CACF,EAEF,KAAM,eACR,EAEA,IAAInoB,EAAO,CAACkpB,EAAYC,EAAYC,CAAW,EAC/C,OACE,gBAACjpB,GAAA,GACC,KAAAH,EACA,QAAAf,EACA,WAAY0pB,EACZ,oBAAkB,KAAE,qCAAsC,qBAAqB,EACjF,CAEJ,CCzIA,SAAS,GAAgBv8B,EAAmB,CAAE,UAAAlC,CAAU,EAA0B,CAChF,MAAM25B,EAAUz3B,EAAM,QAChBiB,EAAyBw2B,EAAQ,MAAM35B,CAAS,EAChDw8B,EAA2Br5B,EAAK,yBAChCy5B,EAAsBjD,EAAQ,oBAC9B,CAAE,mBAAAxe,CAAmB,EAAIhY,EACzBs7B,EAAW7B,GAAqB,qBAAuByB,GAAK,QAAUA,GAAK,YAC3E,CAAE,YAAAE,EAAa,iBAAAC,CAAiB,EAAIr7B,EAC1C,MAAO,CACL,YAAAo7B,EACA,iBAAAC,EACA,SAAAC,EACA,yBAA0BtjB,EAAoB,KAC9C,oBAAAyhB,EACA,yBAAAJ,CACF,CACF,CAEA,MAAM,GAAqB,CACzB,gBAAe,MACf,gBAAe,MACf,oBAAmB,MACnB,wBAAuB,MACvB,sBAAqB,MACrB,2BAA0B,MAC1B,kBAAiB,KACnB,EAEM,MAAY,YAAQ,GAAiB,EAAkB,EAStD,SAAS2C,GAAqBtvB,EAAc,CACjD,MAAMhP,KAAQ,MAAU,EAClB,CAACkL,EAAQqzB,CAAS,KAAI,YAASv+B,EAAM,WAAW,iBAAiB,aAAa,EAE9E,CACJ,YAAA09B,EACA,iBAAAC,EACA,MAAA1yB,EACA,SAAA2yB,EACA,yBAAA5B,EACA,UAAA78B,EACA,kBAAAi+B,EACA,gBAAAoB,EACA,gBAAAP,EACA,oBAAAnC,EACA,wBAAAD,EACA,oBAAAE,EACA,sBAAA0C,EACA,yBAAA9C,EACA,2BAAA+C,EACA,QAAAxqB,CACF,EAAIlF,EASJ,SAPA,aAAU,IAAM,CACdwvB,EAAgB,KAChB,MAAkB,uCAAwC,CACxD,oBAAqBx9B,EAAA,EAAO,mBAC9B,CAAC,CACH,EAAG,CAACw9B,CAAe,CAAC,EAEfzC,EASH,gBAACnoB,GAAA,CACC,MAAA3I,EACA,SAAU,CAAC0zB,EAAIC,EAAM19B,IAAQ,CAC3Bq9B,EAAU,OAAOr9B,EAAI,MAAM,OAAO,MAAM,EAAG,EAAE,CAAC,CAAC,CACjD,GAEA,gBAACu8B,GAAA,CACC,YAAAC,EACA,iBAAAC,EACA,SAAAC,EACA,yBAAA5B,EACA,UAAA78B,EACA,QAAA+U,EACA,OAAAhJ,EACA,kBAAmBkyB,EACnB,oBAAArB,EACA,yBAAAJ,EACA,sBAAuB8C,EACvB,2BAA4BC,EAC5B,gBAAiBT,EACjB,oBAAqBnC,EACrB,wBAAyBD,CAAA,CAC3B,CACF,EA9BE,gBAAC,YACC,gBAAC,KAAK,CAAC,QAAQ,0CAAyC,YAAU,CACpE,CA8BN,CAEA,SAAe,GAAUyC,EAAoB,E,gBC7G7C,MAAM,GAAat+B,IACV,CACL,mBAAiB,OAAI,CACnB,QAAS,OACT,SAAU,OACV,IAAKA,EAAM,QAAQ,CAAC,EACpB,UAAWA,EAAM,QAAQ,CAAC,CAC5B,CAAC,CACH,GAGK,SAAS6+B,GAAiB7vB,EAAc,CAC7C,MAAMhP,KAAQ,MAAU,EAClBtB,EAAS,GAAUsB,CAAK,EAC9B,OACE,gBAAC,OAAI,UAAWtB,EAAO,iBACpB,CAACsQ,EAAM,yBACN,gBAAC2G,GAAA,GACC,QAAQ,SACR,gBAAY,KAAE,wDAAyD,WAAW,EAClF,QAAS3G,EAAM,yBACf,SAAUA,EAAM,0BAChB,KAAK,QAEL,gBAAC,KAAK,CAAC,QAAQ,8CAA6C,WAAS,CACvE,EAED,CAACA,EAAM,4BACN,gBAAC2G,GAAA,GACC,QAAS3G,EAAM,wBAA0B,SAAW,SACpD,gBAAY,KAAE,4DAA6D,eAAe,EAC1F,QAASA,EAAM,yBACf,cAAa,KAAW,SAAS,mBACjC,KAAK,WAEL,gBAAC,KAAK,CAAC,QAAQ,kDAAiD,eAAa,CAC/E,EAEF,gBAAC2G,GAAA,GACC,QAAS3G,EAAM,2BAA6B,SAAW,SACvD,gBAAY,KAAE,8DAA+D,iBAAiB,EAC9F,QAASA,EAAM,4BACf,KAAK,eAEL,gBAAC,KAAK,CAAC,QAAQ,oDAAmD,iBAAe,CACnF,CACF,CAEJ,C,gBCtCA,SAAS,GAAgB3N,EAAmB,CAAE,UAAAlC,CAAU,EAAwB,CAE9E,MAAMmD,EADUjB,EAAM,QACiB,MAAMlC,CAAS,EAChD,CAAE,YAAAw3B,EAAa,MAAA9gB,CAAM,EAAIvT,EACzBw8B,KAAiB,MAAuB3/B,CAAS,EAEvD,MAAO,CAAE,QADOw3B,GAAeA,EAAY,OAAS,EAAI,GAAQmI,EAC9C,YAAAnI,EAAa,MAAA9gB,CAAM,CACvC,CAEA,MAAM,MAAY,YAAQ,GAAiB,CAAC,CAAC,EAItC,MAAMkpB,WAAuB,eAAqB,CAAlD,kCACL,kBAAgBzT,GAAoBA,EAAK,OAAO,KAAMpC,GAAMA,EAAE,OAAS,MAAU,YAAY,EAE7F,eAAe8V,EAAkBC,EAAuB,CACtD,OAAID,IAAa,EACR,IAIF,KAAK,IAAI,IAAK,KAAK,IAAIA,EAAW,GAAIC,EAAe,IAAM,CAAC,EAAI,GAAK,EAAE,CAChF,CAEA,cAAc1qB,EAAgC+W,EAAiB/kB,EAAW,CACxE,IAAIqV,EAAO0P,EAAK,KAChB,MAAI,CAAC1P,IAASrH,GAAY,QAAU,GAAK,IACvCqH,EAAO0P,EAAK,OAAS,GAAG/kB,CAAC,IAGpBqV,KACH,KAAE,gCAAiC,mBAAoB,CAAE,KAAAA,EAAM,cAAe,CAAE,YAAa,EAAM,CAAE,CAAC,KACtG,KAAE,sBAAuB,OAAO,CACtC,CAEA,QAAS,CACP,KAAM,CAAE,QAAArB,EAAS,kBAAAqH,EAAmB,YAAA+U,EAAa,MAAA1rB,EAAO,YAAAM,EAAa,MAAAsK,EAAO,UAAAqiB,EAAW,SAAA/sB,EAAU,MAAAnL,CAAM,EACrG,KAAK,MAEP,IAAIuU,KAAa,OAA4BoiB,CAAW,KACpD,OAAwCA,CAAW,EACnDA,EACJ,MAAMwB,KAAwB,OAAoC5sB,EAAasK,CAAK,EAEhFtB,GAAY,SACdA,KAAa,OAAoB,CAC/B,KAAMA,EACN,SAAApJ,EACA,MAAO,UAAO,OACd,oBAAkB,MAAe,EAAE,QAAQ,QAAK,MAAe,CAAC,EAChE,YAAa,CACX,SAAU,CAAC,EACX,UAAW,CAAC,CACd,EACA,sBAAAgtB,CACF,CAAC,GAGH,MAAM9sB,EAASkJ,GAAY,OACxBuM,GAAqD,CAAC,CAACA,GAASA,EAAM,SAAW,CACpF,EAEA,OACE,gCACGzV,GAAUA,EAAO,SAAW,GAC3B,gBAACS,GAAA,GAAW,CAAC,SAAO,KAAE,sBAAuB,OAAO,EAAG,MAAAb,EAAc,OAAQ,KAC1E,IAAM,gBAACiV,GAAY,CAAC,UAAW,CAAC,CAAE,SAAO,KAAE,wBAAyB,mBAAmB,CAAE,CAAC,EAAG,CAChG,EAED7U,GAAUA,EAAO,OAAS,GACzB,gBAAC,OAAI,aAAW,OAAI,CAAE,QAAS,OAAQ,cAAe,SAAU,IAAKrL,EAAM,QAAQ,CAAC,CAAE,CAAC,GACpFqL,EAAO,IAAI,CAACigB,EAAM/kB,IACjB,gBAACuF,GAAA,IACC,IAAKwf,EAAK,OAAS,SAAS/kB,CAAC,GAC7B,MAAO,KAAK,cAAcgO,EAAY+W,EAAM/kB,CAAC,EAC7C,MAAA0E,EACA,OAAQ,KAAK,eAAeqgB,EAAK,OAAQ,KAAK,aAAaA,CAAI,CAAC,EAChE,aAAc/Q,EAAU,MAAa,QAAU,QAE9C,CAACxO,EAAYC,IACZ,gBAACiW,GAAA,GACC,UAAAiW,EACA,KAAA5M,EACA,MAAOvf,EACP,OAAQC,EACR,kBAAA4V,CAAA,CACF,CAEJ,CACD,CACH,CAEJ,CAEJ,CACF,CAEO,MAAMsd,MAA0B,MAAWH,EAAc,EAEhE,MAAe,MAAW,GAAUA,EAAc,CAAC,E,4BClH5C,SAASI,GAAmBnwB,EAAc,CAE/C,MAAM8R,EAAQ9R,EAAM,WAAW,CAAC,EAC1B,CAAE,WAAAuF,EAAY,YAAAhJ,EAAa,UAAApM,EAAW,cAAA0e,CAAc,EAAI7O,EACxDowB,KAAY,WAAQ,OAAM7d,GAAA,GAAoBT,CAAK,EAAG,CAACA,CAAK,CAAC,EAC7DgZ,KAAa,eAChBz4B,GAAsBA,EAAM,QAAQ,MAAM2N,EAAM,SAAS,GAAG,oBAAsB,MACrF,EAEA,OAAKowB,EAKH,gBAACtzB,GAAA,GAAW,CAAC,QAAQ,OAAO,MAAM,SAChC,gBAACuzB,GAAA,GACC,UAAAlgC,EACA,WAAAoV,EACA,YAAAhJ,EACA,cAAAsS,EACA,UAAAuhB,EACA,WAAAtF,CAAA,CACF,CACF,EAbO,IAeX,CCgCA,MAAM,GAAa95B,IACV,CACL,eAAa,OAAI,CACf,MAAO,cAEP,SAAU,WACV,UAAW,OACX,QAAS,OACT,cAAe,SACf,IAAKA,EAAM,QAAQ,CAAC,CACtB,CAAC,EACD,kBAAgB,OAAI,CAClB,MAAO,iBACP,QAASA,EAAM,QAAQ,CAAC,CAC1B,CAAC,EACD,oBAAkB,OAAI,CACpB,MAAO,mBACP,QAAS,OACT,cAAe,SACf,aAAcA,EAAM,QAAQ,CAAC,EAC7B,aAAcA,EAAM,QAAQ,CAAC,CAC/B,CAAC,EACD,WAAS,OAAI,CACX,SAAU,WACV,IAAK,EACL,KAAMA,EAAM,QAAQ,CAAC,EACrB,MAAO,EACP,OAAQ,EACR,QAAS,MACX,CAAC,CACH,GASF,IAAK,IAAA4T,IACHA,EAAAA,EAAA,6BACAA,EAAAA,EAAA,mCAFGA,IAAA,IAAa,IAqCX,MAAM0rB,WAAgB,eAAyC,CAMpE,YAAYtwB,EAAc,CACxB,MAAMA,CAAK,EAHb,uCAAiC,MAAW,KAAsB,EAYlE,kBAAgBuwB,GAA2B,CACzC,KAAM,CAAE,gBAAArN,EAAiB,UAAA/yB,CAAU,EAAI,KAAK,MAC5C+yB,EAAgB,CAAE,UAAA/yB,EAAW,SAAAogC,CAAS,CAAC,CACzC,EAGA,oBAAkB9+B,GAAqB,CACrC,KAAK,MAAM,WAAW,KAAK,MAAM,UAAW,CAACA,CAAK,CAAC,CACrD,EAEA,uBAAqBohB,GAA4B,CAC/C,KAAM,CAAE,MAAAjZ,EAAO,IAAArG,EAAK,SAAAuf,CAAS,EAAID,EAC7BC,IAAa,OACf,KAAK,mBAAmBvf,EAAKqG,CAAK,EAGhCkZ,IAAa,OACf,KAAK,sBAAsBvf,EAAKqG,CAAK,CAEzC,EAEA,4BAAyB,IAAM,CAC7B,KAAK,SAAUvH,OACb,MAAkB,yCAA0C,CAC1D,KAAM,UACN,KAAMA,EAAM,sBAAwB,QAAU,MAChD,CAAC,EACM,CACL,sBAAuB,CAACA,EAAM,qBAChC,EACD,CACH,EAQA,yBAAsB,MAAOkB,EAAaqG,EAAwB6pB,IAAmB,CACnF,MAAMhyB,EAAQ,KAAK,MAAM,QAAQ,KAAMoyB,GAAMA,EAAE,QAAUJ,CAAK,EAC9D,GAAI,CAAChyB,EACH,MAAO,GAET,MAAM2xB,EAAK,QAAM,MAAiB,EAAE,IAAI3xB,EAAM,UAAU,EACxD,MAAI,YAAiC2xB,CAAE,GAAKA,EAAG,eAAe3xB,EAAO,CAAE,IAAA8B,EAAK,MAAOqG,EAAM,SAAS,CAAE,CAAC,EAIvG,EAKA,wBAAqB,CAACrG,EAAaqG,EAAwBkY,IAAsB,CAC/E,KAAK,gBACH,CACE,KAAM,aACN,QAAS,CAAE,IAAAve,EAAK,MAAOqG,EAAM,SAAS,CAAE,EACxC,MAAAkY,CACF,EACAA,GAAO,KACT,CACF,EAKA,2BAAwB,CAACve,EAAaqG,EAAwBkY,IAAsB,CAClF,KAAK,gBACH,CACE,KAAM,iBACN,QAAS,CAAE,IAAAve,EAAK,MAAOqG,EAAM,SAAS,CAAE,EACxC,MAAAkY,CACF,EACAA,GAAO,KACT,CACF,EAKA,wBAAqB,CAAClY,EAAwB6pB,IAAmB,CAC/D,KAAK,gBAAgB,CAAE,KAAM,oBAAqB,QAAS,CAAE,MAAO7pB,EAAM,SAAS,CAAE,CAAE,EAAG6pB,CAAK,CACjG,EAKA,2BAAwB,CAAC7pB,EAAwB6pB,IAAmB,CAClE,KAAK,gBAAgB,CAAE,KAAM,wBAAyB,QAAS,CAAE,MAAO7pB,EAAM,SAAS,CAAE,CAAE,EAAG6pB,CAAK,CACrG,EAEA,8BAA2B,IAAM,CAC/B,KAAM,CAAE,UAAAtzB,EAAW,UAAAqgC,CAAU,EAAI,KAAK,MACtC,KAAK,MAAM,YAAYrgC,EAAWqgC,EAAU,MAAM,CACpD,EAKA,qBAAkB,CAACxhC,EAAwBy0B,IAAmB,CAC5D,MAAMgN,EAAW,MAAOh/B,EAAkBi/B,IAAiC,CAGzE,GAAIjN,GAASA,IAAUhyB,EAAM,MAC3B,OAAOA,EAET,KAAM,CAAE,WAAAq5B,CAAW,EAAIr5B,EACvB,GAAIq5B,GAAc,KAChB,OAAOr5B,EAET,MAAM2xB,EAAK,QAAM,MAAiB,EAAE,IAAI0H,CAAU,EAC5C6F,EAAoB,CAAC,aAAc,gBAAgB,EACzD,SAAI,MAAiCvN,CAAE,GAAKuN,EAAkB,SAASD,EAAa,IAAI,EAC/EtN,EAAG,kBAAkB3xB,EAAO,CACjC,KAAMi/B,EAAa,OAAS,aAAe,aAAe,aAC1D,QAASA,EAAa,SAAW,CAAC,EAClC,MAAOA,EAAa,KACtB,CAAC,EAECtN,EAAG,YACEA,EAAG,YAAY3xB,EAAOi/B,CAAY,EAElCj/B,CAEX,EACA,KAAK,MAAM,cAAc,KAAK,MAAM,UAAWzC,EAAQyhC,CAAQ,CACjE,EAEA,cAAYlyB,GAAyB,CACnC,KAAK,MAAM,WAAW,KAAK,MAAM,UAAWA,CAAI,CAClD,EAEA,qBAAkB,IAAM,CAEtB,KAAK,MAAM,UAAU,KAAK,MAAM,SAAS,CAC3C,EAEA,oBAAiB,IAAM,CACrB,KAAK,MAAM,eAAe,CAAE,UAAW,KAAK,MAAM,SAAU,CAAC,CAC/D,EAEA,uBAAqBjC,GAAqC,CACxD,KAAM,CAAE,UAAAnM,EAAW,gBAAA+yB,CAAgB,EAAI,KAAK,MAC5CA,EAAgB,CAAE,UAAA/yB,EAAW,cAAAmM,CAAc,CAAC,CAC9C,EAEA,2BAAwB,IAAM,CAC5B,KAAK,SAAUjK,IACN,CACL,WAAYA,EAAM,aAAe,EAA4B,OAAY,CAC3E,EACD,CACH,EAEA,8BAA2B,IAAM,CAC/B,KAAK,SAAUA,IACN,CACL,WAAYA,EAAM,aAAe,EAA+B,OAAY,CAC9E,EACD,CACH,EAEA,iBAAeu+B,GACN,MAAOrO,GAA+B,CAE3C,GADA,KAAK,MAAM,UAAUA,CAAO,EACxBA,GAAW,KAAK,MAAM,mBAAoB,CAC5C,MAAM7jB,GAAU,QAAM,MAAiB,EAAE,IAAI6jB,EAAQ,aAAa,GAAG,KAC/D3G,EACJ,KAAK,MAAM,mBAAmB,MAAQ,SAClC,QAAI,KAAK,MAAM,QAAS,mBAAmB,EAC3C,KAAK,MAAM,mBAAmB,KAC9BiV,EAAW,CACf,OAAQ,QACR,UAAAD,EACA,OAAAhV,EACA,OAAAld,EACA,UAAW,KAAK,MAAM,SACxB,KACA,MAAkB,oCAAqCmyB,CAAQ,CACjE,CACF,EA9LA,KAAK,MAAQ,CACX,WAAY,OACZ,sBAAuB,EACzB,EACA,KAAK,cAAgB7wB,EAAM,SAAS,aAAa,QAAS,CAAE,UAAW,EAAM,CAAC,EAC9E,KAAK,aAAeA,EAAM,SAAS,aAAa,OAAQ,CAAE,UAAW,EAAM,CAAC,CAC9E,CA2LA,iBAAiB8wB,EAAgC,CAC/C,OACE,gBAAC,OAAI,aAAW,MAAGA,CAAsB,GACvC,gBAAC3L,GAAwB,IAAC,CAC5B,CAEJ,CAEA,cAAe,CACb,OAAO,gBAACH,GAAM,IAAC,CACjB,CAEA,aAAa/oB,EAAe,CAC1B,KAAM,CAAE,SAAAE,EAAU,cAAAgJ,EAAe,cAAA7I,EAAe,SAAAE,CAAS,EAAI,KAAK,MAE5Du0B,KAAkB,YAAQ5rB,GAAe,aAAc,qCAAqC,EAElG,OAAO,OAAO,QAAQ4rB,CAAe,EAAE,IAAI,CAAC,CAAC30B,EAAUC,CAAM,EAAG6C,IAE5D,gBAACzH,GAAkB,CAAC,QAAS2E,EAAU,MAAOA,EAAU,KAAK,OAAO,IAAK8C,CAAA,EACvE,gBAAClD,GAAA,CACC,IAAKkD,EACL,SAAA/C,EACA,SAAAC,EACA,OAAAC,EACA,MAAO8I,EAAc,MACrB,cAAA7I,EACA,OAAQ,IACR,MAAAL,EACA,YAAa,KAAK,YAAYG,CAAQ,EACtC,SAAAI,CAAA,CACF,CACF,CAEH,CACH,CAEA,iBAAiBP,EAAe,CAC9B,KAAM,CAAE,YAAA+0B,EAAa,cAAA10B,EAAe,SAAAH,EAAU,cAAAgJ,EAAe,eAAA8rB,CAAe,EAAI,KAAK,MAErF,OACE,gBAACx5B,GAAkB,CAAC,QAAQ,QAAQ,MAAM,QAAQ,KAAK,aACrD,gBAACy5B,GAAA,GACC,KAAMF,EACN,OAAQC,EAAiB,IAAM,IAC/B,MAAAh1B,EACA,cAAAK,EACA,SAAAH,EACA,aAAc,KAAK,kBACnB,YAAagJ,EAAc,YAC3B,YAAa,KAAK,YAAY,OAAO,EACrC,aAAcA,EAAc,MAC5B,SAAU,KAAK,cACjB,CACF,CAEJ,CAEA,iBAAiBlJ,EAAe,CAC9B,KAAM,CAAE,UAAA9L,EAAW,SAAAgM,CAAS,EAAI,KAAK,MACrC,OACE,gBAAC1E,GAAkB,CAAC,QAAQ,QAAQ,MAAM,QAAQ,KAAK,SACrD,gBAAC,IACC,UAAW,MAAU,MAAM,QAAQ,QAAQ,MAC3C,MAAAwE,EACA,UAAA9L,EACA,kBAAmB,KAAK,kBACxB,SAAAgM,EACA,YAAa,KAAK,YAAY,OAAO,EACvC,CACF,CAEJ,CAEA,oBAAoBF,EAAe,CACjC,KAAM,CAAE,UAAA9L,EAAW,mBAAAmb,EAAoB,SAAAnP,CAAS,EAAI,KAAK,MACzD,OACE,gBAAC1E,GAAkB,CAAC,QAAQ,iBAAiB,MAAM,iBAAiB,KAAK,iBACvE,gBAAC,IACC,kBAAmB,GACnB,UAAW,MAAU,MAAM,QAAQ,QAAQ,MAC3C,MAAAwE,EACA,UAAA9L,EACA,kBAAmBmb,GAAoB,YAAc,KAAK,kBAAoB,OAC9E,SAAAnP,EACA,YAAa,KAAK,YAAY,OAAO,EACvC,CACF,CAEJ,CAEA,gBAAgBF,EAAe,CAC7B,KAAM,CAAE,UAAA9L,EAAW,YAAAkX,EAAa,MAAArW,EAAO,cAAAmU,CAAc,EAAI,KAAK,MACxD4Y,EAAU,SAAS/sB,EAAM,QAAQ,CAAC,EAAE,MAAM,EAAG,EAAE,EAAG,EAAE,EAEpDmgC,KAA4B,OAAI,CACpC,QAAS,OACT,cAAe,SACf,IAAKngC,EAAM,QAAQ,CAAC,CACtB,CAAC,EACD,OACE,gBAACyG,GAAkB,CAAC,QAAQ,OAAO,MAAM,OAAO,KAAK,UAAU,UAAW05B,CAAA,EACxE,gBAAC,IACC,UAAAhhC,EACA,aAAcgV,EAAc,MAC5B,YAAAkC,EACA,MAAOpL,EAAQ8hB,EACf,mBAAoB,KAAK,mBACzB,sBAAuB,KAAK,sBAC5B,gBAAiB,KAAK,gBACtB,eAAgB,KAAK,eACrB,SAAU,KAAK,aACf,YAAa,KAAK,YAAY,MAAM,EACpC,cAAe,KAAK,cACpB,oBAAqB,KAAK,oBAC1B,mBAAoB,KAAK,mBACzB,sBAAuB,KAAK,sBAC9B,CACF,CAEJ,CAEA,uBAAwB,CACtB,KAAM,CAAE,WAAAqT,EAAY,SAAAj1B,EAAU,6BAAA8nB,EAA8B,UAAA9zB,EAAW,mBAAAmb,EAAoB,QAAAd,CAAQ,EAAI,KAAK,MAE5G,OACE,gBAAC/S,GAAkB,CAAC,QAAQ,cAAc,MAAM,cAAc,KAAK,WACjE,gBAAC+sB,GAAA,CACC,cAAe4M,EAAW,KAC1B,SAAAj1B,EACA,QAASi1B,EAAW,QACpB,QAAA5mB,EACA,mBAAAc,EACA,UAAW,KAAK,YAAY,YAAY,EACxC,qBAAuBnd,GACrB81B,EAA6B9zB,EAAWhC,EAAS,KAAuB,UAAU,EAEtF,CACF,CAEJ,CAEA,sBAAuB,CACrB,KAAM,CAAE,UAAAgC,EAAW,UAAAkhC,EAAW,cAAAlsB,EAAe,mBAAAmG,CAAmB,EAAI,KAAK,MACnEqa,EAAiBra,EAAqBA,GAAoB,KAAO,UAEvE,OACE,gBAAC7T,GAAkB,CAAC,QAAQ,aAAa,MAAM,aAAa,KAAK,eAC/D,gBAAC6uB,GAAA,CACC,WAAY,KAAK,+BAA+BnhB,EAAc,MAAM,EACpE,UAAAhV,EACA,cAAekhC,EACf,eAAA1L,EACA,YAAa,KAAK,YAAY,WAAW,EAC3C,CACF,CAEJ,CAEA,uBAAwB,CACtB,KAAM,CAAE,cAAAxgB,CAAc,EAAI,KAAK,MAC/B,OACE,gBAAC1N,GAAkB,CAAC,QAAQ,cAAc,MAAM,cAAc,KAAK,QACjE,gBAACoV,GAA0B,CAAC,WAAY1H,EAAc,iBAAkB,CAC1E,CAEJ,CAEA,sBAAuB,CACrB,KAAM,CAAE,cAAAA,EAAe,UAAAhV,CAAU,EAAI,KAAK,MACpCoV,EAAaJ,EAAc,OAAO,OAAQmsB,GAAWA,EAAO,MAAM,6BAA+B,OAAO,EAE9G,OAEE/rB,EAAW,QACT,gBAAC9N,GAAkB,CAAC,QAAQ,SAAS,MAAM,SAAS,KAAK,YACvD,gBAAC04B,GAAA,CACC,UAAAhgC,EACA,WAAAoV,EACA,YAAa,KAAK,YAAY,WAAW,EACzC,cAAe,KAAK,cACtB,CACF,CAGN,CAEA,QAAS,CACP,KAAM,CACJ,mBAAA+F,EACA,UAAAnb,EACA,YAAA6gC,EACA,cAAA7rB,EACA,OAAA8C,EACA,MAAAjX,EACA,YAAAugC,EACA,UAAAC,EACA,kBAAAC,EACA,SAAAC,EACA,UAAAL,EACA,WAAAM,EACA,cAAAC,EACA,eAAAX,EACA,SAAA90B,EACA,eAAA01B,EACA,yBAAAC,EACA,4BAAAC,CACF,EAAI,KAAK,MACH,CAAE,WAAAC,EAAY,sBAAAC,CAAsB,EAAI,KAAK,MAC7CviC,EAAS,GAAUsB,CAAK,EACxBkhC,EAAa/sB,GAAiBA,EAAc,QAAU,MAAa,WACnEgtB,EAAkBH,IAAe,EACjCI,EAA6B,IAAC,OAAkB,EAAE,sBAClDC,EAAqBL,IAAe,EACpCM,EACJntB,EAAc,QAAU,MAAa,MACrC,CACEA,EAAc,WACdA,EAAc,YACdA,EAAc,gBACdA,EAAc,iBACdA,EAAc,YACdA,EAAc,oBACdA,EAAc,YACdA,EAAc,YAChB,EAAE,MAAOlH,GAAMA,EAAE,SAAW,CAAC,EAE/B,IAAIs0B,EACJ,MAAMhoB,EAA2BunB,GAA0B,WAE3D,MAD8B,GAAQvnB,GAA4BunB,GAA0B,mBAC/DC,IAAgC,SAC3DQ,EAAkB,gBAACx4B,GAAiB,CAAC,UAAA5J,EAAsB,aAAc4hC,CAAA,CAA6B,GAItG,gBAACv/B,GAA6B,CAAC,oBAAqB,KAAK,MAAM,SAC7D,gBAAC0Y,GAAA,CACC,UAAA/a,EACA,aAAc,KAAK,aACnB,uBAAwB,KAAK,uBAC7B,qBAAsB8hC,CAAA,CACxB,EACA,gBAAC,OACC,MAAO,CACL,SAAU,WACV,OAAQ,OACR,YAAajhC,EAAM,QAAQ,CAAC,CAC9B,GAEA,gBAAC,OAAI,UAAWtB,EAAO,SACpBuiC,GACC,gBAAC38B,GAAc,CAAC,SAAU,KAAK,cAAe,QAAS,6BAA6BnF,CAAS,GAAI,EAEnG,gBAACiH,GAAA,GACC,OAAQ,MAAU,MAAM,QAAQ,QAAQ,WACxC,kBAAoByX,GAAmB,KAAK,cAAgBA,GAAiB,OAC7E,oBAAmB,IAEnB,gBAAC,OAAI,UAAWnf,EAAO,kBACpB4b,EACC,gCACE,gBAAC7T,GAAkB,CAAC,QAAQ,UAAU,MAAM,UAAU,KAAK,QAAQ,iBAAkB,IACnF,gBAACN,GAAA,EAAc,CAAC,UAAWzH,EAAO,gBAC/B6iC,EACD,gBAAC9L,GAAS,CAAC,UAAAt2B,CAAA,CAAsB,EACjC,gBAAC0/B,GAAA,CAEC,0BACE5nB,GAAWsC,GAA4Be,EAAmB,KAAK,MAIjE,wBAAyB,GACzB,2BAAA8mB,EACA,wBAAyBD,EACzB,2BAA4BE,EAC5B,yBAA0B,KAAK,yBAC/B,yBAA0B,KAAK,sBAC/B,4BAA6B,KAAK,yBACpC,EACA,gBAACxI,GAAsB,CAAC,UAAA15B,CAAA,CAAsB,CAChD,CACF,EACA,gBAAC,MAAS,CAAC,SAAU,KAAK,SAAU,cAAa,IAC9C,CAAC,CAAE,MAAA8L,CAAM,IACJA,IAAU,EACL,KAIP,gBAAC,QAAK,aAAW,MAAGvM,EAAO,WAAW,EAAG,MAAO,CAAE,MAAAuM,CAAM,GACtD,gBAACu2B,EAAA,GAAkB,KAChBN,GACC,gCACGX,GAAeP,GACd,gBAACwB,EAAA,GAAkB,KAAE,KAAK,iBAAiBv2B,CAAK,CAAE,EAEnDw1B,GACC,gBAACe,EAAA,GAAkB,KAAE,KAAK,oBAAoBv2B,CAAK,CAAE,EAEtDu1B,GAAa,gBAACgB,EAAA,GAAkB,KAAE,KAAK,iBAAiBv2B,CAAK,CAAE,EAC/Dy1B,GAAY,gBAACc,EAAA,GAAkB,KAAE,KAAK,gBAAgBv2B,CAAK,CAAE,EAC7D21B,GACC,gBAACY,EAAA,GAAkB,KAAE,KAAK,qBAAqB,CAAE,EAElDvB,GACC,gBAACuB,EAAA,GAAkB,KAAE,KAAK,sBAAsB,CAAE,EAEnDnB,GAAa,gBAACmB,EAAA,GAAkB,KAAE,KAAK,qBAAqB,CAAE,EAC9DX,GACC,gBAACW,EAAA,GAAkB,KAAE,KAAK,sBAAsB,CAAE,EAEnDb,GAAc,gBAACa,EAAA,GAAkB,KAAE,KAAK,aAAav2B,CAAK,CAAE,EAC5Dq2B,GAAc,gBAACE,EAAA,GAAkB,KAAE,KAAK,aAAa,CAAE,CAC1D,EAEDL,GACC,gBAAC,IACC,MAAAl2B,EACA,UAAA9L,EACA,QAAS,KAAK,sBAChB,EAEDkiC,GACC,gBAAC,IACC,UAAAliC,EACA,MAAA8L,EACA,QAAS,KAAK,yBACd,SAAAE,EACA,QAASmP,EAAmB,KAAK,OAAS,GAC5C,CAEJ,CACF,CAGN,CACF,EAEA,KAAK,iBAAiB5b,EAAO,gBAAgB,CAEjD,CACF,CACF,CACF,CACF,CAEJ,CACF,CAEA,SAAS,GAAgB2C,EAAmB,CAAE,UAAAlC,CAAU,EAAiB,CACvE,MAAM25B,EAAUz3B,EAAM,QAChB,CAAE,YAAAgV,CAAY,EAAIyiB,EAClBx2B,EAAOw2B,EAAQ,MAAM35B,CAAS,EAE9BgM,KAAW,MAAY9J,EAAM,IAAI,EACjC,CACJ,mBAAAiZ,EACA,UAAAklB,EACA,QAAAhmB,EACA,OAAAvC,EACA,YAAA+oB,EACA,YAAArJ,EACA,WAAAtD,EACA,SAAAqN,EACA,YAAAH,EACA,UAAAC,EACA,UAAAH,EACA,WAAAM,EACA,cAAAr1B,EACA,cAAA6I,EACA,cAAAysB,EACA,eAAAX,EACA,kBAAAQ,EACA,qBAAAlN,EACA,4BAAAwN,CACF,EAAIz+B,EAEEiY,KAAU,MAAuBpb,CAAS,EAAEkC,CAAK,EACjD++B,EAAa7M,EAAqB,KAAuB,UAAU,EAEnEsN,EAAiB,CAAC,EAAET,EAAW,eAAiB,QAAa,CAAC/M,IAAe2M,GAAerJ,IAElG,MAAO,CACL,mBAAArc,EACA,UAAAklB,EACA,QAAAhmB,EACA,OAAAvC,EACA,YAAA+oB,EACA,WAAY3M,GAAc,OAC1B,cAAA/nB,EACA,cAAA6I,EACA,YAAAkC,EACA,SAAAlL,EACA,SAAAu1B,EACA,YAAAH,EACA,UAAAC,EACA,UAAAH,EACA,WAAAM,EACA,cAAAC,EACA,kBAAAH,EACA,eAAAR,EACA,YAAU,MAAQ5+B,CAAK,EACvB,QAAAkZ,EACA,WAAA6lB,EACA,eAAAS,EACA,4BAAAE,EACA,yBAA0BjI,EAAQ,wBACpC,CACF,CAEA,MAAM,GAAqB,CACzB,WAAU,MACV,cAAa,KACb,UAAS,KACT,eAAc,KACd,WAAU,KACV,gBAAe,MACf,YAAW,KACX,UAAS,KACT,6BAA4B,IAC9B,EAEM,MAAY,YAAQ,GAAiB,EAAkB,EAE7D,MAAe,MAAW,GAAUwG,EAAO,CAAC,EC1vBtCmC,MAAkB,OAAI,CAC1B,MAAO,uBACP,QAAS,OACT,cAAe,SACf,SAAU,QACV,OAAQ,MACV,CAAC,EAeD,SAASC,GAAgC,CAAE,UAAAviC,CAAU,EAAU,CAC7DwiC,GAAexiC,CAAS,EACxB,MAAMqM,KAAW,UAAO,IAAIo2B,GAAA,CAAa,EACnC1gC,KAAM,UAAO,IAAI,EAEvB,sBAAU,IAAM,CACd,MAAM2gC,EAAMr2B,EAAS,QACrB,MAAO,IAAMq2B,EAAI,mBAAmB,CACtC,EAAG,CAAC,CAAC,EAGH,gBAACz7B,GAAA,EAAe,CAAC,kBAAiB,IAChC,gBAAC,OAAI,UAAWq7B,GAAiB,IAAAvgC,EAAU,cAAa,MAAU,MAAM,QAAQ,QAAQ,WACtF,gBAAC,GAAO,CAAC,UAAA/B,EAAsB,SAAUqM,EAAS,QAAS,CAC7D,CACF,CAEJ,CAEA,SAAS,GAAgBnK,EAAmB2N,EAAc,CAGxD,MAAO,CAAE,KAFI3N,EAAM,QAAQ,MAAM2N,EAAM,SAAS,CAElC,CAChB,CAIO,MAAM8yB,MAFK,YAAQ,EAAe,EAEKJ,EAA+B,EAE7E,SAASC,GAAexiC,EAAmB,CACzC,MAAM4iC,KAAe,WAAQ,OAAM,MAAuB5iC,CAAS,EAAG,CAACA,CAAS,CAAC,EAC3E6iC,KAAU,UAAwC,EACxDA,EAAQ,WAAU,eAAYD,CAAY,KAE1C,aAAU,IACD,IAAM,IACX,OAAeC,EAAQ,SAAS,iBAAiB,CACnD,EACC,CAAC,CAAC,CACP,C,4BC/DO,SAASC,GAAoBC,EAA4B,CAC9D,MAAMC,KAAW,UAAiB,EAClCA,EAAS,WAAUC,GAAA,GAAY,SAAS,EACxC,MAAMC,KAAY,aAAO,OAAiB,CAAC,KAE3C,aAAU,IAAM,CACd,GAAI,CAACH,EAAO,OAAS,OAAOA,EAAO,OAAU,SAC3C,OAGF,IAAII,EACJ,GAAI,CACFA,EAAc,KAAK,MAAMJ,EAAO,KAAK,CACvC,MAAQ,CACN,MACF,CAEI,OAAOI,GAAgB,UAAYA,IAAgB,MAIvD,QAAQ,WACN,OAAO,OAAOA,CAAW,EAAE,IAAKhjC,GAE5B,CAACA,GACD,OAAOA,GAAS,UAChB,IAAC,MAAO,aAAcA,CAAI,GAC1B,CAACA,EAAK,YACN,OAAOA,EAAK,YAAe,SAEpB,QAAQ,OAAO,EAGjB+iC,EAAU,QAAQ,IAAI/iC,EAAK,UAAU,CAC7C,CACH,EACG,KAAMijC,GAAYA,EAAQ,OAAO,IAAW,EAAE,IAAKxb,GAAWA,EAAO,KAAK,CAAC,EAC3E,KAAMmT,GAAgB,CACrB,GAAI,CAACiI,EAAS,QACZ,OAGF,MAAMK,EAAQtI,EAAY,IAAK9H,GAAOA,EAAG,IAAI,EAE7C,GAAIoQ,EAAM,SAAW,EAAG,CACtB,IAAO,SAAS,MAAQ,GAAGL,EAAS,QAAQ,KAAK,IAAI,MAAMM,GAAA,EAAS,QAAQ,GAC5E,MACF,CAEA,IAAO,SAAS,MAAQ,GAAGN,EAAS,QAAQ,KAAK,IAAI,MAAMK,EAAM,KAAK,KAAK,CAAC,MAAMC,GAAA,EAAS,QAAQ,EACrG,CAAC,CACL,EAAG,CAACP,EAAO,KAAK,CAAC,CACnB,CC9CO,SAASQ,IAAuB,CACrC,KAAM,CAAE,YAAAC,CAAY,KAAI,OAAW,EAC7BlkC,KAAW,eAAY,KAE7B,aAAU,IAAM,CACdkkC,EAAY,uBAAuB,EAAK,EAExC,MAAMC,EAA6B,CAAC,EAEpC,OAAAA,EAAS,QACP,OAAa,EAAE,UAAU,MAAmB,IAAM,CAChDnkC,KAAS,OAAiB,CAAC,CAC7B,CAAC,CACH,EAEAmkC,EAAS,QACP,OAAa,EAAE,UAAU,MAAiBtlC,GAAU,CAClDmB,KAAS,OAAUnB,EAAM,QAAQ,SAAS,CAAC,CAC7C,CAAC,CACH,EAEAslC,EAAS,QACP,OAAa,EAAE,UAAU,MAAetlC,GAAU,CAChDmB,KAAS,OAAQnB,EAAM,QAAQ,KAAK,CAAC,CACvC,CAAC,CACH,EAEAslC,EAAS,QACP,OAAa,EAAE,UAAU,MAAe,IAAM,CAC5CnkC,KAAS,OAAyB,CAAC,CACrC,CAAC,CACH,EAEAmkC,EAAS,QACP,OAAa,EAAE,UAAU,MAAgB,IAAM,CAC7CnkC,KAAS,OAA4B,CAAC,CACxC,CAAC,CACH,EAEO,IAAM,CACXmkC,EAAS,QAASC,GAAMA,EAAE,YAAY,CAAC,CACzC,CACF,EAAG,CAACpkC,EAAUkkC,CAAW,CAAC,CAC5B,CClDO,MAAMG,GAAuBn0B,GAAqB,CACvD,MAAMlQ,KAAW,eAAY,EACvB,CAAE,MAAOskC,CAAY,KAAI9N,GAAA,GAAc,EACvCz2B,KAAQ,eAAY,IAAkB,EACtCwkC,KAAW,eAAY,IAAO,EAC9B,CAACC,EAAqBC,CAAsB,KAAI,YAAS,EAAG,EAE5DC,KAAe,eAAa9hC,GAAUA,EAAM,OAAO,EAEnD+hC,EAAmB71B,GAAiB,CACxC,MAAM81B,EAAiBN,EAAc,EAC/BO,KAAiB,YAAQ/1B,EAAM81B,EAAiB,IAAKA,EAAiB,GAAG,EAE7E5kC,EADE6kC,KACO,MAAsB,CAAE,gBAAiB,MAAU,CAAC,KAG3D,MAAsB,CACpB,gBAAiB/1B,EAAO81B,EAAiB7kC,EAAM,CAAC,EAAE,CAAC,EAAIA,EAAM,CAAC,EAAE,CAAC,CACnE,CAAC,CAL2D,EAShE0kC,EAAuB31B,EAAOw1B,CAAW,CAC3C,EAEA,IAAIQ,EAAY,EAChB,OAAIP,IACE,CAACG,EAAa,gBAAkBA,EAAa,eAC/CI,EAAYJ,EAAa,iBAAmB3kC,EAAM,CAAC,EAAE,CAAC,EAAIukC,EAAcp0B,EAAWA,EAC1Ew0B,EAAa,eACtBI,EAAY,KAAK,MAAMR,EAAc,CAAC,EAC7BE,IAAwB,SACjCM,EAAYR,EAAcE,IAIvB,CAAE,gBAAAG,EAAiB,UAAAG,CAAU,CACtC,EC/BO,SAASC,IAAgB,CAC9B,KAAM,CAAE,SAAA3jC,CAAS,KAAI,OAAW,KAEhC,aAAU,IAAM,CACd,MAAM4jC,EAAe5jC,EAAS,gBAAgB,GAC1C4jC,EAAa,MAAQA,EAAa,KACpC5jC,EAAS,QAAQ,CAAE,KAAM,OAAW,GAAI,MAAU,EAAG,EAAI,CAE7D,EAAG,CAACA,CAAQ,CAAC,CACf,CCDA,MAAM6jC,GAAiB,IAER,SAASC,GAAY30B,EAA2D,CAC7F,MAAMtQ,KAAS,MAAW,EAAS,EAC7BsB,KAAQ,MAAU,EACxBwjC,GAAc,KACdI,GAAA,GAAa50B,EAAM,WAAW,EAM9BizB,GAAoBjzB,EAAM,WAAW,EACrC,KAAM,CAAE,OAAA60B,CAAO,KAAI,OAAW,EACxB1B,KAAWC,GAAA,GAAY,SAAS,EAChC,CAAE,gBAAAgB,EAAiB,UAAAG,CAAU,EAAIT,GAAoBY,EAAc,EAEnEllC,KAAQ,eAAY,IAAkB,EACtCwkC,KAAW,eAAY,IAAO,EAC9BpkC,KAAqB,eAAY,IAAwB,EACzDklC,EAA2B9iC,EAAA,EAAO,eAAe,eAAiBpC,GAAoB,YAAc,IAE1G,sBAAU,IAAM,CAGdilC,EAAO,OAAO,CAAE,WAAY1B,CAAS,CAAC,CACxC,EAAG,CAAC0B,EAAQ1B,CAAQ,CAAC,EAErBO,GAAqB,EAGnB,gBAAC,OACC,aAAW,MAAGhkC,EAAO,qBAAsB,CACzC,CAACA,EAAO,2BAA2B,EAAGolC,CACxC,CAAC,GAED,gBAACxjC,GAAc,IAAC,EACfwjC,GAA4B,gBAACvlC,GAAwB,CAAC,MAAAC,CAAA,CAAc,EACrE,gBAACulC,GAAA,GACC,iBAAiB,WACjB,SAAUR,EACV,QAASG,GACT,QAASA,GAAiB,GAC1B,QAAQ,SACR,aAAcV,EACd,YAAac,EAA2B,CAAE,OAAQ,eAAe9jC,EAAM,QAAQ,CAAC,CAAC,EAAG,EAAI,CAAC,EACzF,UAAW,CAAE,SAAU,OAAQ,QAAS,OAAQ,cAAe,QAAS,EACxE,eAAiBuN,GAASA,GAAQ61B,EAAgB71B,CAAI,GAErD/O,EAAM,IAAI,CAAC,CAACW,CAAS,IAElB,gBAACqiC,EAAA,GAAkB,CAAC,IAAKriC,EAAW,MAAM,QACxC,gBAAC2iC,GAAoB,CAAC,UAAA3iC,CAAA,CAAsB,CAC9C,CAEH,CACH,CACF,CAEJ,CAEA,MAAM,GAAaa,IACV,CACL,wBAAsB,OAAI,CACxB,MAAO,OACP,SAAU,EACV,UAAW,EACX,OAAQ,OACR,SAAU,UACZ,CAAC,EACD,+BAA6B,OAAI,CAC/B,WAAY,aAAaA,EAAM,OAAO,QAAQ,IAAI,GAClD,YAAa,aAAaA,EAAM,OAAO,QAAQ,IAAI,GACnD,aAAc,aAAaA,EAAM,OAAO,QAAQ,IAAI,GACpD,SAAU,QACZ,CAAC,CACH,E,qDClGEuc,EAAc,SAAUynB,EAAUC,EAAO,CACzC,IAAIC,MAAgB,UAAO,UAAY,CAAE,CAAC,KAC1C,aAAU,UAAY,CAClBA,GAAc,QAAUF,CAC5B,CAAC,KACD,aAAU,UAAY,CAClB,GAAIC,IAAU,KAAM,CAChB,IAAIE,GAAa,YAAY,UAAY,CAAE,OAAOD,GAAc,QAAQ,CAAG,EAAGD,GAAS,CAAC,EACxF,OAAO,UAAY,CAAE,OAAO,cAAcE,EAAU,CAAG,CAC3D,CAEJ,EAAG,CAACF,CAAK,CAAC,CACd,EACA,QAAe1nB,C","sources":["webpack://grafana/./public/app/features/correlations/Forms/types.ts","webpack://grafana/./node_modules/react-use/esm/useBeforeUnload.js","webpack://grafana/./public/app/features/explore/CorrelationUnsavedChangesModal.tsx","webpack://grafana/./public/app/features/explore/correlationEditLogic.ts","webpack://grafana/./public/app/features/explore/CorrelationEditorModeBar.tsx","webpack://grafana/./public/app/features/explore/ExploreActions.tsx","webpack://grafana/./node_modules/react-use/esm/useScroll.js","webpack://grafana/./public/app/features/explore/ContentOutline/ContentOutlineContext.tsx","webpack://grafana/./public/app/features/explore/ContentOutline/ContentOutlineItemButton.tsx","webpack://grafana/./public/app/features/explore/ContentOutline/ContentOutline.tsx","webpack://grafana/./public/app/features/explore/ContentOutline/ContentOutlineItem.tsx","webpack://grafana/./public/app/features/explore/CorrelationTransformationAddModal.tsx","webpack://grafana/./public/app/features/explore/CorrelationHelper.tsx","webpack://grafana/./public/app/features/explore/CustomContainer.tsx","webpack://grafana/./node_modules/re-resizable/lib/resizer.js","webpack://grafana/./node_modules/re-resizable/lib/index.js","webpack://grafana/./public/app/features/explore/ExploreDrawer.tsx","webpack://grafana/./public/app/features/explore/ExploreQueryInspector.tsx","webpack://grafana/./public/app/features/explore/TimeSyncButton.tsx","webpack://grafana/./public/app/features/explore/ExploreTimeControls.tsx","webpack://grafana/./public/app/features/explore/LiveTailButton.tsx","webpack://grafana/./public/app/features/explore/ShortLinkButtonMenu.tsx","webpack://grafana/./public/app/features/explore/extensions/ToolbarExtensionPoint.tsx","webpack://grafana/./public/app/features/explore/useLiveTailControls.ts","webpack://grafana/./public/app/features/explore/ExploreToolbar.tsx","webpack://grafana/./public/app/features/explore/FlameGraph/FlameGraphExploreContainer.tsx","webpack://grafana/./public/app/features/explore/ElapsedTime.tsx","webpack://grafana/./public/app/features/explore/Logs/LiveLogs.tsx","webpack://grafana/./public/app/features/logs/components/InfiniteScroll.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsFeedback.tsx","webpack://grafana/./public/app/features/explore/MetaInfoText.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsTable.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsMetaRow.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsNavigationPages.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsNavigation.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsColumnSearch.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsTableEmptyFields.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsTableNavField.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsTableActiveFields.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsTableAvailableFields.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsTableMultiSelect.tsx","webpack://grafana/./public/app/features/explore/Logs/utils/uFuzzy.ts","webpack://grafana/./public/app/features/explore/Logs/LogsTableWrap.tsx","webpack://grafana/./public/app/features/explore/SupplementaryResultError.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsVolumePanel.tsx","webpack://grafana/./public/app/features/explore/Logs/utils/logsVolumeResponse.ts","webpack://grafana/./public/app/features/explore/Logs/LogsVolumePanelList.tsx","webpack://grafana/./public/app/features/explore/Logs/Logs.tsx","webpack://grafana/./public/app/features/explore/Logs/utils/LogsCrossFadeTransition.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsContainer.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsSamplePanel.tsx","webpack://grafana/./public/app/features/explore/NoData.tsx","webpack://grafana/./public/app/features/explore/NoDataSourceCallToAction.tsx","webpack://grafana/./public/app/features/explore/NodeGraph/NodeGraphContainer.tsx","webpack://grafana/./public/app/features/explore/QueryRows.tsx","webpack://grafana/./public/app/features/explore/PrometheusListView/RawListContainer.tsx","webpack://grafana/./public/app/features/explore/RawPrometheus/RawPrometheusContainer.tsx","webpack://grafana/./public/app/core/components/Animations/FadeIn.tsx","webpack://grafana/./public/app/features/explore/ErrorContainer.tsx","webpack://grafana/./public/app/features/explore/ResponseErrorContainer.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryCard.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryQueriesTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistorySettingsTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryStarredTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistory.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryContainer.tsx","webpack://grafana/./public/app/features/explore/SecondaryActions.tsx","webpack://grafana/./public/app/features/explore/Table/TableContainer.tsx","webpack://grafana/./public/app/features/explore/TraceView/TraceViewContainer.tsx","webpack://grafana/./public/app/features/explore/Explore.tsx","webpack://grafana/./public/app/features/explore/ExplorePaneContainer.tsx","webpack://grafana/./public/app/features/explore/hooks/useExplorePageTitle.ts","webpack://grafana/./public/app/features/explore/hooks/useKeyboardShortcuts.ts","webpack://grafana/./public/app/features/explore/hooks/useSplitSizeUpdater.ts","webpack://grafana/./public/app/features/explore/hooks/useTimeSrvFix.ts","webpack://grafana/./public/app/features/explore/ExplorePage.tsx","webpack://grafana/./node_modules/react-use/esm/useInterval.js"],"sourcesContent":["import { SupportedTransformationType } from '@grafana/data';\nimport { t } from 'app/core/internationalization';\n\nimport { CorrelationConfig } from '../types';\n\nexport interface FormDTO {\n  sourceUID: string;\n  targetUID: string;\n  label: string;\n  description: string;\n  config: CorrelationConfig;\n}\n\nexport type EditFormDTO = Omit<FormDTO, 'targetUID' | 'sourceUID'>;\n\nexport type TransformationDTO = {\n  type: SupportedTransformationType;\n  expression?: string;\n  mapValue?: string;\n};\n\nexport interface TransformationFieldDetails {\n  show: boolean;\n  required?: boolean;\n  helpText?: string;\n}\n\ninterface SupportedTransformationTypeDetails {\n  label: string;\n  value: SupportedTransformationType;\n  description?: string;\n  expressionDetails: TransformationFieldDetails;\n  mapValueDetails: TransformationFieldDetails;\n}\n\nexport function getSupportedTransTypeDetails(\n  transType: SupportedTransformationType\n): SupportedTransformationTypeDetails {\n  switch (transType) {\n    case SupportedTransformationType.Logfmt:\n      return {\n        label: t('correlations.trans-details.logfmt-label', 'Logfmt'),\n        value: SupportedTransformationType.Logfmt,\n        description: t(\n          'correlations.trans-details.logfmt-description',\n          'Parse provided field with logfmt to get variables'\n        ),\n        expressionDetails: { show: false },\n        mapValueDetails: { show: false },\n      };\n    case SupportedTransformationType.Regex:\n      return {\n        label: t('correlations.trans-details.regex-label', 'Regular expression'),\n        value: SupportedTransformationType.Regex,\n        description: t(\n          'correlations.trans-details.regex-description',\n          'Field will be parsed with regex. Use named capture groups to return multiple variables, or a single unnamed capture group to add variable to named map value. Regex is case insensitive.'\n        ),\n        expressionDetails: {\n          show: true,\n          required: true,\n          helpText: t(\n            'correlations.trans-details.regex-expression',\n            'Use capture groups to extract a portion of the field.'\n          ),\n        },\n        mapValueDetails: {\n          show: true,\n          required: false,\n          helpText: t(\n            'correlations.trans-details.regex-map-values',\n            'Defines the name of the variable if the capture group is not named.'\n          ),\n        },\n      };\n    default:\n      return {\n        label: transType,\n        value: transType,\n        expressionDetails: { show: false },\n        mapValueDetails: { show: false },\n      };\n  }\n}\n\nexport const getTransformOptions = () => {\n  return Object.values(SupportedTransformationType).map((transformationType) => {\n    const transType = getSupportedTransTypeDetails(transformationType);\n    return {\n      label: transType.label,\n      value: transType.value,\n      description: transType.description,\n    };\n  });\n};\n","import { useCallback, useEffect } from 'react';\nimport { off, on } from './misc/util';\nvar useBeforeUnload = function (enabled, message) {\n    if (enabled === void 0) { enabled = true; }\n    var handler = useCallback(function (event) {\n        var finalEnabled = typeof enabled === 'function' ? enabled() : true;\n        if (!finalEnabled) {\n            return;\n        }\n        event.preventDefault();\n        if (message) {\n            event.returnValue = message;\n        }\n        return message;\n    }, [enabled, message]);\n    useEffect(function () {\n        if (!enabled) {\n            return;\n        }\n        on(window, 'beforeunload', handler);\n        return function () { return off(window, 'beforeunload', handler); };\n    }, [enabled, handler]);\n};\nexport default useBeforeUnload;\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { Button, Modal } from '@grafana/ui';\n\ninterface UnsavedChangesModalProps {\n  message: string;\n  onDiscard: () => void;\n  onCancel: () => void;\n  onSave: () => void;\n}\n\nexport const CorrelationUnsavedChangesModal = ({ onSave, onDiscard, onCancel, message }: UnsavedChangesModalProps) => {\n  return (\n    <Modal\n      isOpen={true}\n      title={`Unsaved changes to correlation`}\n      onDismiss={onCancel}\n      icon=\"exclamation-triangle\"\n      className={css({ width: '600px' })}\n    >\n      <h5>{message}</h5>\n      <Modal.ButtonRow>\n        <Button variant=\"secondary\" onClick={onCancel} fill=\"outline\">\n          Cancel\n        </Button>\n        <Button variant=\"destructive\" onClick={onDiscard}>\n          Continue without saving\n        </Button>\n        <Button variant=\"primary\" onClick={onSave}>\n          Save correlation\n        </Button>\n      </Modal.ButtonRow>\n    </Modal>\n  );\n};\n","import { template } from 'lodash';\n\nimport { CORRELATION_EDITOR_POST_CONFIRM_ACTION } from 'app/types';\n\nenum CONSEQUENCES {\n  SOURCE_TARGET_CHANGE = 'cause the query in the right pane to be re-ran and links added to that data',\n  FULL_QUERY_LOSS = 'lose the changed query',\n  FULL_CORR_LOSS = 'cause the correlation in progress to be lost',\n  INVALID_VAR = 'remove the variables, and your changed query may no longer be valid',\n}\n\n// returns a string if the modal should show, with what the message string should be\n// returns undefined if the modal shouldn't show\nexport const showModalMessage = (\n  action: CORRELATION_EDITOR_POST_CONFIRM_ACTION,\n  isActionLeft: boolean,\n  dirtyCorrelation: boolean,\n  dirtyQueryEditor: boolean\n) => {\n  const messageTemplate = template(\n    '<%= actionStr %> will <%= consequenceStr %>. Would you like to save before continuing?'\n  );\n  let actionStr = '';\n  let consequenceStr = '';\n\n  // dirty correlation message always takes priority over dirty query\n  if (action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_PANE) {\n    actionStr = 'Closing the pane';\n    if (isActionLeft) {\n      if (dirtyCorrelation) {\n        consequenceStr = CONSEQUENCES.FULL_CORR_LOSS;\n      } else if (dirtyQueryEditor) {\n        consequenceStr = CONSEQUENCES.SOURCE_TARGET_CHANGE;\n      } else {\n        return undefined;\n      }\n    } else {\n      // right pane close\n      if (dirtyCorrelation) {\n        consequenceStr = CONSEQUENCES.FULL_CORR_LOSS;\n      } else if (dirtyQueryEditor) {\n        consequenceStr = CONSEQUENCES.FULL_QUERY_LOSS;\n      } else {\n        return undefined;\n      }\n    }\n  } else if (action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CHANGE_DATASOURCE) {\n    actionStr = 'Changing the datasource';\n    if (isActionLeft) {\n      if (dirtyCorrelation) {\n        consequenceStr = CONSEQUENCES.FULL_CORR_LOSS;\n      } else {\n        return undefined;\n      }\n    } else {\n      // right datasource change\n      if (dirtyQueryEditor) {\n        consequenceStr = CONSEQUENCES.FULL_QUERY_LOSS;\n      } else {\n        return undefined;\n      }\n    }\n  } else if (action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_EDITOR) {\n    actionStr = 'Closing the editor';\n    if (dirtyCorrelation) {\n      consequenceStr = CONSEQUENCES.FULL_CORR_LOSS;\n    } else if (dirtyQueryEditor) {\n      consequenceStr = CONSEQUENCES.INVALID_VAR;\n    } else {\n      return undefined;\n    }\n  }\n  return messageTemplate({ actionStr, consequenceStr });\n};\n","import { css } from '@emotion/css';\nimport React, { useEffect, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { useBeforeUnload, useUnmount } from 'react-use';\n\nimport { GrafanaTheme2, colorManipulator } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Button, HorizontalGroup, Icon, Tooltip, useStyles2 } from '@grafana/ui';\nimport { CORRELATION_EDITOR_POST_CONFIRM_ACTION, ExploreItemState, useDispatch, useSelector } from 'app/types';\n\nimport { CorrelationUnsavedChangesModal } from './CorrelationUnsavedChangesModal';\nimport { showModalMessage } from './correlationEditLogic';\nimport { saveCurrentCorrelation } from './state/correlations';\nimport { changeDatasource } from './state/datasource';\nimport { changeCorrelationHelperData } from './state/explorePane';\nimport { changeCorrelationEditorDetails, splitClose } from './state/main';\nimport { runQueries } from './state/query';\nimport { selectCorrelationDetails, selectIsHelperShowing } from './state/selectors';\n\nexport const CorrelationEditorModeBar = ({ panes }: { panes: Array<[string, ExploreItemState]> }) => {\n  const dispatch = useDispatch();\n  const styles = useStyles2(getStyles);\n  const correlationDetails = useSelector(selectCorrelationDetails);\n  const isHelperShowing = useSelector(selectIsHelperShowing);\n  const [saveMessage, setSaveMessage] = useState<string | undefined>(undefined); // undefined means do not show\n\n  // handle refreshing and closing the tab\n  useBeforeUnload(correlationDetails?.correlationDirty || false, 'Save correlation?');\n  useBeforeUnload(\n    (!correlationDetails?.correlationDirty && correlationDetails?.queryEditorDirty) || false,\n    'The query editor was changed. Save correlation before continuing?'\n  );\n\n  // decide if we are displaying prompt, perform action if not\n  useEffect(() => {\n    if (correlationDetails?.isExiting) {\n      const { correlationDirty, queryEditorDirty } = correlationDetails;\n      let isActionLeft = undefined;\n      let action = undefined;\n      if (correlationDetails.postConfirmAction) {\n        isActionLeft = correlationDetails.postConfirmAction.isActionLeft;\n        action = correlationDetails.postConfirmAction.action;\n      } else {\n        // closing the editor only\n        action = CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_EDITOR;\n        isActionLeft = false;\n      }\n\n      const modalMessage = showModalMessage(action, isActionLeft, correlationDirty, queryEditorDirty);\n      if (modalMessage !== undefined) {\n        setSaveMessage(modalMessage);\n      } else {\n        // if no prompt, perform action\n        if (\n          action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CHANGE_DATASOURCE &&\n          correlationDetails.postConfirmAction\n        ) {\n          const { exploreId, changeDatasourceUid } = correlationDetails?.postConfirmAction;\n          if (exploreId && changeDatasourceUid) {\n            dispatch(\n              changeDatasource({ exploreId, datasource: changeDatasourceUid, options: { importQueries: true } })\n            );\n            dispatch(\n              changeCorrelationEditorDetails({\n                isExiting: false,\n              })\n            );\n          }\n        } else if (\n          action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_PANE &&\n          correlationDetails.postConfirmAction\n        ) {\n          const { exploreId } = correlationDetails?.postConfirmAction;\n          if (exploreId !== undefined) {\n            dispatch(splitClose(exploreId));\n            dispatch(\n              changeCorrelationEditorDetails({\n                isExiting: false,\n              })\n            );\n          }\n        } else if (action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_EDITOR) {\n          dispatch(\n            changeCorrelationEditorDetails({\n              editorMode: false,\n            })\n          );\n        }\n      }\n    }\n  }, [correlationDetails, dispatch, isHelperShowing]);\n\n  // clear data when unmounted\n  useUnmount(() => {\n    dispatch(\n      changeCorrelationEditorDetails({\n        editorMode: false,\n        isExiting: false,\n        correlationDirty: false,\n        label: undefined,\n        description: undefined,\n        canSave: false,\n      })\n    );\n\n    panes.forEach((pane) => {\n      dispatch(\n        changeCorrelationHelperData({\n          exploreId: pane[0],\n          correlationEditorHelperData: undefined,\n        })\n      );\n      dispatch(runQueries({ exploreId: pane[0] }));\n    });\n  });\n\n  const resetEditor = () => {\n    dispatch(\n      changeCorrelationEditorDetails({\n        editorMode: true,\n        isExiting: false,\n        correlationDirty: false,\n        label: undefined,\n        description: undefined,\n        canSave: false,\n      })\n    );\n\n    panes.forEach((pane) => {\n      dispatch(\n        changeCorrelationHelperData({\n          exploreId: pane[0],\n          correlationEditorHelperData: undefined,\n        })\n      );\n      dispatch(runQueries({ exploreId: pane[0] }));\n    });\n  };\n\n  const closePane = (exploreId: string) => {\n    setSaveMessage(undefined);\n    dispatch(splitClose(exploreId));\n    reportInteraction('grafana_explore_split_view_closed');\n  };\n\n  const changeDatasourcePostAction = (exploreId: string, datasourceUid: string) => {\n    setSaveMessage(undefined);\n    dispatch(changeDatasource({ exploreId, datasource: datasourceUid, options: { importQueries: true } }));\n  };\n\n  const saveCorrelationPostAction = (skipPostConfirmAction: boolean) => {\n    dispatch(\n      saveCurrentCorrelation(\n        correlationDetails?.label,\n        correlationDetails?.description,\n        correlationDetails?.transformations\n      )\n    );\n    if (!skipPostConfirmAction && correlationDetails?.postConfirmAction !== undefined) {\n      const { exploreId, action, changeDatasourceUid } = correlationDetails?.postConfirmAction;\n      if (action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_PANE) {\n        closePane(exploreId);\n        resetEditor();\n      } else if (\n        action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CHANGE_DATASOURCE &&\n        changeDatasourceUid !== undefined\n      ) {\n        changeDatasource({ exploreId, datasource: changeDatasourceUid });\n        resetEditor();\n      }\n    } else {\n      dispatch(changeCorrelationEditorDetails({ editorMode: false, correlationDirty: false, isExiting: false }));\n    }\n  };\n\n  return (\n    <>\n      {/* Handle navigating outside of Explore */}\n      <Prompt\n        message={(location) => {\n          if (\n            location.pathname !== '/explore' &&\n            (correlationDetails?.editorMode || false) &&\n            (correlationDetails?.correlationDirty || false)\n          ) {\n            return 'You have unsaved correlation data. Continue?';\n          } else {\n            return true;\n          }\n        }}\n      />\n\n      {saveMessage !== undefined && (\n        <CorrelationUnsavedChangesModal\n          onDiscard={() => {\n            if (correlationDetails?.postConfirmAction !== undefined) {\n              const { exploreId, action, changeDatasourceUid } = correlationDetails?.postConfirmAction;\n              if (action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_PANE) {\n                closePane(exploreId);\n              } else if (\n                action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CHANGE_DATASOURCE &&\n                changeDatasourceUid !== undefined\n              ) {\n                changeDatasourcePostAction(exploreId, changeDatasourceUid);\n              }\n              dispatch(changeCorrelationEditorDetails({ isExiting: false }));\n            } else {\n              // exit correlations mode\n              // if we are discarding the in progress correlation, reset everything\n              // this modal only shows if the editorMode is false, so we just need to update the dirty state\n              dispatch(\n                changeCorrelationEditorDetails({\n                  editorMode: false,\n                  correlationDirty: false,\n                  isExiting: false,\n                })\n              );\n            }\n          }}\n          onCancel={() => {\n            // if we are cancelling the exit, set the editor mode back to true and hide the prompt\n            dispatch(changeCorrelationEditorDetails({ isExiting: false }));\n            setSaveMessage(undefined);\n          }}\n          onSave={() => {\n            saveCorrelationPostAction(false);\n          }}\n          message={saveMessage}\n        />\n      )}\n      <div className={styles.correlationEditorTop}>\n        <HorizontalGroup spacing=\"md\" justify=\"flex-end\">\n          <Tooltip content=\"Correlations editor in Explore is an experimental feature.\">\n            <Icon className={styles.iconColor} name=\"info-circle\" size=\"xl\" />\n          </Tooltip>\n          <Button\n            variant=\"secondary\"\n            disabled={!correlationDetails?.canSave}\n            fill=\"outline\"\n            className={correlationDetails?.canSave ? styles.buttonColor : styles.disabledButtonColor}\n            onClick={() => {\n              saveCorrelationPostAction(true);\n            }}\n          >\n            Save\n          </Button>\n          <Button\n            variant=\"secondary\"\n            fill=\"outline\"\n            className={styles.buttonColor}\n            icon=\"times\"\n            onClick={() => {\n              dispatch(changeCorrelationEditorDetails({ isExiting: true }));\n              reportInteraction('grafana_explore_correlation_editor_exit_pressed');\n            }}\n          >\n            Exit correlation editor\n          </Button>\n        </HorizontalGroup>\n      </div>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const contrastColor = theme.colors.getContrastText(theme.colors.primary.main);\n  const lighterBackgroundColor = colorManipulator.lighten(theme.colors.primary.main, 0.1);\n  const darkerBackgroundColor = colorManipulator.darken(theme.colors.primary.main, 0.2);\n\n  const disabledColor = colorManipulator.darken(contrastColor, 0.2);\n\n  return {\n    correlationEditorTop: css({\n      backgroundColor: theme.colors.primary.main,\n      marginTop: '3px',\n      padding: theme.spacing(1),\n    }),\n    iconColor: css({\n      color: contrastColor,\n    }),\n    buttonColor: css({\n      color: contrastColor,\n      borderColor: contrastColor,\n      '&:hover': {\n        color: contrastColor,\n        borderColor: contrastColor,\n        backgroundColor: lighterBackgroundColor,\n      },\n    }),\n    // important needed to override disabled state styling\n    disabledButtonColor: css({\n      color: `${disabledColor} !important`,\n      backgroundColor: `${darkerBackgroundColor} !important`,\n    }),\n  };\n};\n","import { useRegisterActions, useKBar, Action, Priority } from 'kbar';\nimport { useEffect, useState } from 'react';\n\nimport { config } from '@grafana/runtime';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { MIXED_DATASOURCE_NAME } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { AccessControlAction, useDispatch, useSelector } from 'app/types';\n\nimport { splitOpen, splitClose, changeCorrelationEditorDetails } from './state/main';\nimport { runQueries } from './state/query';\nimport { isSplit, selectPanes } from './state/selectors';\n\n// FIXME: this should use the new IDs\nexport const ExploreActions = () => {\n  const [actions, setActions] = useState<Action[]>([]);\n  const { query } = useKBar();\n  const dispatch = useDispatch();\n  const panes = useSelector(selectPanes);\n  const splitted = useSelector(isSplit);\n\n  const canWriteCorrelations = contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n\n  useEffect(() => {\n    const keys = Object.keys(panes);\n    const exploreSection = {\n      name: 'Explore',\n      priority: Priority.HIGH + 1,\n    };\n\n    const actionsArr: Action[] = [];\n\n    if (splitted) {\n      actionsArr.push({\n        id: 'explore/run-query-left',\n        name: 'Run query (left)',\n        keywords: 'query left',\n        perform: () => {\n          dispatch(runQueries({ exploreId: keys[0] }));\n        },\n        section: exploreSection,\n      });\n      if ([panes[1]]) {\n        // we should always have the right exploreId if split\n        actionsArr.push({\n          id: 'explore/run-query-right',\n          name: 'Run query (right)',\n          keywords: 'query right',\n          perform: () => {\n            dispatch(runQueries({ exploreId: keys[1] }));\n          },\n          section: exploreSection,\n        });\n        actionsArr.push({\n          id: 'explore/split-view-close-left',\n          name: 'Close split view left',\n          keywords: 'split',\n          perform: () => {\n            dispatch(splitClose(keys[0]));\n          },\n          section: exploreSection,\n        });\n        actionsArr.push({\n          id: 'explore/split-view-close-right',\n          name: 'Close split view right',\n          keywords: 'split',\n          perform: () => {\n            dispatch(splitClose(keys[1]));\n          },\n          section: exploreSection,\n        });\n      }\n    } else {\n      // command palette doesn't know what pane we're in, only show option if not split and no datasource is mixed\n      const hasMixed = Object.values(panes).some((pane) => {\n        return pane?.datasourceInstance?.uid === MIXED_DATASOURCE_NAME;\n      });\n\n      if (config.featureToggles.correlations && canWriteCorrelations && !hasMixed) {\n        actionsArr.push({\n          id: 'explore/correlations-editor',\n          name: 'Correlations editor',\n          perform: () => {\n            dispatch(changeCorrelationEditorDetails({ editorMode: true }));\n            dispatch(runQueries({ exploreId: keys[0] }));\n          },\n          section: exploreSection,\n        });\n      }\n\n      actionsArr.push({\n        id: 'explore/run-query',\n        name: 'Run query',\n        keywords: 'query',\n        perform: () => {\n          dispatch(runQueries({ exploreId: keys[0] }));\n        },\n        section: exploreSection,\n      });\n      actionsArr.push({\n        id: 'explore/split-view-open',\n        name: 'Open split view',\n        keywords: 'split',\n        perform: () => {\n          dispatch(splitOpen());\n        },\n        section: exploreSection,\n      });\n    }\n    setActions(actionsArr);\n  }, [panes, splitted, query, dispatch, canWriteCorrelations]);\n\n  useRegisterActions(!query ? [] : actions, [actions, query]);\n\n  return null;\n};\n","import { useEffect } from 'react';\nimport useRafState from './useRafState';\nimport { off, on } from './misc/util';\nvar useScroll = function (ref) {\n    if (process.env.NODE_ENV === 'development') {\n        if (typeof ref !== 'object' || typeof ref.current === 'undefined') {\n            console.error('`useScroll` expects a single ref argument.');\n        }\n    }\n    var _a = useRafState({\n        x: 0,\n        y: 0,\n    }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var handler = function () {\n            if (ref.current) {\n                setState({\n                    x: ref.current.scrollLeft,\n                    y: ref.current.scrollTop,\n                });\n            }\n        };\n        if (ref.current) {\n            on(ref.current, 'scroll', handler, {\n                capture: false,\n                passive: true,\n            });\n        }\n        return function () {\n            if (ref.current) {\n                off(ref.current, 'scroll', handler);\n            }\n        };\n    }, [ref]);\n    return state;\n};\nexport default useScroll;\n","import { uniqueId } from 'lodash';\nimport React, { useState, useContext, createContext, ReactNode, useCallback, useRef, useEffect } from 'react';\n\nimport { ContentOutlineItemBaseProps } from './ContentOutlineItem';\n\nexport interface ContentOutlineItemContextProps extends ContentOutlineItemBaseProps {\n  id: string;\n  ref: HTMLElement | null;\n  children?: ContentOutlineItemContextProps[];\n}\n\ntype RegisterFunction = (outlineItem: Omit<ContentOutlineItemContextProps, 'id'>) => string;\n\nexport interface ContentOutlineContextProps {\n  outlineItems: ContentOutlineItemContextProps[];\n  register: RegisterFunction;\n  unregister: (id: string) => void;\n  updateOutlineItems: (newItems: ContentOutlineItemContextProps[]) => void;\n}\n\ninterface ContentOutlineContextProviderProps {\n  children: ReactNode;\n  /**\n   * used to resort children of an outline item when the dependencies change\n   * e.g. when the order of query rows changes on drag and drop\n   */\n  refreshDependencies?: unknown[];\n}\n\ninterface ParentlessItems {\n  [panelId: string]: ContentOutlineItemContextProps[];\n}\n\nconst ContentOutlineContext = createContext<ContentOutlineContextProps | undefined>(undefined);\n\nexport function ContentOutlineContextProvider({ children, refreshDependencies }: ContentOutlineContextProviderProps) {\n  const [outlineItems, setOutlineItems] = useState<ContentOutlineItemContextProps[]>([]);\n  const parentlessItemsRef = useRef<ParentlessItems>({});\n\n  const register: RegisterFunction = useCallback((outlineItem) => {\n    const id = uniqueId(`${outlineItem.panelId}-${outlineItem.title}-${outlineItem.icon}_`);\n\n    setOutlineItems((prevItems) => {\n      if (outlineItem.level === 'root') {\n        const mergeSingleChild = checkMergeSingleChild(parentlessItemsRef, outlineItem);\n        const updatedItems = [\n          ...prevItems,\n          {\n            ...outlineItem,\n            id,\n            children: parentlessItemsRef.current[outlineItem.panelId] || [],\n            mergeSingleChild,\n          },\n        ];\n\n        return updatedItems.sort(sortElementsByDocumentPosition);\n      }\n\n      if (outlineItem.level === 'child') {\n        const parentIndex = prevItems.findIndex(\n          (item) => item.panelId === outlineItem.panelId && item.level === 'root'\n        );\n        if (parentIndex === -1) {\n          const parentlessItemSibling = Object.keys(parentlessItemsRef.current).find(\n            (key) => key === outlineItem.panelId\n          );\n\n          if (parentlessItemSibling) {\n            parentlessItemsRef.current[outlineItem.panelId].push({\n              ...outlineItem,\n              id,\n            });\n          } else {\n            parentlessItemsRef.current[outlineItem.panelId] = [\n              {\n                ...outlineItem,\n                id,\n              },\n            ];\n          }\n          return [...prevItems];\n        }\n\n        const newItems = [...prevItems];\n        const parent = { ...newItems[parentIndex] };\n        const childrenUpdated = [...(parent.children || []), { ...outlineItem, id }];\n        childrenUpdated.sort(sortElementsByDocumentPosition);\n        const mergeSingleChild = checkMergeSingleChild(parentlessItemsRef, parent);\n\n        newItems[parentIndex] = {\n          ...parent,\n          children: childrenUpdated,\n          mergeSingleChild,\n        };\n\n        return newItems;\n      }\n\n      return [...prevItems];\n    });\n\n    return id;\n  }, []);\n\n  const unregister = useCallback((id: string) => {\n    setOutlineItems((prevItems) =>\n      prevItems\n        .filter((item) => item.id !== id)\n        .map((item) => {\n          if (item.children) {\n            item.children = item.children.filter((child) => child.id !== id);\n          }\n          return item;\n        })\n    );\n  }, []);\n\n  const updateOutlineItems = useCallback((newItems: ContentOutlineItemContextProps[]) => {\n    setOutlineItems(newItems);\n  }, []);\n\n  useEffect(() => {\n    setOutlineItems((prevItems) => {\n      const newItems = [...prevItems];\n      for (const item of newItems) {\n        item.children?.sort(sortElementsByDocumentPosition);\n      }\n      return newItems;\n    });\n  }, [refreshDependencies]);\n\n  return (\n    <ContentOutlineContext.Provider value={{ outlineItems, register, unregister, updateOutlineItems }}>\n      {children}\n    </ContentOutlineContext.Provider>\n  );\n}\n\nexport function sortElementsByDocumentPosition(a: ContentOutlineItemContextProps, b: ContentOutlineItemContextProps) {\n  if (a.ref && b.ref) {\n    const diff = a.ref.compareDocumentPosition(b.ref);\n    if (diff === Node.DOCUMENT_POSITION_PRECEDING) {\n      return 1;\n    } else if (diff === Node.DOCUMENT_POSITION_FOLLOWING) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nfunction checkMergeSingleChild(\n  parentlessItemsRef: React.MutableRefObject<ParentlessItems>,\n  outlineItem: Omit<ContentOutlineItemContextProps, 'id'>\n) {\n  const children = parentlessItemsRef.current[outlineItem.panelId] || [];\n  const mergeSingleChild = children.length === 1 && outlineItem.mergeSingleChild;\n\n  return mergeSingleChild;\n}\n\nexport function useContentOutlineContext() {\n  return useContext(ContentOutlineContext);\n}\n","import { cx, css } from '@emotion/css';\nimport React, { ButtonHTMLAttributes, useEffect, useRef, useState } from 'react';\n\nimport { IconName, isIconName, GrafanaTheme2 } from '@grafana/data';\nimport { Icon, useStyles2, Tooltip } from '@grafana/ui';\nimport { TooltipPlacement } from '@grafana/ui/src/components/Tooltip';\n\ntype CommonProps = {\n  contentOutlineExpanded?: boolean;\n  title?: string;\n  icon?: IconName | React.ReactNode;\n  tooltip?: string;\n  tooltipPlacement?: TooltipPlacement;\n  className?: string;\n  indentStyle?: string;\n  collapsible?: boolean;\n  collapsed?: boolean;\n  isActive?: boolean;\n  sectionId?: string;\n  toggleCollapsed?: () => void;\n};\n\nexport type ContentOutlineItemButtonProps = CommonProps & ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport function ContentOutlineItemButton({\n  contentOutlineExpanded,\n  title,\n  icon,\n  tooltip,\n  tooltipPlacement = 'bottom',\n  className,\n  indentStyle,\n  collapsible,\n  collapsed,\n  isActive,\n  sectionId,\n  toggleCollapsed,\n  ...rest\n}: ContentOutlineItemButtonProps) {\n  const styles = useStyles2(getStyles);\n\n  const buttonStyles = cx(styles.button, className);\n\n  const textRef = useRef<HTMLElement>(null);\n  const [isOverflowing, setIsOverflowing] = useState(false);\n\n  useEffect(() => {\n    if (textRef.current) {\n      setIsOverflowing(textRef.current?.scrollWidth > textRef.current?.clientWidth);\n    }\n  }, [title]);\n\n  const body = (\n    <div className={cx(styles.buttonContainer, indentStyle)}>\n      {collapsible && (\n        <button\n          className={styles.collapseButton}\n          onClick={toggleCollapsed}\n          aria-label=\"Content outline item collapse button\"\n          aria-expanded={!collapsed}\n          aria-controls={sectionId}\n        >\n          <OutlineIcon icon={collapsed ? 'angle-right' : 'angle-down'} />\n        </button>\n      )}\n      <button\n        className={cx(buttonStyles, {\n          [styles.active]: isActive,\n        })}\n        aria-label={tooltip}\n        {...rest}\n      >\n        <OutlineIcon icon={icon} />\n        {title && (\n          <span className={styles.textContainer} ref={textRef}>\n            {title}\n          </span>\n        )}\n      </button>\n    </div>\n  );\n\n  // if there's a tooltip we want to show it if the text is overflowing\n  const showTooltip = tooltip && (!contentOutlineExpanded || isOverflowing);\n\n  return showTooltip ? (\n    <Tooltip content={tooltip} placement={tooltipPlacement}>\n      {body}\n    </Tooltip>\n  ) : (\n    body\n  );\n}\n\nfunction OutlineIcon({ icon }: { icon: IconName | React.ReactNode }) {\n  if (!icon) {\n    return null;\n  }\n\n  if (isIconName(icon)) {\n    return <Icon name={icon} size={'lg'} title={icon} />;\n  }\n\n  return icon;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    buttonContainer: css({\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      flexGrow: 1,\n      gap: theme.spacing(1),\n      overflow: 'hidden',\n      width: '100%',\n    }),\n    button: css({\n      label: 'content-outline-item-button',\n      display: 'flex',\n      alignItems: 'center',\n      height: theme.spacing(theme.components.height.md),\n      padding: theme.spacing(0, 1),\n      gap: theme.spacing(1),\n      color: theme.colors.text.secondary,\n      width: '100%',\n      background: 'transparent',\n      border: 'none',\n    }),\n    collapseButton: css({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: theme.spacing(3),\n      height: theme.spacing(4),\n      borderRadius: theme.shape.radius.default,\n      color: theme.colors.text.secondary,\n      background: 'transparent',\n      border: 'none',\n\n      '&:hover': {\n        color: theme.colors.text.primary,\n        background: theme.colors.secondary.shade,\n      },\n    }),\n    textContainer: css({\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n    }),\n    active: css({\n      backgroundColor: theme.colors.background.secondary,\n      borderTopRightRadius: theme.shape.radius.default,\n      borderBottomRightRadius: theme.shape.radius.default,\n      position: 'relative',\n\n      '&::before': {\n        backgroundImage: theme.colors.gradients.brandVertical,\n        borderRadius: theme.shape.radius.default,\n        content: '\" \"',\n        display: 'block',\n        height: '100%',\n        position: 'absolute',\n        transform: 'translateX(-50%)',\n        width: theme.spacing(0.5),\n        left: '2px',\n      },\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useToggle, useScroll } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { useStyles2, PanelContainer, CustomScrollbar } from '@grafana/ui';\n\nimport { ContentOutlineItemContextProps, useContentOutlineContext } from './ContentOutlineContext';\nimport { ContentOutlineItemButton } from './ContentOutlineItemButton';\n\nexport function ContentOutline({ scroller, panelId }: { scroller: HTMLElement | undefined; panelId: string }) {\n  const [contentOutlineExpanded, toggleContentOutlineExpanded] = useToggle(false);\n  const styles = useStyles2(getStyles, contentOutlineExpanded);\n  const scrollerRef = useRef(scroller || null);\n  const { y: verticalScroll } = useScroll(scrollerRef);\n  const { outlineItems } = useContentOutlineContext() ?? { outlineItems: [] };\n  const [activeSectionId, setActiveSectionId] = useState(outlineItems[0]?.id);\n  const [activeSectionChildId, setActiveSectionChildId] = useState(outlineItems[0]?.children?.[0]?.id);\n\n  const outlineItemsShouldIndent = outlineItems.some(\n    (item) => item.children && !(item.mergeSingleChild && item.children?.length === 1) && item.children.length > 0\n  );\n\n  const [sectionsExpanded, setSectionsExpanded] = useState(() => {\n    return outlineItems.reduce((acc: { [key: string]: boolean }, item) => {\n      acc[item.id] = false;\n      return acc;\n    }, {});\n  });\n\n  const scrollIntoView = (ref: HTMLElement | null, itemPanelId: string, customOffsetTop = 0) => {\n    let scrollValue = 0;\n    let el: HTMLElement | null | undefined = ref;\n\n    do {\n      scrollValue += el?.offsetTop || 0;\n      el = el?.offsetParent as HTMLElement;\n    } while (el && el !== scroller);\n\n    scroller?.scroll({\n      top: scrollValue + customOffsetTop,\n      behavior: 'smooth',\n    });\n\n    reportInteraction('explore_toolbar_contentoutline_clicked', {\n      item: 'select_section',\n      type: itemPanelId,\n    });\n  };\n\n  const toggle = () => {\n    toggleContentOutlineExpanded();\n    reportInteraction('explore_toolbar_contentoutline_clicked', {\n      item: 'outline',\n      type: contentOutlineExpanded ? 'minimize' : 'expand',\n    });\n  };\n\n  const toggleSection = (itemId: string) => {\n    setSectionsExpanded((prev) => ({\n      ...prev,\n      [itemId]: !prev[itemId],\n    }));\n    reportInteraction('explore_toolbar_contentoutline_clicked', {\n      item: 'section',\n      type: !sectionsExpanded[itemId] ? 'minimize' : 'expand',\n    });\n  };\n\n  useEffect(() => {\n    let activeItem;\n\n    for (const item of outlineItems) {\n      let top = item?.ref?.getBoundingClientRect().top;\n\n      // Check item\n      if (top && top >= 0) {\n        activeItem = item;\n      }\n\n      // Check children\n      const activeChild = item.children?.find((child) => {\n        const offsetTop = child.customTopOffset || 0;\n        let childTop = child?.ref?.getBoundingClientRect().top;\n        return childTop && childTop >= offsetTop;\n      });\n\n      if (activeChild) {\n        setActiveSectionChildId(activeChild.id);\n        setActiveSectionId(item.id);\n        break;\n      }\n\n      if (activeItem) {\n        setActiveSectionId(activeItem.id);\n        setActiveSectionChildId(undefined);\n        break;\n      }\n    }\n  }, [outlineItems, verticalScroll]);\n\n  return (\n    <PanelContainer className={styles.wrapper} id={panelId}>\n      <CustomScrollbar>\n        <div className={styles.content}>\n          <ContentOutlineItemButton\n            icon={'arrow-from-right'}\n            tooltip={contentOutlineExpanded ? 'Collapse outline' : 'Expand outline'}\n            tooltipPlacement={contentOutlineExpanded ? 'right' : 'bottom'}\n            onClick={toggle}\n            className={cx(styles.toggleContentOutlineButton, {\n              [styles.justifyCenter]: !contentOutlineExpanded && !outlineItemsShouldIndent,\n            })}\n            aria-expanded={contentOutlineExpanded}\n          />\n\n          {outlineItems.map((item) => (\n            <React.Fragment key={item.id}>\n              <ContentOutlineItemButton\n                key={item.id}\n                title={contentOutlineExpanded ? item.title : undefined}\n                contentOutlineExpanded={contentOutlineExpanded}\n                className={cx(styles.buttonStyles, {\n                  [styles.justifyCenter]: !contentOutlineExpanded,\n                  [styles.sectionHighlighter]: isChildActive(item, activeSectionChildId) && !contentOutlineExpanded,\n                })}\n                indentStyle={cx({\n                  [styles.indentRoot]: outlineItemsShouldIndent && item.children?.length === 0,\n                  [styles.sectionHighlighter]:\n                    isChildActive(item, activeSectionChildId) && !contentOutlineExpanded && sectionsExpanded[item.id],\n                })}\n                icon={item.icon}\n                onClick={() => scrollIntoView(item.ref, item.panelId)}\n                tooltip={item.title}\n                collapsible={isCollapsible(item)}\n                collapsed={!sectionsExpanded[item.id]}\n                toggleCollapsed={() => toggleSection(item.id)}\n                isActive={\n                  (isChildActive(item, activeSectionChildId) && !sectionsExpanded[item.id]) ||\n                  (activeSectionId === item.id && !sectionsExpanded[item.id])\n                }\n                sectionId={item.id}\n              />\n              <div id={item.id} data-testid={`section-wrapper-${item.id}`}>\n                {item.children &&\n                  (!item.mergeSingleChild || item.children.length !== 1) &&\n                  sectionsExpanded[item.id] &&\n                  item.children.map((child, i) => (\n                    <div key={child.id} className={styles.itemWrapper}>\n                      {contentOutlineExpanded && (\n                        <div\n                          className={cx(styles.itemConnector, {\n                            [styles.firstItemConnector]: i === 0,\n                            [styles.lastItemConnector]: i === (item.children?.length || 0) - 1,\n                          })}\n                        />\n                      )}\n                      <ContentOutlineItemButton\n                        key={child.id}\n                        title={contentOutlineExpanded ? child.title : undefined}\n                        contentOutlineExpanded={contentOutlineExpanded}\n                        icon={contentOutlineExpanded ? undefined : item.icon}\n                        className={cx(styles.buttonStyles, {\n                          [styles.justifyCenter]: !contentOutlineExpanded,\n                          [styles.sectionHighlighter]:\n                            isChildActive(item, activeSectionChildId) && !contentOutlineExpanded,\n                        })}\n                        indentStyle={styles.indentChild}\n                        onClick={() => scrollIntoView(child.ref, child.panelId, child.customTopOffset)}\n                        tooltip={child.title}\n                        isActive={activeSectionChildId === child.id}\n                      />\n                    </div>\n                  ))}\n              </div>\n            </React.Fragment>\n          ))}\n        </div>\n      </CustomScrollbar>\n    </PanelContainer>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2, expanded: boolean) => {\n  return {\n    wrapper: css({\n      label: 'wrapper',\n      position: 'relative',\n      display: 'flex',\n      justifyContent: 'center',\n      marginRight: theme.spacing(1),\n      height: '100%',\n      backgroundColor: theme.colors.background.primary,\n      width: expanded ? '160px' : undefined,\n      minWidth: expanded ? '160px' : undefined,\n    }),\n    content: css({\n      label: 'content',\n      marginLeft: theme.spacing(0.5),\n      top: 0,\n    }),\n    buttonStyles: css({\n      display: 'flex',\n      '&:hover': {\n        color: theme.colors.text.primary,\n        textDecoration: 'underline',\n      },\n    }),\n    toggleContentOutlineButton: css({\n      '&:hover': {\n        color: theme.colors.text.primary,\n      },\n      transform: expanded ? 'rotate(180deg)' : '',\n      marginRight: expanded ? theme.spacing(0.5) : undefined,\n    }),\n    indentRoot: css({\n      paddingLeft: theme.spacing(4),\n    }),\n    indentChild: css({\n      paddingLeft: expanded ? theme.spacing(7) : theme.spacing(4),\n    }),\n    itemWrapper: css({\n      display: 'flex',\n      height: theme.spacing(4),\n      alignItems: 'center',\n    }),\n    itemConnector: css({\n      position: 'relative',\n      height: '100%',\n      width: theme.spacing(1.5),\n      '&::before': {\n        borderRight: `1px solid ${theme.colors.border.medium}`,\n        content: '\"\"',\n        height: '100%',\n        left: 48,\n        position: 'absolute',\n        transform: 'translateX(50%)',\n      },\n    }),\n    firstItemConnector: css({\n      '&::before': {\n        top: theme.spacing(1),\n        height: `calc(100% - ${theme.spacing(1)})`,\n      },\n    }),\n    lastItemConnector: css({\n      '&::before': {\n        height: `calc(100% - ${theme.spacing(1)})`,\n      },\n    }),\n    justifyCenter: css({\n      justifyContent: 'center',\n    }),\n    sectionHighlighter: css({\n      backgroundColor: theme.colors.background.secondary,\n    }),\n  };\n};\n\nfunction isCollapsible(item: ContentOutlineItemContextProps): boolean {\n  return !!(item.children && item.children.length > 0 && (!item.mergeSingleChild || item.children.length !== 1));\n}\n\nfunction isChildActive(item: ContentOutlineItemContextProps, activeSectionChildId: string | undefined) {\n  return item.children?.some((child) => child.id === activeSectionChildId);\n}\n","import React, { useEffect, useRef, ReactNode } from 'react';\n\nimport { useContentOutlineContext } from './ContentOutlineContext';\n\ntype INDENT_LEVELS = 'root' | 'child';\n\nexport interface ContentOutlineItemBaseProps {\n  panelId: string;\n  title: string;\n  icon: string;\n  /**\n   * Custom offset from the top of the Explore container when scrolling to this item.\n   * Items like query row need some offset so the top of the query row is not hidden behind the header.\n   */\n  customTopOffset?: number;\n  /**\n   * The level of indentation for this item.\n   * - `root` is the top level item.\n   * - `child` is an item that is a child of an item with `root` level.\n   */\n  level?: INDENT_LEVELS;\n  /**\n   * Merges a single child of this item with this item.\n   * e.g. It doesn't make sense to nest a single query row under a queries container\n   * because user can navigate to the query row by navigating to the queries container.\n   */\n  mergeSingleChild?: boolean;\n}\n\ninterface ContentOutlineItemProps extends ContentOutlineItemBaseProps {\n  children: ReactNode;\n  className?: string;\n}\n\nexport function ContentOutlineItem({\n  panelId,\n  title,\n  icon,\n  customTopOffset,\n  children,\n  className,\n  level = 'root',\n  mergeSingleChild,\n}: ContentOutlineItemProps) {\n  const { register, unregister } = useContentOutlineContext() ?? {};\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if (!register || !unregister) {\n      return;\n    }\n\n    // When the component mounts, register it and get its unique ID.\n    const id = register({\n      panelId: panelId,\n      title: title,\n      icon: icon,\n      ref: ref.current,\n      customTopOffset: customTopOffset,\n      level: level,\n      mergeSingleChild,\n    });\n\n    // When the component unmounts, unregister it using its unique ID.\n    return () => unregister(id);\n  }, [panelId, title, icon, customTopOffset, level, mergeSingleChild, register, unregister]);\n\n  return (\n    <div className={className} ref={ref}>\n      {children}\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport React, { useId, useState, useMemo, useEffect } from 'react';\nimport Highlighter from 'react-highlight-words';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport { DataLinkTransformationConfig, ScopedVars } from '@grafana/data';\nimport { Button, Field, Icon, Input, Label, Modal, Select, Tooltip, Stack } from '@grafana/ui';\n\nimport {\n  getSupportedTransTypeDetails,\n  getTransformOptions,\n  TransformationFieldDetails,\n} from '../correlations/Forms/types';\nimport { getTransformationVars } from '../correlations/transformations';\n\ninterface CorrelationTransformationAddModalProps {\n  onCancel: () => void;\n  onSave: (transformation: DataLinkTransformationConfig) => void;\n  fieldList: Record<string, string>;\n  transformationToEdit?: DataLinkTransformationConfig;\n}\n\ninterface ShowFormFields {\n  expressionDetails: TransformationFieldDetails;\n  mapValueDetails: TransformationFieldDetails;\n}\n\nconst LabelWithTooltip = ({ label, tooltipText }: { label: string; tooltipText: string }) => (\n  <Stack gap={1} direction=\"row\" wrap=\"wrap\" alignItems=\"flex-start\">\n    <Label>{label}</Label>\n    <Tooltip content={tooltipText}>\n      <Icon name=\"info-circle\" size=\"sm\" />\n    </Tooltip>\n  </Stack>\n);\n\nexport const CorrelationTransformationAddModal = ({\n  onSave,\n  onCancel,\n  fieldList,\n  transformationToEdit,\n}: CorrelationTransformationAddModalProps) => {\n  const [exampleValue, setExampleValue] = useState<string | undefined>(undefined);\n  const [transformationVars, setTransformationVars] = useState<ScopedVars>({});\n  const [formFieldsVis, setFormFieldsVis] = useState<ShowFormFields>({\n    mapValueDetails: { show: false },\n    expressionDetails: { show: false },\n  });\n  const [isExpValid, setIsExpValid] = useState(false); // keep the highlighter from erroring on bad expressions\n  const [validToSave, setValidToSave] = useState(false);\n  const { getValues, control, register, watch } = useForm<DataLinkTransformationConfig>({\n    defaultValues: useMemo(() => {\n      if (transformationToEdit) {\n        const exampleVal = fieldList[transformationToEdit?.field!];\n        setExampleValue(exampleVal);\n        if (transformationToEdit?.expression) {\n          setIsExpValid(true);\n        }\n        const transformationTypeDetails = getSupportedTransTypeDetails(transformationToEdit?.type!);\n        setFormFieldsVis({\n          mapValueDetails: transformationTypeDetails.mapValueDetails,\n          expressionDetails: transformationTypeDetails.expressionDetails,\n        });\n\n        const transformationVars = getTransformationVars(\n          {\n            type: transformationToEdit?.type!,\n            expression: transformationToEdit?.expression,\n            mapValue: transformationToEdit?.mapValue,\n          },\n          exampleVal || '',\n          transformationToEdit?.field!\n        );\n        setTransformationVars({ ...transformationVars });\n        setValidToSave(true);\n        return {\n          type: transformationToEdit?.type,\n          field: transformationToEdit?.field,\n          mapValue: transformationToEdit?.mapValue,\n          expression: transformationToEdit?.expression,\n        };\n      } else {\n        return undefined;\n      }\n    }, [fieldList, transformationToEdit]),\n  });\n  const id = useId();\n\n  useEffect(() => {\n    const subscription = watch((formValues) => {\n      const expression = formValues.expression;\n      let isExpressionValid = false;\n      if (expression !== undefined) {\n        isExpressionValid = true;\n        try {\n          new RegExp(expression);\n        } catch (e) {\n          isExpressionValid = false;\n        }\n      } else {\n        isExpressionValid = !formFieldsVis.expressionDetails.show;\n      }\n      setIsExpValid(isExpressionValid);\n      let transKeys = [];\n      if (formValues.type) {\n        const transformationVars = getTransformationVars(\n          {\n            type: formValues.type,\n            expression: isExpressionValid ? expression : '',\n            mapValue: formValues.mapValue,\n          },\n          fieldList[formValues.field!] || '',\n          formValues.field!\n        );\n\n        transKeys = Object.keys(transformationVars);\n        setTransformationVars(transKeys.length > 0 ? { ...transformationVars } : {});\n      }\n\n      if (transKeys.length === 0 || !isExpressionValid) {\n        setValidToSave(false);\n      } else {\n        setValidToSave(true);\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, [fieldList, formFieldsVis.expressionDetails.show, watch]);\n\n  return (\n    <Modal\n      isOpen={true}\n      title={`${transformationToEdit ? 'Edit' : 'Add'} transformation`}\n      onDismiss={onCancel}\n      className={css({ width: '700px' })}\n    >\n      <p>\n        A transformation extracts variables out of a single field. These variables will be available along with your\n        field variables.\n      </p>\n      <Field label=\"Field\">\n        <Controller\n          control={control}\n          render={({ field: { onChange, ref, ...field } }) => (\n            <Select\n              {...field}\n              onChange={(value) => {\n                if (value.value) {\n                  onChange(value.value);\n                  setExampleValue(fieldList[value.value]);\n                }\n              }}\n              options={Object.entries(fieldList).map((entry) => {\n                return { label: entry[0], value: entry[0] };\n              })}\n              aria-label=\"field\"\n            />\n          )}\n          name={`field` as const}\n        />\n      </Field>\n\n      {exampleValue && (\n        <>\n          <pre>\n            <Highlighter\n              textToHighlight={exampleValue}\n              searchWords={[isExpValid ? getValues('expression') ?? '' : '']}\n              autoEscape={false}\n            />\n          </pre>\n          <Field label=\"Type\">\n            <Controller\n              control={control}\n              render={({ field: { onChange, ref, ...field } }) => (\n                <Select\n                  {...field}\n                  onChange={(value) => {\n                    onChange(value.value);\n                    const transformationTypeDetails = getSupportedTransTypeDetails(value.value!);\n                    setFormFieldsVis({\n                      mapValueDetails: transformationTypeDetails.mapValueDetails,\n                      expressionDetails: transformationTypeDetails.expressionDetails,\n                    });\n                  }}\n                  options={getTransformOptions()}\n                  aria-label=\"type\"\n                />\n              )}\n              name={`type` as const}\n            />\n          </Field>\n          {formFieldsVis.expressionDetails.show && (\n            <Field\n              label={\n                formFieldsVis.expressionDetails.helpText ? (\n                  <LabelWithTooltip label=\"Expression\" tooltipText={formFieldsVis.expressionDetails.helpText} />\n                ) : (\n                  'Expression'\n                )\n              }\n              htmlFor={`${id}-expression`}\n              required={formFieldsVis.expressionDetails.required}\n            >\n              <Input {...register('expression')} id={`${id}-expression`} />\n            </Field>\n          )}\n          {formFieldsVis.mapValueDetails.show && (\n            <Field\n              label={\n                formFieldsVis.mapValueDetails.helpText ? (\n                  <LabelWithTooltip label=\"Variable Name\" tooltipText={formFieldsVis.mapValueDetails.helpText} />\n                ) : (\n                  'Variable Name'\n                )\n              }\n              htmlFor={`${id}-mapValue`}\n            >\n              <Input {...register('mapValue')} id={`${id}-mapValue`} />\n            </Field>\n          )}\n          {Object.entries(transformationVars).length > 0 && (\n            <>\n              This transformation will add the following variables:\n              <pre>\n                {Object.entries(transformationVars).map((entry) => {\n                  return `\\$\\{${entry[0]}\\} = ${entry[1]?.value}\\n`;\n                })}\n              </pre>\n            </>\n          )}\n        </>\n      )}\n      <Modal.ButtonRow>\n        <Button variant=\"secondary\" onClick={onCancel} fill=\"outline\">\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={() => onSave(getValues())} disabled={!validToSave}>\n          {transformationToEdit ? 'Edit transformation' : 'Add transformation to correlation'}\n        </Button>\n      </Modal.ButtonRow>\n    </Modal>\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { useState, useEffect, useId } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useAsync } from 'react-use';\n\nimport { DataLinkTransformationConfig, ExploreCorrelationHelperData, GrafanaTheme2 } from '@grafana/data';\nimport {\n  Collapse,\n  Alert,\n  Field,\n  Input,\n  Button,\n  Card,\n  IconButton,\n  useStyles2,\n  DeleteButton,\n  Tooltip,\n  Icon,\n  Stack,\n} from '@grafana/ui';\nimport { useDispatch, useSelector } from 'app/types';\n\nimport { getTransformationVars } from '../correlations/transformations';\nimport { generateDefaultLabel } from '../correlations/utils';\n\nimport { CorrelationTransformationAddModal } from './CorrelationTransformationAddModal';\nimport { changeCorrelationHelperData } from './state/explorePane';\nimport { changeCorrelationEditorDetails } from './state/main';\nimport { selectCorrelationDetails, selectPanes } from './state/selectors';\n\ninterface Props {\n  exploreId: string;\n  correlations: ExploreCorrelationHelperData;\n}\n\ninterface FormValues {\n  label: string;\n  description: string;\n}\n\nexport const CorrelationHelper = ({ exploreId, correlations }: Props) => {\n  const dispatch = useDispatch();\n  const styles = useStyles2(getStyles);\n  const panes = useSelector(selectPanes);\n  const panesVals = Object.values(panes);\n  const { value: defaultLabel, loading: loadingLabel } = useAsync(\n    async () => await generateDefaultLabel(panesVals[0]!, panesVals[1]!),\n    [\n      panesVals[0]?.datasourceInstance,\n      panesVals[0]?.queries[0].datasource,\n      panesVals[1]?.datasourceInstance,\n      panesVals[1]?.queries[0].datasource,\n    ]\n  );\n\n  const { register, watch, getValues, setValue } = useForm<FormValues>();\n  const [isLabelDescOpen, setIsLabelDescOpen] = useState(false);\n  const [isTransformOpen, setIsTransformOpen] = useState(false);\n  const [showTransformationAddModal, setShowTransformationAddModal] = useState(false);\n  const [transformations, setTransformations] = useState<DataLinkTransformationConfig[]>([]);\n  const [transformationIdxToEdit, setTransformationIdxToEdit] = useState<number | undefined>(undefined);\n  const correlationDetails = useSelector(selectCorrelationDetails);\n  const id = useId();\n\n  // only fire once on mount to allow save button to enable / disable when unmounted\n  useEffect(() => {\n    dispatch(changeCorrelationEditorDetails({ canSave: true }));\n    return () => {\n      dispatch(changeCorrelationEditorDetails({ canSave: false }));\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (\n      !loadingLabel &&\n      defaultLabel !== undefined &&\n      !correlationDetails?.correlationDirty &&\n      getValues('label') !== ''\n    ) {\n      setValue('label', defaultLabel);\n    }\n  }, [correlationDetails?.correlationDirty, defaultLabel, getValues, loadingLabel, setValue]);\n\n  useEffect(() => {\n    const subscription = watch((value) => {\n      let dirty = correlationDetails?.correlationDirty || false;\n      let description = value.description || '';\n      if (!dirty && (value.label !== defaultLabel || description !== '')) {\n        dirty = true;\n      } else if (dirty && value.label === defaultLabel && description.trim() === '') {\n        dirty = false;\n      }\n      dispatch(\n        changeCorrelationEditorDetails({ label: value.label, description: value.description, correlationDirty: dirty })\n      );\n    });\n    return () => subscription.unsubscribe();\n  }, [correlationDetails?.correlationDirty, defaultLabel, dispatch, watch]);\n\n  useEffect(() => {\n    const dirty =\n      !correlationDetails?.correlationDirty && transformations.length > 0 ? true : correlationDetails?.correlationDirty;\n    dispatch(changeCorrelationEditorDetails({ transformations: transformations, correlationDirty: dirty }));\n    let transVarRecords: Record<string, string> = {};\n    transformations.forEach((transformation) => {\n      const transformationVars = getTransformationVars(\n        {\n          type: transformation.type,\n          expression: transformation.expression,\n          mapValue: transformation.mapValue,\n        },\n        correlations.vars[transformation.field!],\n        transformation.field!\n      );\n\n      Object.keys(transformationVars).forEach((key) => {\n        transVarRecords[key] = transformationVars[key]?.value;\n      });\n    });\n\n    dispatch(\n      changeCorrelationHelperData({\n        exploreId: exploreId,\n        correlationEditorHelperData: {\n          resultField: correlations.resultField,\n          origVars: correlations.origVars,\n          vars: { ...correlations.origVars, ...transVarRecords },\n        },\n      })\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, transformations]);\n\n  return (\n    <>\n      {showTransformationAddModal && (\n        <CorrelationTransformationAddModal\n          onCancel={() => {\n            setTransformationIdxToEdit(undefined);\n            setShowTransformationAddModal(false);\n          }}\n          onSave={(transformation: DataLinkTransformationConfig) => {\n            if (transformationIdxToEdit !== undefined) {\n              const editTransformations = [...transformations];\n              editTransformations[transformationIdxToEdit] = transformation;\n              setTransformations(editTransformations);\n              setTransformationIdxToEdit(undefined);\n            } else {\n              setTransformations([...transformations, transformation]);\n            }\n            setShowTransformationAddModal(false);\n          }}\n          fieldList={correlations.origVars}\n          transformationToEdit={\n            transformationIdxToEdit !== undefined ? transformations[transformationIdxToEdit] : undefined\n          }\n        />\n      )}\n      <Alert title=\"Correlation details\" severity=\"info\">\n        The correlation link will appear by the <code>{correlations.resultField}</code> field. You can use the following\n        variables to set up your correlations:\n        <pre>\n          {Object.entries(correlations.vars).map((entry) => {\n            return `\\$\\{${entry[0]}\\} = ${entry[1]}\\n`;\n          })}\n        </pre>\n        <Collapse\n          collapsible\n          isOpen={isLabelDescOpen}\n          onToggle={() => {\n            setIsLabelDescOpen(!isLabelDescOpen);\n          }}\n          label={\n            <Stack gap={1} direction=\"row\" wrap=\"wrap\" alignItems=\"center\">\n              Label / Description\n              {!isLabelDescOpen && !loadingLabel && (\n                <span className={styles.labelCollapseDetails}>{`Label: ${getValues('label') || defaultLabel}`}</span>\n              )}\n            </Stack>\n          }\n        >\n          <Field label=\"Label\" htmlFor={`${id}-label`}>\n            <Input\n              {...register('label')}\n              id={`${id}-label`}\n              onBlur={() => {\n                if (getValues('label') === '' && defaultLabel !== undefined) {\n                  setValue('label', defaultLabel);\n                }\n              }}\n            />\n          </Field>\n          <Field label=\"Description\" htmlFor={`${id}-description`}>\n            <Input {...register('description')} id={`${id}-description`} />\n          </Field>\n        </Collapse>\n        <Collapse\n          collapsible\n          isOpen={isTransformOpen}\n          onToggle={() => {\n            setIsTransformOpen(!isTransformOpen);\n          }}\n          label={\n            <Stack gap={1} direction=\"row\" wrap=\"wrap\" alignItems=\"center\">\n              Transformations\n              <Tooltip content=\"A transformation extracts one or more variables out of a single field.\">\n                <Icon name=\"info-circle\" size=\"sm\" />\n              </Tooltip>\n            </Stack>\n          }\n        >\n          <Button\n            variant=\"secondary\"\n            fill=\"outline\"\n            onClick={() => {\n              setShowTransformationAddModal(true);\n            }}\n            className={styles.transformationAction}\n          >\n            Add transformation\n          </Button>\n          {transformations.map((transformation, i) => {\n            const { type, field, expression, mapValue } = transformation;\n            const detailsString = [\n              (mapValue ?? '').length > 0 ? `Variable name: ${mapValue}` : undefined,\n              (expression ?? '').length > 0 ? (\n                <>\n                  Expression: <code>{expression}</code>\n                </>\n              ) : undefined,\n            ].filter((val) => val);\n            return (\n              <Card key={`trans-${i}`}>\n                <Card.Heading>\n                  {field}: {type}\n                </Card.Heading>\n                {detailsString.length > 0 && (\n                  <Card.Meta className={styles.transformationMeta}>{detailsString}</Card.Meta>\n                )}\n                <Card.SecondaryActions>\n                  <IconButton\n                    key=\"edit\"\n                    name=\"edit\"\n                    aria-label=\"edit transformation\"\n                    onClick={() => {\n                      setTransformationIdxToEdit(i);\n                      setShowTransformationAddModal(true);\n                    }}\n                  />\n                  <DeleteButton\n                    aria-label=\"delete transformation\"\n                    onConfirm={() => setTransformations(transformations.filter((_, idx) => i !== idx))}\n                    closeOnConfirm\n                  />\n                </Card.SecondaryActions>\n              </Card>\n            );\n          })}\n        </Collapse>\n      </Alert>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    labelCollapseDetails: css({\n      marginLeft: theme.spacing(2),\n      ...theme.typography['bodySmall'],\n      fontStyle: 'italic',\n    }),\n    transformationAction: css({\n      marginBottom: theme.spacing(2),\n    }),\n    transformationMeta: css({\n      alignItems: 'baseline',\n    }),\n  };\n};\n","import React, { useMemo } from 'react';\n\nimport { AbsoluteTimeRange, DataFrame, dateTime, EventBus, LoadingState, SplitOpen } from '@grafana/data';\nimport { PanelRenderer } from '@grafana/runtime';\nimport { PanelChrome, PanelContext, PanelContextProvider } from '@grafana/ui';\n\nimport { getPanelPluginMeta } from '../plugins/importPanelPlugin';\n\nimport { useExploreDataLinkPostProcessor } from './hooks/useExploreDataLinkPostProcessor';\n\nexport interface Props {\n  width: number;\n  height: number;\n  timeZone: string;\n  pluginId: string;\n  frames: DataFrame[];\n  absoluteRange: AbsoluteTimeRange;\n  state: LoadingState;\n  splitOpenFn: SplitOpen;\n  eventBus: EventBus;\n}\n\nexport function CustomContainer({\n  width,\n  height,\n  timeZone,\n  state,\n  pluginId,\n  frames,\n  absoluteRange,\n  splitOpenFn,\n  eventBus,\n}: Props) {\n  const timeRange = useMemo(\n    () => ({\n      from: dateTime(absoluteRange.from),\n      to: dateTime(absoluteRange.to),\n      raw: {\n        from: dateTime(absoluteRange.from),\n        to: dateTime(absoluteRange.to),\n      },\n    }),\n    [absoluteRange.from, absoluteRange.to]\n  );\n\n  const plugin = getPanelPluginMeta(pluginId);\n\n  const dataLinkPostProcessor = useExploreDataLinkPostProcessor(splitOpenFn, timeRange);\n\n  const panelContext: PanelContext = {\n    dataLinkPostProcessor,\n    eventBus,\n    eventsScope: 'explore',\n  };\n\n  return (\n    <PanelContextProvider value={panelContext}>\n      <PanelChrome title={plugin.name} width={width} height={height} loadingState={state}>\n        {(innerWidth, innerHeight) => (\n          <PanelRenderer\n            data={{ series: frames, state: state, timeRange }}\n            pluginId={pluginId}\n            title=\"\"\n            width={innerWidth}\n            height={innerHeight}\n            timeZone={timeZone}\n          />\n        )}\n      </PanelChrome>\n    </PanelContextProvider>\n  );\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nvar rowSizeBase = {\n    width: '100%',\n    height: '10px',\n    top: '0px',\n    left: '0px',\n    cursor: 'row-resize',\n};\nvar colSizeBase = {\n    width: '10px',\n    height: '100%',\n    top: '0px',\n    left: '0px',\n    cursor: 'col-resize',\n};\nvar edgeBase = {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n};\nvar styles = {\n    top: __assign(__assign({}, rowSizeBase), { top: '-5px' }),\n    right: __assign(__assign({}, colSizeBase), { left: undefined, right: '-5px' }),\n    bottom: __assign(__assign({}, rowSizeBase), { top: undefined, bottom: '-5px' }),\n    left: __assign(__assign({}, colSizeBase), { left: '-5px' }),\n    topRight: __assign(__assign({}, edgeBase), { right: '-10px', top: '-10px', cursor: 'ne-resize' }),\n    bottomRight: __assign(__assign({}, edgeBase), { right: '-10px', bottom: '-10px', cursor: 'se-resize' }),\n    bottomLeft: __assign(__assign({}, edgeBase), { left: '-10px', bottom: '-10px', cursor: 'sw-resize' }),\n    topLeft: __assign(__assign({}, edgeBase), { left: '-10px', top: '-10px', cursor: 'nw-resize' }),\n};\nvar Resizer = /** @class */ (function (_super) {\n    __extends(Resizer, _super);\n    function Resizer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onMouseDown = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        _this.onTouchStart = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        return _this;\n    }\n    Resizer.prototype.render = function () {\n        return (React.createElement(\"div\", { className: this.props.className || '', style: __assign(__assign({ position: 'absolute', userSelect: 'none' }, styles[this.props.direction]), (this.props.replaceStyles || {})), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children));\n    };\n    return Resizer;\n}(React.PureComponent));\nexport { Resizer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { flushSync } from 'react-dom';\nimport { Resizer } from './resizer';\nvar DEFAULT_SIZE = {\n    width: 'auto',\n    height: 'auto',\n};\nvar clamp = function (n, min, max) { return Math.max(Math.min(n, max), min); };\nvar snap = function (n, size) { return Math.round(n / size) * size; };\nvar hasDirection = function (dir, target) {\n    return new RegExp(dir, 'i').test(target);\n};\n// INFO: In case of window is a Proxy and does not porxy Events correctly, use isTouchEvent & isMouseEvent to distinguish event type instead of `instanceof`.\nvar isTouchEvent = function (event) {\n    return Boolean(event.touches && event.touches.length);\n};\nvar isMouseEvent = function (event) {\n    return Boolean((event.clientX || event.clientX === 0) &&\n        (event.clientY || event.clientY === 0));\n};\nvar findClosestSnap = function (n, snapArray, snapGap) {\n    if (snapGap === void 0) { snapGap = 0; }\n    var closestGapIndex = snapArray.reduce(function (prev, curr, index) { return (Math.abs(curr - n) < Math.abs(snapArray[prev] - n) ? index : prev); }, 0);\n    var gap = Math.abs(snapArray[closestGapIndex] - n);\n    return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n;\n};\nvar getStringSize = function (n) {\n    n = n.toString();\n    if (n === 'auto') {\n        return n;\n    }\n    if (n.endsWith('px')) {\n        return n;\n    }\n    if (n.endsWith('%')) {\n        return n;\n    }\n    if (n.endsWith('vh')) {\n        return n;\n    }\n    if (n.endsWith('vw')) {\n        return n;\n    }\n    if (n.endsWith('vmax')) {\n        return n;\n    }\n    if (n.endsWith('vmin')) {\n        return n;\n    }\n    return n + \"px\";\n};\nvar getPixelSize = function (size, parentSize, innerWidth, innerHeight) {\n    if (size && typeof size === 'string') {\n        if (size.endsWith('px')) {\n            return Number(size.replace('px', ''));\n        }\n        if (size.endsWith('%')) {\n            var ratio = Number(size.replace('%', '')) / 100;\n            return parentSize * ratio;\n        }\n        if (size.endsWith('vw')) {\n            var ratio = Number(size.replace('vw', '')) / 100;\n            return innerWidth * ratio;\n        }\n        if (size.endsWith('vh')) {\n            var ratio = Number(size.replace('vh', '')) / 100;\n            return innerHeight * ratio;\n        }\n    }\n    return size;\n};\nvar calculateNewMax = function (parentSize, innerWidth, innerHeight, maxWidth, maxHeight, minWidth, minHeight) {\n    maxWidth = getPixelSize(maxWidth, parentSize.width, innerWidth, innerHeight);\n    maxHeight = getPixelSize(maxHeight, parentSize.height, innerWidth, innerHeight);\n    minWidth = getPixelSize(minWidth, parentSize.width, innerWidth, innerHeight);\n    minHeight = getPixelSize(minHeight, parentSize.height, innerWidth, innerHeight);\n    return {\n        maxWidth: typeof maxWidth === 'undefined' ? undefined : Number(maxWidth),\n        maxHeight: typeof maxHeight === 'undefined' ? undefined : Number(maxHeight),\n        minWidth: typeof minWidth === 'undefined' ? undefined : Number(minWidth),\n        minHeight: typeof minHeight === 'undefined' ? undefined : Number(minHeight),\n    };\n};\nvar definedProps = [\n    'as',\n    'style',\n    'className',\n    'grid',\n    'snap',\n    'bounds',\n    'boundsByDirection',\n    'size',\n    'defaultSize',\n    'minWidth',\n    'minHeight',\n    'maxWidth',\n    'maxHeight',\n    'lockAspectRatio',\n    'lockAspectRatioExtraWidth',\n    'lockAspectRatioExtraHeight',\n    'enable',\n    'handleStyles',\n    'handleClasses',\n    'handleWrapperStyle',\n    'handleWrapperClass',\n    'children',\n    'onResizeStart',\n    'onResize',\n    'onResizeStop',\n    'handleComponent',\n    'scale',\n    'resizeRatio',\n    'snapGap',\n];\n// HACK: This class is used to calculate % size.\nvar baseClassName = '__resizable_base__';\nvar Resizable = /** @class */ (function (_super) {\n    __extends(Resizable, _super);\n    function Resizable(props) {\n        var _this = _super.call(this, props) || this;\n        _this.ratio = 1;\n        _this.resizable = null;\n        // For parent boundary\n        _this.parentLeft = 0;\n        _this.parentTop = 0;\n        // For boundary\n        _this.resizableLeft = 0;\n        _this.resizableRight = 0;\n        _this.resizableTop = 0;\n        _this.resizableBottom = 0;\n        // For target boundary\n        _this.targetLeft = 0;\n        _this.targetTop = 0;\n        _this.appendBase = function () {\n            if (!_this.resizable || !_this.window) {\n                return null;\n            }\n            var parent = _this.parentNode;\n            if (!parent) {\n                return null;\n            }\n            var element = _this.window.document.createElement('div');\n            element.style.width = '100%';\n            element.style.height = '100%';\n            element.style.position = 'absolute';\n            element.style.transform = 'scale(0, 0)';\n            element.style.left = '0';\n            element.style.flex = '0 0 100%';\n            if (element.classList) {\n                element.classList.add(baseClassName);\n            }\n            else {\n                element.className += baseClassName;\n            }\n            parent.appendChild(element);\n            return element;\n        };\n        _this.removeBase = function (base) {\n            var parent = _this.parentNode;\n            if (!parent) {\n                return;\n            }\n            parent.removeChild(base);\n        };\n        _this.ref = function (c) {\n            if (c) {\n                _this.resizable = c;\n            }\n        };\n        _this.state = {\n            isResizing: false,\n            width: typeof (_this.propsSize && _this.propsSize.width) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.width,\n            height: typeof (_this.propsSize && _this.propsSize.height) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.height,\n            direction: 'right',\n            original: {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            },\n            backgroundStyle: {\n                height: '100%',\n                width: '100%',\n                backgroundColor: 'rgba(0,0,0,0)',\n                cursor: 'auto',\n                opacity: 0,\n                position: 'fixed',\n                zIndex: 9999,\n                top: '0',\n                left: '0',\n                bottom: '0',\n                right: '0',\n            },\n            flexBasis: undefined,\n        };\n        _this.onResizeStart = _this.onResizeStart.bind(_this);\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(Resizable.prototype, \"parentNode\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            return this.resizable.parentNode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"window\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            if (!this.resizable.ownerDocument) {\n                return null;\n            }\n            return this.resizable.ownerDocument.defaultView;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"propsSize\", {\n        get: function () {\n            return this.props.size || this.props.defaultSize || DEFAULT_SIZE;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"size\", {\n        get: function () {\n            var width = 0;\n            var height = 0;\n            if (this.resizable && this.window) {\n                var orgWidth = this.resizable.offsetWidth;\n                var orgHeight = this.resizable.offsetHeight;\n                // HACK: Set position `relative` to get parent size.\n                //       This is because when re-resizable set `absolute`, I can not get base width correctly.\n                var orgPosition = this.resizable.style.position;\n                if (orgPosition !== 'relative') {\n                    this.resizable.style.position = 'relative';\n                }\n                // INFO: Use original width or height if set auto.\n                width = this.resizable.style.width !== 'auto' ? this.resizable.offsetWidth : orgWidth;\n                height = this.resizable.style.height !== 'auto' ? this.resizable.offsetHeight : orgHeight;\n                // Restore original position\n                this.resizable.style.position = orgPosition;\n            }\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"sizeStyle\", {\n        get: function () {\n            var _this = this;\n            var size = this.props.size;\n            var getSize = function (key) {\n                if (typeof _this.state[key] === 'undefined' || _this.state[key] === 'auto') {\n                    return 'auto';\n                }\n                if (_this.propsSize && _this.propsSize[key] && _this.propsSize[key].toString().endsWith('%')) {\n                    if (_this.state[key].toString().endsWith('%')) {\n                        return _this.state[key].toString();\n                    }\n                    var parentSize = _this.getParentSize();\n                    var value = Number(_this.state[key].toString().replace('px', ''));\n                    var percent = (value / parentSize[key]) * 100;\n                    return percent + \"%\";\n                }\n                return getStringSize(_this.state[key]);\n            };\n            var width = size && typeof size.width !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.width)\n                : getSize('width');\n            var height = size && typeof size.height !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.height)\n                : getSize('height');\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Resizable.prototype.getParentSize = function () {\n        if (!this.parentNode) {\n            if (!this.window) {\n                return { width: 0, height: 0 };\n            }\n            return { width: this.window.innerWidth, height: this.window.innerHeight };\n        }\n        var base = this.appendBase();\n        if (!base) {\n            return { width: 0, height: 0 };\n        }\n        // INFO: To calculate parent width with flex layout\n        var wrapChanged = false;\n        var wrap = this.parentNode.style.flexWrap;\n        if (wrap !== 'wrap') {\n            wrapChanged = true;\n            this.parentNode.style.flexWrap = 'wrap';\n            // HACK: Use relative to get parent padding size\n        }\n        base.style.position = 'relative';\n        base.style.minWidth = '100%';\n        base.style.minHeight = '100%';\n        var size = {\n            width: base.offsetWidth,\n            height: base.offsetHeight,\n        };\n        if (wrapChanged) {\n            this.parentNode.style.flexWrap = wrap;\n        }\n        this.removeBase(base);\n        return size;\n    };\n    Resizable.prototype.bindEvents = function () {\n        if (this.window) {\n            this.window.addEventListener('mouseup', this.onMouseUp);\n            this.window.addEventListener('mousemove', this.onMouseMove);\n            this.window.addEventListener('mouseleave', this.onMouseUp);\n            this.window.addEventListener('touchmove', this.onMouseMove, {\n                capture: true,\n                passive: false,\n            });\n            this.window.addEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.unbindEvents = function () {\n        if (this.window) {\n            this.window.removeEventListener('mouseup', this.onMouseUp);\n            this.window.removeEventListener('mousemove', this.onMouseMove);\n            this.window.removeEventListener('mouseleave', this.onMouseUp);\n            this.window.removeEventListener('touchmove', this.onMouseMove, true);\n            this.window.removeEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.componentDidMount = function () {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        this.setState({\n            width: this.state.width || this.size.width,\n            height: this.state.height || this.size.height,\n            flexBasis: computedStyle.flexBasis !== 'auto' ? computedStyle.flexBasis : undefined,\n        });\n    };\n    Resizable.prototype.componentWillUnmount = function () {\n        if (this.window) {\n            this.unbindEvents();\n        }\n    };\n    Resizable.prototype.createSizeForCssProperty = function (newSize, kind) {\n        var propsSize = this.propsSize && this.propsSize[kind];\n        return this.state[kind] === 'auto' &&\n            this.state.original[kind] === newSize &&\n            (typeof propsSize === 'undefined' || propsSize === 'auto')\n            ? 'auto'\n            : newSize;\n    };\n    Resizable.prototype.calculateNewMaxFromBoundary = function (maxWidth, maxHeight) {\n        var boundsByDirection = this.props.boundsByDirection;\n        var direction = this.state.direction;\n        var widthByDirection = boundsByDirection && hasDirection('left', direction);\n        var heightByDirection = boundsByDirection && hasDirection('top', direction);\n        var boundWidth;\n        var boundHeight;\n        if (this.props.bounds === 'parent') {\n            var parent_1 = this.parentNode;\n            if (parent_1) {\n                boundWidth = widthByDirection\n                    ? this.resizableRight - this.parentLeft\n                    : parent_1.offsetWidth + (this.parentLeft - this.resizableLeft);\n                boundHeight = heightByDirection\n                    ? this.resizableBottom - this.parentTop\n                    : parent_1.offsetHeight + (this.parentTop - this.resizableTop);\n            }\n        }\n        else if (this.props.bounds === 'window') {\n            if (this.window) {\n                boundWidth = widthByDirection ? this.resizableRight : this.window.innerWidth - this.resizableLeft;\n                boundHeight = heightByDirection ? this.resizableBottom : this.window.innerHeight - this.resizableTop;\n            }\n        }\n        else if (this.props.bounds) {\n            boundWidth = widthByDirection\n                ? this.resizableRight - this.targetLeft\n                : this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);\n            boundHeight = heightByDirection\n                ? this.resizableBottom - this.targetTop\n                : this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);\n        }\n        if (boundWidth && Number.isFinite(boundWidth)) {\n            maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n        }\n        if (boundHeight && Number.isFinite(boundHeight)) {\n            maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n        }\n        return { maxWidth: maxWidth, maxHeight: maxHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromDirection = function (clientX, clientY) {\n        var scale = this.props.scale || 1;\n        var resizeRatio = this.props.resizeRatio || 1;\n        var _a = this.state, direction = _a.direction, original = _a.original;\n        var _b = this.props, lockAspectRatio = _b.lockAspectRatio, lockAspectRatioExtraHeight = _b.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _b.lockAspectRatioExtraWidth;\n        var newWidth = original.width;\n        var newHeight = original.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (hasDirection('right', direction)) {\n            newWidth = original.width + ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('left', direction)) {\n            newWidth = original.width - ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('bottom', direction)) {\n            newHeight = original.height + ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        if (hasDirection('top', direction)) {\n            newHeight = original.height - ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromAspectRatio = function (newWidth, newHeight, max, min) {\n        var _a = this.props, lockAspectRatio = _a.lockAspectRatio, lockAspectRatioExtraHeight = _a.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a.lockAspectRatioExtraWidth;\n        var computedMinWidth = typeof min.width === 'undefined' ? 10 : min.width;\n        var computedMaxWidth = typeof max.width === 'undefined' || max.width < 0 ? newWidth : max.width;\n        var computedMinHeight = typeof min.height === 'undefined' ? 10 : min.height;\n        var computedMaxHeight = typeof max.height === 'undefined' || max.height < 0 ? newHeight : max.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (lockAspectRatio) {\n            var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;\n            var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;\n            var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);\n            var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);\n            var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);\n            var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);\n            newWidth = clamp(newWidth, lockedMinWidth, lockedMaxWidth);\n            newHeight = clamp(newHeight, lockedMinHeight, lockedMaxHeight);\n        }\n        else {\n            newWidth = clamp(newWidth, computedMinWidth, computedMaxWidth);\n            newHeight = clamp(newHeight, computedMinHeight, computedMaxHeight);\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.setBoundingClientRect = function () {\n        // For parent boundary\n        if (this.props.bounds === 'parent') {\n            var parent_2 = this.parentNode;\n            if (parent_2) {\n                var parentRect = parent_2.getBoundingClientRect();\n                this.parentLeft = parentRect.left;\n                this.parentTop = parentRect.top;\n            }\n        }\n        // For target(html element) boundary\n        if (this.props.bounds && typeof this.props.bounds !== 'string') {\n            var targetRect = this.props.bounds.getBoundingClientRect();\n            this.targetLeft = targetRect.left;\n            this.targetTop = targetRect.top;\n        }\n        // For boundary\n        if (this.resizable) {\n            var _a = this.resizable.getBoundingClientRect(), left = _a.left, top_1 = _a.top, right = _a.right, bottom = _a.bottom;\n            this.resizableLeft = left;\n            this.resizableRight = right;\n            this.resizableTop = top_1;\n            this.resizableBottom = bottom;\n        }\n    };\n    Resizable.prototype.onResizeStart = function (event, direction) {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var clientX = 0;\n        var clientY = 0;\n        if (event.nativeEvent && isMouseEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.clientX;\n            clientY = event.nativeEvent.clientY;\n        }\n        else if (event.nativeEvent && isTouchEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.touches[0].clientX;\n            clientY = event.nativeEvent.touches[0].clientY;\n        }\n        if (this.props.onResizeStart) {\n            if (this.resizable) {\n                var startResize = this.props.onResizeStart(event, direction, this.resizable);\n                if (startResize === false) {\n                    return;\n                }\n            }\n        }\n        // Fix #168\n        if (this.props.size) {\n            if (typeof this.props.size.height !== 'undefined' && this.props.size.height !== this.state.height) {\n                this.setState({ height: this.props.size.height });\n            }\n            if (typeof this.props.size.width !== 'undefined' && this.props.size.width !== this.state.width) {\n                this.setState({ width: this.props.size.width });\n            }\n        }\n        // For lockAspectRatio case\n        this.ratio =\n            typeof this.props.lockAspectRatio === 'number' ? this.props.lockAspectRatio : this.size.width / this.size.height;\n        var flexBasis;\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        if (computedStyle.flexBasis !== 'auto') {\n            var parent_3 = this.parentNode;\n            if (parent_3) {\n                var dir = this.window.getComputedStyle(parent_3).flexDirection;\n                this.flexDir = dir.startsWith('row') ? 'row' : 'column';\n                flexBasis = computedStyle.flexBasis;\n            }\n        }\n        // For boundary\n        this.setBoundingClientRect();\n        this.bindEvents();\n        var state = {\n            original: {\n                x: clientX,\n                y: clientY,\n                width: this.size.width,\n                height: this.size.height,\n            },\n            isResizing: true,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: this.window.getComputedStyle(event.target).cursor || 'auto' }),\n            direction: direction,\n            flexBasis: flexBasis,\n        };\n        this.setState(state);\n    };\n    Resizable.prototype.onMouseMove = function (event) {\n        var _this = this;\n        if (!this.state.isResizing || !this.resizable || !this.window) {\n            return;\n        }\n        if (this.window.TouchEvent && isTouchEvent(event)) {\n            try {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            catch (e) {\n                // Ignore on fail\n            }\n        }\n        var _a = this.props, maxWidth = _a.maxWidth, maxHeight = _a.maxHeight, minWidth = _a.minWidth, minHeight = _a.minHeight;\n        var clientX = isTouchEvent(event) ? event.touches[0].clientX : event.clientX;\n        var clientY = isTouchEvent(event) ? event.touches[0].clientY : event.clientY;\n        var _b = this.state, direction = _b.direction, original = _b.original, width = _b.width, height = _b.height;\n        var parentSize = this.getParentSize();\n        var max = calculateNewMax(parentSize, this.window.innerWidth, this.window.innerHeight, maxWidth, maxHeight, minWidth, minHeight);\n        maxWidth = max.maxWidth;\n        maxHeight = max.maxHeight;\n        minWidth = max.minWidth;\n        minHeight = max.minHeight;\n        // Calculate new size\n        var _c = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c.newHeight, newWidth = _c.newWidth;\n        // Calculate max size from boundary settings\n        var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);\n        if (this.props.snap && this.props.snap.x) {\n            newWidth = findClosestSnap(newWidth, this.props.snap.x, this.props.snapGap);\n        }\n        if (this.props.snap && this.props.snap.y) {\n            newHeight = findClosestSnap(newHeight, this.props.snap.y, this.props.snapGap);\n        }\n        // Calculate new size from aspect ratio\n        var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });\n        newWidth = newSize.newWidth;\n        newHeight = newSize.newHeight;\n        if (this.props.grid) {\n            var newGridWidth = snap(newWidth, this.props.grid[0]);\n            var newGridHeight = snap(newHeight, this.props.grid[1]);\n            var gap = this.props.snapGap || 0;\n            newWidth = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;\n            newHeight = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;\n        }\n        var delta = {\n            width: newWidth - original.width,\n            height: newHeight - original.height,\n        };\n        if (width && typeof width === 'string') {\n            if (width.endsWith('%')) {\n                var percent = (newWidth / parentSize.width) * 100;\n                newWidth = percent + \"%\";\n            }\n            else if (width.endsWith('vw')) {\n                var vw = (newWidth / this.window.innerWidth) * 100;\n                newWidth = vw + \"vw\";\n            }\n            else if (width.endsWith('vh')) {\n                var vh = (newWidth / this.window.innerHeight) * 100;\n                newWidth = vh + \"vh\";\n            }\n        }\n        if (height && typeof height === 'string') {\n            if (height.endsWith('%')) {\n                var percent = (newHeight / parentSize.height) * 100;\n                newHeight = percent + \"%\";\n            }\n            else if (height.endsWith('vw')) {\n                var vw = (newHeight / this.window.innerWidth) * 100;\n                newHeight = vw + \"vw\";\n            }\n            else if (height.endsWith('vh')) {\n                var vh = (newHeight / this.window.innerHeight) * 100;\n                newHeight = vh + \"vh\";\n            }\n        }\n        var newState = {\n            width: this.createSizeForCssProperty(newWidth, 'width'),\n            height: this.createSizeForCssProperty(newHeight, 'height'),\n        };\n        if (this.flexDir === 'row') {\n            newState.flexBasis = newState.width;\n        }\n        else if (this.flexDir === 'column') {\n            newState.flexBasis = newState.height;\n        }\n        // For v18, update state sync\n        flushSync(function () {\n            _this.setState(newState);\n        });\n        if (this.props.onResize) {\n            this.props.onResize(event, direction, this.resizable, delta);\n        }\n    };\n    Resizable.prototype.onMouseUp = function (event) {\n        var _a = this.state, isResizing = _a.isResizing, direction = _a.direction, original = _a.original;\n        if (!isResizing || !this.resizable) {\n            return;\n        }\n        var delta = {\n            width: this.size.width - original.width,\n            height: this.size.height - original.height,\n        };\n        if (this.props.onResizeStop) {\n            this.props.onResizeStop(event, direction, this.resizable, delta);\n        }\n        if (this.props.size) {\n            this.setState(this.props.size);\n        }\n        this.unbindEvents();\n        this.setState({\n            isResizing: false,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: 'auto' }),\n        });\n    };\n    Resizable.prototype.updateSize = function (size) {\n        this.setState({ width: size.width, height: size.height });\n    };\n    Resizable.prototype.renderResizer = function () {\n        var _this = this;\n        var _a = this.props, enable = _a.enable, handleStyles = _a.handleStyles, handleClasses = _a.handleClasses, handleWrapperStyle = _a.handleWrapperStyle, handleWrapperClass = _a.handleWrapperClass, handleComponent = _a.handleComponent;\n        if (!enable) {\n            return null;\n        }\n        var resizers = Object.keys(enable).map(function (dir) {\n            if (enable[dir] !== false) {\n                return (React.createElement(Resizer, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null));\n            }\n            return null;\n        });\n        // #93 Wrap the resize box in span (will not break 100% width/height)\n        return (React.createElement(\"div\", { className: handleWrapperClass, style: handleWrapperStyle }, resizers));\n    };\n    Resizable.prototype.render = function () {\n        var _this = this;\n        var extendsProps = Object.keys(this.props).reduce(function (acc, key) {\n            if (definedProps.indexOf(key) !== -1) {\n                return acc;\n            }\n            acc[key] = _this.props[key];\n            return acc;\n        }, {});\n        var style = __assign(__assign(__assign({ position: 'relative', userSelect: this.state.isResizing ? 'none' : 'auto' }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: 'border-box', flexShrink: 0 });\n        if (this.state.flexBasis) {\n            style.flexBasis = this.state.flexBasis;\n        }\n        var Wrapper = this.props.as || 'div';\n        return (React.createElement(Wrapper, __assign({ ref: this.ref, style: style, className: this.props.className }, extendsProps),\n            this.state.isResizing && React.createElement(\"div\", { style: this.state.backgroundStyle }),\n            this.props.children,\n            this.renderResizer()));\n    };\n    Resizable.defaultProps = {\n        as: 'div',\n        onResizeStart: function () { },\n        onResize: function () { },\n        onResizeStop: function () { },\n        enable: {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true,\n            topRight: true,\n            bottomRight: true,\n            bottomLeft: true,\n            topLeft: true,\n        },\n        style: {},\n        grid: [1, 1],\n        lockAspectRatio: false,\n        lockAspectRatioExtraWidth: 0,\n        lockAspectRatioExtraHeight: 0,\n        scale: 1,\n        resizeRatio: 1,\n        snapGap: 0,\n    };\n    return Resizable;\n}(React.PureComponent));\nexport { Resizable };\n","// Libraries\nimport { css, cx, keyframes } from '@emotion/css';\nimport { Resizable, ResizeCallback } from 're-resizable';\nimport React from 'react';\n\n// Services & Utils\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { getDragStyles, useStyles2, useTheme2 } from '@grafana/ui';\n\nexport interface Props {\n  width: number;\n  children: React.ReactNode;\n  onResize?: ResizeCallback;\n}\n\nexport function ExploreDrawer(props: Props) {\n  const { width, children, onResize } = props;\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const dragStyles = getDragStyles(theme);\n  const drawerWidth = `${width + 31.5}px`;\n\n  return (\n    <Resizable\n      className={cx(styles.fixed, styles.container, styles.drawerActive)}\n      defaultSize={{ width: drawerWidth, height: `${theme.components.horizontalDrawer.defaultHeight}px` }}\n      handleClasses={{ top: dragStyles.dragHandleHorizontal }}\n      enable={{\n        top: true,\n        right: false,\n        bottom: false,\n        left: false,\n        topRight: false,\n        bottomRight: false,\n        bottomLeft: false,\n        topLeft: false,\n      }}\n      maxHeight=\"100vh\"\n      maxWidth={drawerWidth}\n      minWidth={drawerWidth}\n      onResize={onResize}\n    >\n      {children}\n    </Resizable>\n  );\n}\n\nconst drawerSlide = (theme: GrafanaTheme2) => keyframes`\n  0% {\n    transform: translateY(${theme.components.horizontalDrawer.defaultHeight}px);\n  }\n\n  100% {\n    transform: translateY(0px);\n  }\n`;\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  // @ts-expect-error csstype doesn't allow !important. see https://github.com/frenic/csstype/issues/114\n  fixed: css({\n    position: 'fixed !important',\n  }),\n  container: css({\n    bottom: 0,\n    background: theme.colors.background.primary,\n    borderTop: `1px solid ${theme.colors.border.weak}`,\n    margin: theme.spacing(0, -2, 0, -2),\n    boxShadow: theme.shadows.z3,\n    zIndex: theme.zIndex.navbarFixed,\n  }),\n  drawerActive: css({\n    opacity: 1,\n    animation: `0.5s ease-out ${drawerSlide(theme)}`,\n  }),\n});\n","import React, { useEffect, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { CoreApp, LoadingState } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime/src';\nimport { defaultTimeZone, TimeZone } from '@grafana/schema';\nimport { TabbedContainer, TabConfig } from '@grafana/ui';\nimport { requestIdGenerator } from 'app/core/utils/explore';\nimport { ExploreDrawer } from 'app/features/explore/ExploreDrawer';\nimport { InspectDataTab } from 'app/features/inspector/InspectDataTab';\nimport { InspectErrorTab } from 'app/features/inspector/InspectErrorTab';\nimport { InspectJSONTab } from 'app/features/inspector/InspectJSONTab';\nimport { InspectStatsTab } from 'app/features/inspector/InspectStatsTab';\nimport { QueryInspector } from 'app/features/inspector/QueryInspector';\nimport { mixedRequestId } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { StoreState, ExploreItemState } from 'app/types';\n\nimport { GetDataOptions } from '../query/state/PanelQueryRunner';\n\nimport { runQueries } from './state/query';\n\ninterface DispatchProps {\n  width: number;\n  exploreId: string;\n  timeZone: TimeZone;\n  onClose: () => void;\n  isMixed: boolean;\n}\n\ntype Props = DispatchProps & ConnectedProps<typeof connector>;\n\nexport function ExploreQueryInspector(props: Props) {\n  const { width, onClose, queryResponse, timeZone, isMixed, exploreId } = props;\n  const [dataOptions, setDataOptions] = useState<GetDataOptions>({\n    withTransforms: false,\n    withFieldConfig: true,\n  });\n  const dataFrames = queryResponse?.series || [];\n  let errors = queryResponse?.errors;\n  if (!errors?.length && queryResponse?.error) {\n    errors = [queryResponse.error];\n  }\n\n  useEffect(() => {\n    reportInteraction('grafana_explore_query_inspector_opened');\n  }, []);\n\n  const statsTab: TabConfig = {\n    label: 'Stats',\n    value: 'stats',\n    icon: 'chart-line',\n    content: <InspectStatsTab data={queryResponse!} timeZone={queryResponse?.request?.timezone ?? defaultTimeZone} />,\n  };\n\n  const jsonTab: TabConfig = {\n    label: 'JSON',\n    value: 'json',\n    icon: 'brackets-curly',\n    content: <InspectJSONTab data={queryResponse} onClose={onClose} />,\n  };\n\n  const dataTab: TabConfig = {\n    label: 'Data',\n    value: 'data',\n    icon: 'database',\n    content: (\n      <InspectDataTab\n        data={dataFrames}\n        dataName={'Explore'}\n        isLoading={queryResponse.state === LoadingState.Loading}\n        options={dataOptions}\n        timeZone={timeZone}\n        app={CoreApp.Explore}\n        formattedDataDescription=\"Matches the format in the panel\"\n        onOptionsChange={setDataOptions}\n      />\n    ),\n  };\n\n  const queryTab: TabConfig = {\n    label: 'Query',\n    value: 'query',\n    icon: 'info-circle',\n    content: (\n      <QueryInspector\n        instanceId={isMixed ? mixedRequestId(0, requestIdGenerator(exploreId)) : requestIdGenerator(exploreId)}\n        data={queryResponse}\n        onRefreshQuery={() => props.runQueries({ exploreId })}\n      />\n    ),\n  };\n\n  const tabs = [statsTab, queryTab, jsonTab, dataTab];\n  if (errors?.length) {\n    const errorTab: TabConfig = {\n      label: 'Error',\n      value: 'error',\n      icon: 'exclamation-triangle',\n      content: <InspectErrorTab errors={errors} />,\n    };\n    tabs.push(errorTab);\n  }\n  return (\n    <ExploreDrawer width={width}>\n      <TabbedContainer tabs={tabs} onClose={onClose} closeIconTooltip=\"Close query inspector\" />\n    </ExploreDrawer>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore.panes[exploreId]!;\n  const { queryResponse } = item;\n\n  return {\n    queryResponse,\n  };\n}\n\nconst mapDispatchToProps = {\n  runQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default connector(ExploreQueryInspector);\n","import React from 'react';\n\nimport { Tooltip, ToolbarButton } from '@grafana/ui';\n\ninterface TimeSyncButtonProps {\n  isSynced: boolean;\n  onClick: () => void;\n}\n\nexport function TimeSyncButton(props: TimeSyncButtonProps) {\n  const { onClick, isSynced } = props;\n\n  const syncTimesTooltip = () => {\n    const { isSynced } = props;\n    const tooltip = isSynced ? 'Unsync all views' : 'Sync all views to this time range';\n    return <>{tooltip}</>;\n  };\n\n  return (\n    <Tooltip content={syncTimesTooltip} placement=\"bottom\">\n      <ToolbarButton\n        icon=\"link\"\n        variant={isSynced ? 'active' : 'canvas'}\n        aria-label={isSynced ? 'Synced times' : 'Unsynced times'}\n        onClick={onClick}\n      />\n    </Tooltip>\n  );\n}\n","import React, { Component } from 'react';\n\nimport { TimeRange, RawTimeRange, dateTimeForTimeZone, dateMath } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { TimeZone } from '@grafana/schema';\nimport { TimePickerWithHistory } from 'app/core/components/TimePicker/TimePickerWithHistory';\nimport { getShiftedTimeRange, getZoomedTimeRange } from 'app/core/utils/timePicker';\n\nimport { TimeSyncButton } from './TimeSyncButton';\n\nexport interface Props {\n  exploreId: string;\n  hideText?: boolean;\n  range: TimeRange;\n  timeZone: TimeZone;\n  fiscalYearStartMonth: number;\n  splitted: boolean;\n  syncedTimes: boolean;\n  onChangeTimeSync: () => void;\n  onChangeTime: (range: RawTimeRange) => void;\n  onChangeTimeZone: (timeZone: TimeZone) => void;\n  onChangeFiscalYearStartMonth: (fiscalYearStartMonth: number) => void;\n}\n\nexport class ExploreTimeControls extends Component<Props> {\n  onMoveTimePicker = (direction: number) => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getShiftedTimeRange(direction, range);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  onMoveForward = () => this.onMoveTimePicker(1);\n  onMoveBack = () => this.onMoveTimePicker(-1);\n\n  onChangeTimePicker = (timeRange: TimeRange) => {\n    const adjustedFrom = dateMath.isMathString(timeRange.raw.from) ? timeRange.raw.from : timeRange.from;\n    const adjustedTo = dateMath.isMathString(timeRange.raw.to) ? timeRange.raw.to : timeRange.to;\n\n    this.props.onChangeTime({\n      from: adjustedFrom,\n      to: adjustedTo,\n    });\n\n    reportInteraction('grafana_explore_time_picker_time_range_changed', {\n      timeRangeFrom: adjustedFrom,\n      timeRangeTo: adjustedTo,\n    });\n  };\n\n  onZoom = () => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getZoomedTimeRange(range, 2);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  render() {\n    const {\n      range,\n      timeZone,\n      fiscalYearStartMonth,\n      splitted,\n      syncedTimes,\n      onChangeTimeSync,\n      hideText,\n      onChangeTimeZone,\n      onChangeFiscalYearStartMonth,\n    } = this.props;\n    const timeSyncButton = splitted ? <TimeSyncButton onClick={onChangeTimeSync} isSynced={syncedTimes} /> : undefined;\n    const timePickerCommonProps = {\n      value: range,\n      timeZone,\n      fiscalYearStartMonth,\n      onMoveBackward: this.onMoveBack,\n      onMoveForward: this.onMoveForward,\n      onZoom: this.onZoom,\n      hideText,\n    };\n\n    return (\n      <TimePickerWithHistory\n        isOnCanvas\n        {...timePickerCommonProps}\n        timeSyncButton={timeSyncButton}\n        isSynced={syncedTimes}\n        widthOverride={splitted ? window.innerWidth / 2 : undefined}\n        onChange={this.onChangeTimePicker}\n        onChangeTimeZone={onChangeTimeZone}\n        onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n      />\n    );\n  }\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { Tooltip, ButtonGroup, ToolbarButton } from '@grafana/ui';\n\ntype LiveTailButtonProps = {\n  splitted: boolean;\n  start: () => void;\n  stop: () => void;\n  pause: () => void;\n  resume: () => void;\n  isLive: boolean;\n  isPaused: boolean;\n};\n\nexport function LiveTailButton(props: LiveTailButtonProps) {\n  const { start, pause, resume, isLive, isPaused, stop, splitted } = props;\n  const buttonVariant = isLive && !isPaused ? 'active' : 'canvas';\n  const onClickMain = isLive ? (isPaused ? resume : pause) : start;\n\n  return (\n    <ButtonGroup>\n      <Tooltip\n        content={isLive && !isPaused ? <>Pause the live stream</> : <>Start live stream your logs</>}\n        placement=\"bottom\"\n      >\n        <ToolbarButton\n          iconOnly={splitted}\n          variant={buttonVariant}\n          icon={!isLive || isPaused ? 'play' : 'pause'}\n          onClick={onClickMain}\n        >\n          {isLive && isPaused ? 'Paused' : 'Live'}\n        </ToolbarButton>\n      </Tooltip>\n\n      <CSSTransition\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={100}\n        in={isLive}\n        classNames={{\n          enter: styles.stopButtonEnter,\n          enterActive: styles.stopButtonEnterActive,\n          exit: styles.stopButtonExit,\n          exitActive: styles.stopButtonExitActive,\n        }}\n      >\n        <Tooltip content={<>Stop and exit the live stream</>} placement=\"bottom\">\n          <ToolbarButton variant={buttonVariant} onClick={stop} icon=\"square-shape\" />\n        </Tooltip>\n      </CSSTransition>\n    </ButtonGroup>\n  );\n}\n\nconst styles = {\n  stopButtonEnter: css({\n    label: 'stopButtonEnter',\n    width: 0,\n    opacity: 0,\n    overflow: 'hidden',\n  }),\n  stopButtonEnterActive: css({\n    label: 'stopButtonEnterActive',\n    opacity: 1,\n    width: '32px',\n  }),\n  stopButtonExit: css({\n    label: 'stopButtonExit',\n    width: '32px',\n    opacity: 1,\n    overflow: 'hidden',\n  }),\n  stopButtonExitActive: css({\n    label: 'stopButtonExitActive',\n    opacity: 0,\n    width: 0,\n  }),\n};\n","import React, { useState } from 'react';\n\nimport { IconName } from '@grafana/data';\nimport { reportInteraction, config } from '@grafana/runtime';\nimport { ToolbarButton, Dropdown, Menu, Stack, ToolbarButtonRow, MenuGroup } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\nimport { copyStringToClipboard } from 'app/core/utils/explore';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { useSelector } from 'app/types';\n\nimport { selectPanes } from './state/selectors';\nimport { constructAbsoluteUrl } from './utils/links';\n\ninterface ShortLinkGroupData {\n  key: string;\n  label: string;\n  items: ShortLinkMenuItemData[];\n}\n\ninterface ShortLinkMenuItemData {\n  key: string;\n  label: string;\n  icon: IconName;\n  getUrl: Function;\n  shorten: boolean;\n  absTime: boolean;\n}\n\nconst defaultMode: ShortLinkMenuItemData = {\n  key: 'copy-link',\n  label: t('explore.toolbar.copy-shortened-link', 'Copy shortened URL'),\n  icon: 'share-alt',\n  getUrl: () => undefined,\n  shorten: true,\n  absTime: false,\n};\n\nexport function ShortLinkButtonMenu() {\n  const panes = useSelector(selectPanes);\n  const [isOpen, setIsOpen] = useState(false);\n  const [lastSelected, setLastSelected] = useState(defaultMode);\n  const onCopyLink = (shorten: boolean, absTime: boolean, url?: string) => {\n    if (shorten) {\n      createAndCopyShortLink(url || global.location.href);\n      reportInteraction('grafana_explore_shortened_link_clicked', { isAbsoluteTime: absTime });\n    } else {\n      copyStringToClipboard(\n        url !== undefined\n          ? `${window.location.protocol}//${window.location.host}${config.appSubUrl}${url}`\n          : global.location.href\n      );\n      reportInteraction('grafana_explore_copy_link_clicked', { isAbsoluteTime: absTime });\n    }\n  };\n\n  const menuOptions: ShortLinkGroupData[] = [\n    {\n      key: 'normal',\n      label: t('explore.toolbar.copy-links-normal-category', 'Normal URL links'),\n      items: [\n        {\n          key: 'copy-shortened-link',\n          icon: 'link',\n          label: t('explore.toolbar.copy-shortened-link', 'Copy shortened URL'),\n          getUrl: () => undefined,\n          shorten: true,\n          absTime: false,\n        },\n        {\n          key: 'copy-link',\n          icon: 'link',\n          label: t('explore.toolbar.copy-link', 'Copy URL'),\n          getUrl: () => undefined,\n          shorten: false,\n          absTime: false,\n        },\n      ],\n    },\n    {\n      key: 'timesync',\n      label: t('explore.toolbar.copy-links-absolute-category', 'Time-sync URL links (share with time range intact)'),\n      items: [\n        {\n          key: 'copy-short-link-abs-time',\n          icon: 'clock-nine',\n          label: t('explore.toolbar.copy-shortened-link-abs-time', 'Copy Absolute Shortened URL'),\n          shorten: true,\n          getUrl: () => {\n            return constructAbsoluteUrl(panes);\n          },\n          absTime: true,\n        },\n        {\n          key: 'copy-link-abs-time',\n          icon: 'clock-nine',\n          label: t('explore.toolbar.copy-link-abs-time', 'Copy Absolute Shortened URL'),\n          shorten: false,\n          getUrl: () => {\n            return constructAbsoluteUrl(panes);\n          },\n          absTime: true,\n        },\n      ],\n    },\n  ];\n\n  const MenuActions = (\n    <Menu>\n      {menuOptions.map((groupOption) => {\n        return (\n          <MenuGroup key={groupOption.key} label={groupOption.label}>\n            {groupOption.items.map((option) => {\n              return (\n                <Menu.Item\n                  key={option.key}\n                  label={option.label}\n                  icon={option.icon}\n                  onClick={() => {\n                    const url = option.getUrl();\n                    onCopyLink(option.shorten, option.absTime, url);\n                    setLastSelected(option);\n                  }}\n                />\n              );\n            })}\n          </MenuGroup>\n        );\n      })}\n    </Menu>\n  );\n\n  // we need the Toolbar button click to be an action separate from opening/closing the menu\n  return (\n    <ToolbarButtonRow>\n      <Stack gap={0} direction=\"row\" alignItems=\"center\" wrap=\"nowrap\">\n        <ToolbarButton\n          tooltip={lastSelected.label}\n          icon={lastSelected.icon}\n          iconOnly={true}\n          narrow={true}\n          onClick={() => {\n            const url = lastSelected.getUrl();\n            onCopyLink(lastSelected.shorten, lastSelected.absTime, url);\n          }}\n          aria-label={t('explore.toolbar.copy-shortened-link', 'Copy shortened URL')}\n        />\n        <Dropdown overlay={MenuActions} placement=\"bottom-end\" onVisibleChange={setIsOpen}>\n          <ToolbarButton\n            narrow={true}\n            isOpen={isOpen}\n            aria-label={t('explore.toolbar.copy-shortened-link-menu', 'Open copy link options')}\n          />\n        </Dropdown>\n      </Stack>\n    </ToolbarButtonRow>\n  );\n}\n","import React, { lazy, ReactElement, Suspense, useMemo, useState } from 'react';\n\nimport { type PluginExtensionLink, PluginExtensionPoints, RawTimeRange, getTimeZone } from '@grafana/data';\nimport { getPluginLinkExtensions, config } from '@grafana/runtime';\nimport { DataQuery, TimeZone } from '@grafana/schema';\nimport { Dropdown, ToolbarButton } from '@grafana/ui';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction, ExplorePanelData, useSelector } from 'app/types';\n\nimport { getExploreItemSelector, isLeftPaneSelector, selectCorrelationDetails } from '../state/selectors';\n\nimport { ConfirmNavigationModal } from './ConfirmNavigationModal';\nimport { ToolbarExtensionPointMenu } from './ToolbarExtensionPointMenu';\n\nconst AddToDashboard = lazy(() =>\n  import('./AddToDashboard').then(({ AddToDashboard }) => ({ default: AddToDashboard }))\n);\n\ntype Props = {\n  exploreId: string;\n  timeZone: TimeZone;\n};\n\nexport function ToolbarExtensionPoint(props: Props): ReactElement | null {\n  const { exploreId } = props;\n  const [selectedExtension, setSelectedExtension] = useState<PluginExtensionLink | undefined>();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const context = useExtensionPointContext(props);\n  const extensions = useExtensionLinks(context);\n  const selectExploreItem = getExploreItemSelector(exploreId);\n  const noQueriesInPane = useSelector(selectExploreItem)?.queries?.length;\n\n  // If we only have the explore core extension point registered we show the old way of\n  // adding a query to a dashboard.\n  if (extensions.length <= 1) {\n    const canAddPanelToDashboard =\n      contextSrv.hasPermission(AccessControlAction.DashboardsCreate) ||\n      contextSrv.hasPermission(AccessControlAction.DashboardsWrite);\n\n    if (!canAddPanelToDashboard) {\n      return null;\n    }\n\n    return (\n      <Suspense fallback={null}>\n        <AddToDashboard exploreId={exploreId} />\n      </Suspense>\n    );\n  }\n\n  const menu = <ToolbarExtensionPointMenu extensions={extensions} onSelect={setSelectedExtension} />;\n\n  return (\n    <>\n      <Dropdown onVisibleChange={setIsOpen} placement=\"bottom-start\" overlay={menu}>\n        <ToolbarButton aria-label=\"Add\" disabled={!Boolean(noQueriesInPane)} variant=\"canvas\" isOpen={isOpen}>\n          Add\n        </ToolbarButton>\n      </Dropdown>\n      {!!selectedExtension && !!selectedExtension.path && (\n        <ConfirmNavigationModal\n          path={selectedExtension.path}\n          title={selectedExtension.title}\n          onDismiss={() => setSelectedExtension(undefined)}\n        />\n      )}\n    </>\n  );\n}\n\nexport type PluginExtensionExploreContext = {\n  exploreId: string;\n  targets: DataQuery[];\n  data: ExplorePanelData;\n  timeRange: RawTimeRange;\n  timeZone: TimeZone;\n  shouldShowAddCorrelation: boolean;\n};\n\nfunction useExtensionPointContext(props: Props): PluginExtensionExploreContext {\n  const { exploreId, timeZone } = props;\n  const isCorrelationDetails = useSelector(selectCorrelationDetails);\n  const isCorrelationsEditorMode = isCorrelationDetails?.editorMode || false;\n  const { queries, queryResponse, range } = useSelector(getExploreItemSelector(exploreId))!;\n  const isLeftPane = useSelector(isLeftPaneSelector(exploreId));\n\n  const datasourceUids = queries.map((query) => query?.datasource?.uid).filter((uid) => uid !== undefined);\n  const numUniqueIds = [...new Set(datasourceUids)].length;\n  const canWriteCorrelations = contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n\n  return useMemo(() => {\n    return {\n      exploreId,\n      targets: queries,\n      data: queryResponse,\n      timeRange: range.raw,\n      timeZone: getTimeZone({ timeZone }),\n      shouldShowAddCorrelation:\n        config.featureToggles.correlations === true &&\n        canWriteCorrelations &&\n        !isCorrelationsEditorMode &&\n        isLeftPane &&\n        numUniqueIds === 1,\n    };\n  }, [\n    exploreId,\n    queries,\n    queryResponse,\n    range.raw,\n    timeZone,\n    canWriteCorrelations,\n    isCorrelationsEditorMode,\n    isLeftPane,\n    numUniqueIds,\n  ]);\n}\n\nfunction useExtensionLinks(context: PluginExtensionExploreContext): PluginExtensionLink[] {\n  return useMemo(() => {\n    const { extensions } = getPluginLinkExtensions({\n      extensionPointId: PluginExtensionPoints.ExploreToolbarAction,\n      context: context,\n      limitPerPlugin: 3,\n    });\n\n    return extensions;\n  }, [context]);\n}\n","import React, { useCallback } from 'react';\n\nimport { RefreshPicker } from '@grafana/ui';\nimport { useDispatch } from 'app/types';\n\nimport { setPausedStateAction, runQueries, clearLogs } from './state/query';\nimport { changeRefreshInterval } from './state/time';\n\n/**\n * Hook that gives you all the functions needed to control the live tailing.\n */\nexport function useLiveTailControls(exploreId: string) {\n  const dispatch = useDispatch();\n\n  const pause = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: true }));\n  }, [exploreId, dispatch]);\n\n  const resume = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: false }));\n  }, [exploreId, dispatch]);\n\n  const stop = useCallback(() => {\n    // We need to pause here first because there is transition where we are not live but live logs are still shown\n    // to cross fade with the normal view. This will prevent reordering of the logs in the live view during the\n    // transition.\n    pause();\n\n    // TODO referencing this from perspective of refresh picker when there is designated button for it now is not\n    //  great. Needs a bit of refactoring.\n    dispatch(changeRefreshInterval({ exploreId, refreshInterval: RefreshPicker.offOption.value }));\n    dispatch(runQueries({ exploreId }));\n  }, [exploreId, dispatch, pause]);\n\n  const start = useCallback(() => {\n    dispatch(changeRefreshInterval({ exploreId, refreshInterval: RefreshPicker.liveOption.value }));\n  }, [exploreId, dispatch]);\n\n  const clear = useCallback(() => {\n    dispatch(clearLogs({ exploreId }));\n  }, [exploreId, dispatch]);\n\n  return {\n    pause,\n    resume,\n    stop,\n    start,\n    clear,\n  };\n}\n\ntype Props = {\n  exploreId: string;\n  children: (controls: ReturnType<typeof useLiveTailControls>) => React.ReactElement;\n};\n\n/**\n * If you can't use the hook you can use this as a render prop pattern.\n */\nexport function LiveTailControls(props: Props) {\n  const controls = useLiveTailControls(props.exploreId);\n  return props.children(controls);\n}\n","import { css, cx } from '@emotion/css';\nimport { pick } from 'lodash';\nimport React, { useMemo } from 'react';\nimport { shallowEqual } from 'react-redux';\n\nimport { DataSourceInstanceSettings, RawTimeRange, GrafanaTheme2 } from '@grafana/data';\nimport { reportInteraction, config } from '@grafana/runtime';\nimport {\n  defaultIntervals,\n  PageToolbar,\n  RefreshPicker,\n  SetInterval,\n  ToolbarButton,\n  ButtonGroup,\n  useStyles2,\n} from '@grafana/ui';\nimport { AppChromeUpdate } from 'app/core/components/AppChrome/AppChromeUpdate';\nimport { t, Trans } from 'app/core/internationalization';\nimport { DataSourcePicker } from 'app/features/datasources/components/picker/DataSourcePicker';\nimport { CORRELATION_EDITOR_POST_CONFIRM_ACTION } from 'app/types/explore';\nimport { StoreState, useDispatch, useSelector } from 'app/types/store';\n\nimport { contextSrv } from '../../core/core';\nimport { updateFiscalYearStartMonthForSession, updateTimeZoneForSession } from '../profile/state/reducers';\nimport { getFiscalYearStartMonth, getTimeZone } from '../profile/state/selectors';\n\nimport { ExploreTimeControls } from './ExploreTimeControls';\nimport { LiveTailButton } from './LiveTailButton';\nimport { ShortLinkButtonMenu } from './ShortLinkButtonMenu';\nimport { ToolbarExtensionPoint } from './extensions/ToolbarExtensionPoint';\nimport { changeDatasource } from './state/datasource';\nimport { changeCorrelationHelperData } from './state/explorePane';\nimport {\n  splitClose,\n  splitOpen,\n  maximizePaneAction,\n  evenPaneResizeAction,\n  changeCorrelationEditorDetails,\n} from './state/main';\nimport { cancelQueries, runQueries, selectIsWaitingForData } from './state/query';\nimport { isLeftPaneSelector, isSplit, selectCorrelationDetails, selectPanesEntries } from './state/selectors';\nimport { syncTimes, changeRefreshInterval } from './state/time';\nimport { LiveTailControls } from './useLiveTailControls';\n\nconst getStyles = (theme: GrafanaTheme2, splitted: Boolean) => ({\n  rotateIcon: css({\n    '> div > svg': {\n      transform: 'rotate(180deg)',\n    },\n  }),\n  toolbarButton: css({\n    display: 'flex',\n    justifyContent: 'center',\n    marginRight: theme.spacing(0.5),\n    width: splitted && theme.spacing(6),\n  }),\n});\n\ninterface Props {\n  exploreId: string;\n  onChangeTime: (range: RawTimeRange, changedByScanner?: boolean) => void;\n  onContentOutlineToogle: () => void;\n  isContentOutlineOpen: boolean;\n}\n\nexport function ExploreToolbar({ exploreId, onChangeTime, onContentOutlineToogle, isContentOutlineOpen }: Props) {\n  const dispatch = useDispatch();\n  const splitted = useSelector(isSplit);\n  const styles = useStyles2(getStyles, splitted);\n\n  const timeZone = useSelector((state: StoreState) => getTimeZone(state.user));\n  const fiscalYearStartMonth = useSelector((state: StoreState) => getFiscalYearStartMonth(state.user));\n  const { refreshInterval, datasourceInstance, range, isLive, isPaused, syncedTimes } = useSelector(\n    (state: StoreState) => ({\n      ...pick(state.explore.panes[exploreId]!, 'refreshInterval', 'datasourceInstance', 'range', 'isLive', 'isPaused'),\n      syncedTimes: state.explore.syncedTimes,\n    }),\n    shallowEqual\n  );\n  const loading = useSelector(selectIsWaitingForData(exploreId));\n  const isLargerPane = useSelector((state: StoreState) => state.explore.largerExploreId === exploreId);\n  const showSmallTimePicker = useSelector((state) => splitted || state.explore.panes[exploreId]!.containerWidth < 1210);\n  const showSmallDataSourcePicker = useSelector(\n    (state) => state.explore.panes[exploreId]!.containerWidth < (splitted ? 700 : 800)\n  );\n\n  const panes = useSelector(selectPanesEntries);\n  const correlationDetails = useSelector(selectCorrelationDetails);\n  const isCorrelationsEditorMode = correlationDetails?.editorMode || false;\n  const isLeftPane = useSelector(isLeftPaneSelector(exploreId));\n\n  const shouldRotateSplitIcon = useMemo(\n    () => (isLeftPane && isLargerPane) || (!isLeftPane && !isLargerPane),\n    [isLeftPane, isLargerPane]\n  );\n\n  const refreshPickerLabel = loading\n    ? t('explore.toolbar.refresh-picker-cancel', 'Cancel')\n    : t('explore.toolbar.refresh-picker-run', 'Run query');\n\n  const onChangeDatasource = async (dsSettings: DataSourceInstanceSettings) => {\n    if (!isCorrelationsEditorMode) {\n      dispatch(changeDatasource({ exploreId, datasource: dsSettings.uid, options: { importQueries: true } }));\n    } else {\n      if (correlationDetails?.correlationDirty || correlationDetails?.queryEditorDirty) {\n        // prompt will handle datasource change if needed\n        dispatch(\n          changeCorrelationEditorDetails({\n            isExiting: true,\n            postConfirmAction: {\n              exploreId: exploreId,\n              action: CORRELATION_EDITOR_POST_CONFIRM_ACTION.CHANGE_DATASOURCE,\n              changeDatasourceUid: dsSettings.uid,\n              isActionLeft: isLeftPane,\n            },\n          })\n        );\n      } else {\n        // if the left pane is changing, clear helper data for right pane\n        if (isLeftPane) {\n          panes.forEach((pane) => {\n            dispatch(\n              changeCorrelationHelperData({\n                exploreId: pane[0],\n                correlationEditorHelperData: undefined,\n              })\n            );\n          });\n        }\n\n        dispatch(changeDatasource({ exploreId, datasource: dsSettings.uid, options: { importQueries: true } }));\n      }\n    }\n  };\n\n  const onRunQuery = (loading = false) => {\n    if (loading) {\n      return dispatch(cancelQueries(exploreId));\n    } else {\n      return dispatch(runQueries({ exploreId }));\n    }\n  };\n\n  const onChangeTimeZone = (timezone: string) => dispatch(updateTimeZoneForSession(timezone));\n\n  const onOpenSplitView = () => {\n    dispatch(splitOpen());\n    reportInteraction('grafana_explore_split_view_opened', { origin: 'menu' });\n  };\n\n  const onCloseSplitView = () => {\n    if (isCorrelationsEditorMode) {\n      if (correlationDetails?.correlationDirty || correlationDetails?.queryEditorDirty) {\n        // if dirty, prompt\n        dispatch(\n          changeCorrelationEditorDetails({\n            isExiting: true,\n            postConfirmAction: {\n              exploreId: exploreId,\n              action: CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_PANE,\n              isActionLeft: isLeftPane,\n            },\n          })\n        );\n      } else {\n        // otherwise, clear helper data and close\n        panes.forEach((pane) => {\n          dispatch(\n            changeCorrelationHelperData({\n              exploreId: pane[0],\n              correlationEditorHelperData: undefined,\n            })\n          );\n        });\n        dispatch(splitClose(exploreId));\n        reportInteraction('grafana_explore_split_view_closed');\n      }\n    } else {\n      dispatch(splitClose(exploreId));\n      reportInteraction('grafana_explore_split_view_closed');\n    }\n  };\n\n  const onClickResize = () => {\n    if (isLargerPane) {\n      dispatch(evenPaneResizeAction());\n    } else {\n      dispatch(maximizePaneAction({ exploreId }));\n    }\n  };\n\n  const onChangeTimeSync = () => {\n    dispatch(syncTimes(exploreId));\n  };\n\n  const onChangeFiscalYearStartMonth = (fiscalyearStartMonth: number) =>\n    dispatch(updateFiscalYearStartMonthForSession(fiscalyearStartMonth));\n\n  const onChangeRefreshInterval = (refreshInterval: string) => {\n    dispatch(changeRefreshInterval({ exploreId, refreshInterval }));\n  };\n\n  const navBarActions = [<ShortLinkButtonMenu key=\"share\" />, <div style={{ flex: 1 }} key=\"spacer0\" />];\n\n  return (\n    <div>\n      {refreshInterval && <SetInterval func={onRunQuery} interval={refreshInterval} loading={loading} />}\n      <div>\n        <AppChromeUpdate actions={navBarActions} />\n      </div>\n      <PageToolbar\n        aria-label={t('explore.toolbar.aria-label', 'Explore toolbar')}\n        leftItems={[\n          config.featureToggles.exploreContentOutline && (\n            <ToolbarButton\n              key=\"content-outline\"\n              variant=\"canvas\"\n              tooltip=\"Content outline\"\n              icon=\"list-ui-alt\"\n              iconOnly={splitted}\n              onClick={onContentOutlineToogle}\n              aria-expanded={isContentOutlineOpen}\n              aria-controls={isContentOutlineOpen ? 'content-outline-container' : undefined}\n              className={styles.toolbarButton}\n            >\n              Outline\n            </ToolbarButton>\n          ),\n          <DataSourcePicker\n            key={`${exploreId}-ds-picker`}\n            mixed={!isCorrelationsEditorMode}\n            onChange={onChangeDatasource}\n            current={datasourceInstance?.getRef()}\n            hideTextValue={showSmallDataSourcePicker}\n            width={showSmallDataSourcePicker ? 8 : undefined}\n          />,\n        ].filter(Boolean)}\n        forceShowLeftItems\n      >\n        {[\n          !splitted ? (\n            <ToolbarButton\n              variant=\"canvas\"\n              key=\"split\"\n              tooltip={t('explore.toolbar.split-tooltip', 'Split the pane')}\n              onClick={onOpenSplitView}\n              icon=\"columns\"\n              disabled={isLive}\n            >\n              <Trans i18nKey=\"explore.toolbar.split-title\">Split</Trans>\n            </ToolbarButton>\n          ) : (\n            <ButtonGroup key=\"split-controls\">\n              <ToolbarButton\n                variant=\"canvas\"\n                tooltip={\n                  isLargerPane\n                    ? t('explore.toolbar.split-narrow', 'Narrow pane')\n                    : t('explore.toolbar.split-widen', 'Widen pane')\n                }\n                onClick={onClickResize}\n                icon={isLargerPane ? 'gf-movepane-left' : 'gf-movepane-right'}\n                iconOnly={true}\n                className={cx(shouldRotateSplitIcon && styles.rotateIcon)}\n              />\n              <ToolbarButton\n                tooltip={t('explore.toolbar.split-close-tooltip', 'Close split pane')}\n                onClick={onCloseSplitView}\n                icon=\"times\"\n                variant=\"canvas\"\n              >\n                <Trans i18nKey=\"explore.toolbar.split-close\"> Close </Trans>\n              </ToolbarButton>\n            </ButtonGroup>\n          ),\n          <ToolbarExtensionPoint key=\"toolbar-extension-point\" exploreId={exploreId} timeZone={timeZone} />,\n          !isLive && (\n            <ExploreTimeControls\n              key=\"timeControls\"\n              exploreId={exploreId}\n              range={range}\n              timeZone={timeZone}\n              fiscalYearStartMonth={fiscalYearStartMonth}\n              onChangeTime={onChangeTime}\n              splitted={splitted}\n              syncedTimes={syncedTimes}\n              onChangeTimeSync={onChangeTimeSync}\n              hideText={showSmallTimePicker}\n              onChangeTimeZone={onChangeTimeZone}\n              onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n            />\n          ),\n          <RefreshPicker\n            key=\"refreshPicker\"\n            onIntervalChanged={onChangeRefreshInterval}\n            value={refreshInterval}\n            isLoading={loading}\n            text={showSmallTimePicker ? undefined : refreshPickerLabel}\n            tooltip={showSmallTimePicker ? refreshPickerLabel : undefined}\n            intervals={contextSrv.getValidIntervals(defaultIntervals)}\n            isLive={isLive}\n            onRefresh={() => onRunQuery(loading)}\n            noIntervalPicker={isLive}\n            primary={true}\n            width={(showSmallTimePicker ? 35 : 108) + 'px'}\n          />,\n          datasourceInstance?.meta.streaming && (\n            <LiveTailControls key=\"liveControls\" exploreId={exploreId}>\n              {(c) => {\n                const controls = {\n                  ...c,\n                  start: () => {\n                    reportInteraction('grafana_explore_logs_live_tailing_clicked', {\n                      datasourceType: datasourceInstance?.type,\n                    });\n                    c.start();\n                  },\n                };\n                return (\n                  <LiveTailButton\n                    splitted={splitted}\n                    isLive={isLive}\n                    isPaused={isPaused}\n                    start={controls.start}\n                    pause={controls.pause}\n                    resume={controls.resume}\n                    stop={controls.stop}\n                  />\n                );\n              }}\n            </LiveTailControls>\n          ),\n        ].filter(Boolean)}\n      </PageToolbar>\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { DataFrame, GrafanaTheme2, CoreApp } from '@grafana/data';\nimport { FlameGraph } from '@grafana/flamegraph';\nimport { reportInteraction, config } from '@grafana/runtime';\nimport { useStyles2 } from '@grafana/ui';\n\ninterface Props {\n  dataFrames: DataFrame[];\n}\n\nfunction interaction(name: string, context: Record<string, string | number> = {}) {\n  reportInteraction(`grafana_flamegraph_${name}`, {\n    app: CoreApp.Unknown,\n    grafana_version: config.buildInfo.version,\n    ...context,\n  });\n}\n\nexport const FlameGraphExploreContainer = (props: Props) => {\n  const styles = useStyles2((theme) => getStyles(theme));\n\n  return (\n    <div className={styles.container}>\n      <FlameGraph\n        data={props.dataFrames[0]}\n        stickyHeader={true}\n        getTheme={() => config.theme2}\n        onTableSymbolClick={() => interaction('table_item_selected')}\n        onViewSelected={(view: string) => interaction('view_selected', { view })}\n        onTextAlignSelected={(align: string) => interaction('text_align_selected', { align })}\n        onTableSort={(sort: string) => interaction('table_sort_selected', { sort })}\n        disableCollapsing={!config.featureToggles.flameGraphItemCollapsing}\n      />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css({\n    background: theme.colors.background.primary,\n    display: 'flow-root',\n    padding: theme.spacing(0, 1, 1, 1),\n    border: `1px solid ${theme.components.panel.borderColor}`,\n    borderRadius: theme.shape.radius.default,\n  }),\n});\n","import React, { useState, useEffect } from 'react';\nimport { useInterval } from 'react-use';\n\nimport { Time, TimeProps } from './Time';\n\nconst INTERVAL = 150;\n\nexport interface ElapsedTimeProps extends Omit<TimeProps, 'timeInMs'> {\n  // Use this to reset the timer. Any value is allowed just need to be !== from the previous.\n  // Keep in mind things like [] !== [] or {} !== {}.\n  resetKey?: unknown;\n}\n\nexport const ElapsedTime = ({ resetKey, humanize, className }: ElapsedTimeProps) => {\n  const [elapsed, setElapsed] = useState(0); // the current value of elapsed\n\n  // hook that will schedule a interval and then update the elapsed value on every tick.\n  useInterval(() => setElapsed(elapsed + INTERVAL), INTERVAL);\n  // this effect will only be run when resetKey changes. This will reset the elapsed to 0.\n  useEffect(() => setElapsed(0), [resetKey]);\n\n  return <Time timeInMs={elapsed} className={className} humanize={humanize} />;\n};\n","import { css, cx } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport tinycolor from 'tinycolor2';\n\nimport { LogRowModel, dateTimeFormat, GrafanaTheme2, LogsSortOrder } from '@grafana/data';\nimport { TimeZone } from '@grafana/schema';\nimport { Button, Themeable2, withTheme2 } from '@grafana/ui';\n\nimport { LogMessageAnsi } from '../../logs/components/LogMessageAnsi';\nimport { getLogRowStyles } from '../../logs/components/getLogRowStyles';\nimport { sortLogRows } from '../../logs/utils';\nimport { ElapsedTime } from '../ElapsedTime';\nimport { filterLogRowsByIndex } from '../state/utils';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  logsRowsLive: css`\n    label: logs-rows-live;\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n    display: flex;\n    flex-flow: column nowrap;\n    height: 60vh;\n    overflow-y: scroll;\n    :first-child {\n      margin-top: auto !important;\n    }\n  `,\n  logsRowFade: css`\n    label: logs-row-fresh;\n    color: ${theme.colors.text};\n    background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n    animation: fade 1s ease-out 1s 1 normal forwards;\n    @keyframes fade {\n      from {\n        background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n      }\n      to {\n        background-color: transparent;\n      }\n    }\n  `,\n  logsRowsIndicator: css`\n    font-size: ${theme.typography.h6.fontSize};\n    padding-top: ${theme.spacing(1)};\n    display: flex;\n    align-items: center;\n  `,\n  button: css`\n    margin-right: ${theme.spacing(1)};\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n});\n\nexport interface Props extends Themeable2 {\n  logRows?: LogRowModel[];\n  timeZone: TimeZone;\n  stopLive: () => void;\n  onPause: () => void;\n  onResume: () => void;\n  onClear: () => void;\n  clearedAtIndex: number | null;\n  isPaused: boolean;\n}\n\ninterface State {\n  logRowsToRender?: LogRowModel[];\n}\n\nclass LiveLogs extends PureComponent<Props, State> {\n  private liveEndDiv: HTMLDivElement | null = null;\n  private scrollContainerRef = React.createRef<HTMLTableSectionElement>();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logRowsToRender: props.logRows,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, state: State) {\n    if (nextProps.isPaused && nextProps.clearedAtIndex) {\n      return {\n        logRowsToRender: filterLogRowsByIndex(nextProps.clearedAtIndex, state.logRowsToRender),\n      };\n    }\n\n    if (nextProps.isPaused) {\n      return null;\n    }\n\n    return {\n      // We update what we show only if not paused. We keep any background subscriptions running and keep updating\n      // our state, but we do not show the updates, this allows us start again showing correct result after resuming\n      // without creating a gap in the log results.\n      logRowsToRender: nextProps.logRows,\n    };\n  }\n\n  /**\n   * Handle pausing when user scrolls up so that we stop resetting his position to the bottom when new row arrives.\n   * We do not need to throttle it here much, adding new rows should be throttled/buffered itself in the query epics\n   * and after you pause we remove the handler and add it after you manually resume, so this should not be fired often.\n   */\n  onScroll = (event: React.SyntheticEvent) => {\n    const { isPaused, onPause } = this.props;\n    const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n    const distanceFromBottom = scrollHeight - (scrollTop + clientHeight);\n    if (distanceFromBottom >= 5 && !isPaused) {\n      onPause();\n    }\n  };\n\n  rowsToRender = () => {\n    const { isPaused } = this.props;\n    let { logRowsToRender: rowsToRender = [] } = this.state;\n    if (!isPaused) {\n      // A perf optimisation here. Show just 100 rows when streaming and full length when the streaming is paused.\n      rowsToRender = sortLogRows(rowsToRender, LogsSortOrder.Ascending).slice(-100);\n    }\n    return rowsToRender;\n  };\n\n  render() {\n    const { theme, timeZone, onPause, onResume, onClear, isPaused } = this.props;\n    const styles = getStyles(theme);\n    const { logsRow, logsRowLocalTime, logsRowMessage } = getLogRowStyles(theme);\n\n    return (\n      <div>\n        <table className={styles.fullWidth}>\n          <tbody\n            onScroll={isPaused ? undefined : this.onScroll}\n            className={styles.logsRowsLive}\n            ref={this.scrollContainerRef}\n          >\n            {this.rowsToRender().map((row: LogRowModel) => {\n              return (\n                <tr className={cx(logsRow, styles.logsRowFade)} key={row.uid}>\n                  <td className={logsRowLocalTime}>{dateTimeFormat(row.timeEpochMs, { timeZone })}</td>\n                  <td className={logsRowMessage}>{row.hasAnsi ? <LogMessageAnsi value={row.raw} /> : row.entry}</td>\n                </tr>\n              );\n            })}\n            <tr\n              ref={(element) => {\n                this.liveEndDiv = element;\n                // This is triggered on every update so on every new row. It keeps the view scrolled at the bottom by\n                // default.\n                // As scrollTo is not implemented in JSDOM it needs to be part of the condition\n                if (this.liveEndDiv && this.scrollContainerRef.current?.scrollTo && !isPaused) {\n                  this.scrollContainerRef.current?.scrollTo(0, this.scrollContainerRef.current.scrollHeight);\n                }\n              }}\n            />\n          </tbody>\n        </table>\n        <div className={styles.logsRowsIndicator}>\n          <Button\n            icon={isPaused ? 'play' : 'pause'}\n            variant=\"secondary\"\n            onClick={isPaused ? onResume : onPause}\n            className={styles.button}\n          >\n            {isPaused ? 'Resume' : 'Pause'}\n          </Button>\n          <Button icon=\"trash-alt\" variant=\"secondary\" onClick={onClear} className={styles.button}>\n            Clear logs\n          </Button>\n          <Button icon=\"square-shape\" variant=\"secondary\" onClick={this.props.stopLive} className={styles.button}>\n            Exit live mode\n          </Button>\n          {isPaused ||\n            (this.rowsToRender().length > 0 && (\n              <span>\n                Last line received: <ElapsedTime resetKey={this.props.logRows} humanize={true} /> ago\n              </span>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const LiveLogsWithTheme = withTheme2(LiveLogs);\n","import { css } from '@emotion/css';\nimport React, { ReactNode, useEffect, useRef, useState } from 'react';\n\nimport { AbsoluteTimeRange, LogRowModel, TimeRange } from '@grafana/data';\nimport { convertRawToRange, isRelativeTime, isRelativeTimeRange } from '@grafana/data/src/datetime/rangeutil';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { LogsSortOrder, TimeZone } from '@grafana/schema';\n\nimport { LoadingIndicator } from './LoadingIndicator';\n\nexport type Props = {\n  children: ReactNode;\n  loading: boolean;\n  loadMoreLogs?: (range: AbsoluteTimeRange) => void;\n  range: TimeRange;\n  rows: LogRowModel[];\n  scrollElement?: HTMLDivElement;\n  sortOrder: LogsSortOrder;\n  timeZone: TimeZone;\n  topScrollEnabled?: boolean;\n};\n\nexport const InfiniteScroll = ({\n  children,\n  loading,\n  loadMoreLogs,\n  range,\n  rows,\n  scrollElement,\n  sortOrder,\n  timeZone,\n  topScrollEnabled = false,\n}: Props) => {\n  const [upperOutOfRange, setUpperOutOfRange] = useState(false);\n  const [lowerOutOfRange, setLowerOutOfRange] = useState(false);\n  const [upperLoading, setUpperLoading] = useState(false);\n  const [lowerLoading, setLowerLoading] = useState(false);\n  const rowsRef = useRef<LogRowModel[]>(rows);\n  const lastScroll = useRef<number>(scrollElement?.scrollTop || 0);\n\n  // Reset messages when range/order/rows change\n  useEffect(() => {\n    setUpperOutOfRange(false);\n    setLowerOutOfRange(false);\n  }, [range, rows, sortOrder]);\n\n  // Reset loading messages when loading stops\n  useEffect(() => {\n    if (!loading) {\n      setUpperLoading(false);\n      setLowerLoading(false);\n    }\n  }, [loading]);\n\n  // Ensure bottom loader visibility\n  useEffect(() => {\n    if (lowerLoading && scrollElement) {\n      scrollElement.scrollTo(0, scrollElement.scrollHeight - scrollElement.clientHeight);\n    }\n  }, [lowerLoading, scrollElement]);\n\n  // Request came back with no new past rows\n  useEffect(() => {\n    if (rows !== rowsRef.current && rows.length === rowsRef.current.length && (upperLoading || lowerLoading)) {\n      if (sortOrder === LogsSortOrder.Descending && lowerLoading) {\n        setLowerOutOfRange(true);\n      } else if (sortOrder === LogsSortOrder.Ascending && upperLoading) {\n        setUpperOutOfRange(true);\n      }\n    }\n    rowsRef.current = rows;\n  }, [lowerLoading, rows, sortOrder, upperLoading]);\n\n  useEffect(() => {\n    if (!scrollElement || !loadMoreLogs) {\n      return;\n    }\n\n    function handleScroll(event: Event | WheelEvent) {\n      if (!scrollElement || !loadMoreLogs || !rows.length || loading || !config.featureToggles.logsInfiniteScrolling) {\n        return;\n      }\n      event.stopImmediatePropagation();\n      const scrollDirection = shouldLoadMore(event, scrollElement, lastScroll.current);\n      lastScroll.current = scrollElement.scrollTop;\n      if (scrollDirection === ScrollDirection.NoScroll) {\n        return;\n      } else if (scrollDirection === ScrollDirection.Top && topScrollEnabled) {\n        scrollTop();\n      } else if (scrollDirection === ScrollDirection.Bottom) {\n        scrollBottom();\n      }\n    }\n\n    function scrollTop() {\n      const newRange = canScrollTop(getVisibleRange(rows), range, timeZone, sortOrder);\n      if (!newRange) {\n        setUpperOutOfRange(true);\n        return;\n      }\n      setUpperOutOfRange(false);\n      loadMoreLogs?.(newRange);\n      setUpperLoading(true);\n      reportInteraction('grafana_logs_infinite_scrolling', {\n        direction: 'top',\n        sort_order: sortOrder,\n      });\n    }\n\n    function scrollBottom() {\n      const newRange = canScrollBottom(getVisibleRange(rows), range, timeZone, sortOrder);\n      if (!newRange) {\n        setLowerOutOfRange(true);\n        return;\n      }\n      setLowerOutOfRange(false);\n      loadMoreLogs?.(newRange);\n      setLowerLoading(true);\n      reportInteraction('grafana_logs_infinite_scrolling', {\n        direction: 'bottom',\n        sort_order: sortOrder,\n      });\n    }\n\n    scrollElement.addEventListener('scroll', handleScroll);\n    scrollElement.addEventListener('wheel', handleScroll);\n\n    return () => {\n      scrollElement.removeEventListener('scroll', handleScroll);\n      scrollElement.removeEventListener('wheel', handleScroll);\n    };\n  }, [loadMoreLogs, loading, range, rows, scrollElement, sortOrder, timeZone, topScrollEnabled]);\n\n  // We allow \"now\" to move when using relative time, so we hide the message so it doesn't flash.\n  const hideTopMessage = sortOrder === LogsSortOrder.Descending && isRelativeTime(range.raw.to);\n  const hideBottomMessage = sortOrder === LogsSortOrder.Ascending && isRelativeTime(range.raw.to);\n\n  return (\n    <>\n      {upperLoading && <LoadingIndicator adjective={sortOrder === LogsSortOrder.Descending ? 'newer' : 'older'} />}\n      {!hideTopMessage && upperOutOfRange && outOfRangeMessage}\n      {children}\n      {!hideBottomMessage && lowerOutOfRange && outOfRangeMessage}\n      {lowerLoading && <LoadingIndicator adjective={sortOrder === LogsSortOrder.Descending ? 'older' : 'newer'} />}\n    </>\n  );\n};\n\nconst styles = {\n  messageContainer: css({\n    textAlign: 'center',\n    padding: 0.25,\n  }),\n};\n\nconst outOfRangeMessage = (\n  <div className={styles.messageContainer} data-testid=\"end-of-range\">\n    End of the selected time range.\n  </div>\n);\n\nenum ScrollDirection {\n  Top = -1,\n  Bottom = 1,\n  NoScroll = 0,\n}\nfunction shouldLoadMore(event: Event | WheelEvent, element: HTMLDivElement, lastScroll: number): ScrollDirection {\n  // Disable behavior if there is no scroll\n  if (element.scrollHeight <= element.clientHeight) {\n    return ScrollDirection.NoScroll;\n  }\n  const delta = event instanceof WheelEvent ? event.deltaY : element.scrollTop - lastScroll;\n  if (delta === 0) {\n    return ScrollDirection.NoScroll;\n  }\n  const scrollDirection = delta < 0 ? ScrollDirection.Top : ScrollDirection.Bottom;\n  const diff =\n    scrollDirection === ScrollDirection.Top\n      ? element.scrollTop\n      : element.scrollHeight - element.scrollTop - element.clientHeight;\n\n  return diff <= 1 ? scrollDirection : ScrollDirection.NoScroll;\n}\n\nfunction getVisibleRange(rows: LogRowModel[]) {\n  const firstTimeStamp = rows[0].timeEpochMs;\n  const lastTimeStamp = rows[rows.length - 1].timeEpochMs;\n\n  const visibleRange =\n    lastTimeStamp < firstTimeStamp\n      ? { from: lastTimeStamp, to: firstTimeStamp }\n      : { from: firstTimeStamp, to: lastTimeStamp };\n\n  return visibleRange;\n}\n\nfunction getPrevRange(visibleRange: AbsoluteTimeRange, currentRange: TimeRange) {\n  return { from: currentRange.from.valueOf(), to: visibleRange.from };\n}\n\nfunction getNextRange(visibleRange: AbsoluteTimeRange, currentRange: TimeRange, timeZone: TimeZone) {\n  // When requesting new logs, update the current range if using relative time ranges.\n  currentRange = updateCurrentRange(currentRange, timeZone);\n  return { from: visibleRange.to, to: currentRange.to.valueOf() };\n}\n\nexport const SCROLLING_THRESHOLD = 1e3;\n\n// To get more logs, the difference between the visible range and the current range should be 1 second or more.\nfunction canScrollTop(\n  visibleRange: AbsoluteTimeRange,\n  currentRange: TimeRange,\n  timeZone: TimeZone,\n  sortOrder: LogsSortOrder\n): AbsoluteTimeRange | undefined {\n  if (sortOrder === LogsSortOrder.Descending) {\n    // When requesting new logs, update the current range if using relative time ranges.\n    currentRange = updateCurrentRange(currentRange, timeZone);\n    const canScroll = currentRange.to.valueOf() - visibleRange.to > SCROLLING_THRESHOLD;\n    return canScroll ? getNextRange(visibleRange, currentRange, timeZone) : undefined;\n  }\n\n  const canScroll = Math.abs(currentRange.from.valueOf() - visibleRange.from) > SCROLLING_THRESHOLD;\n  return canScroll ? getPrevRange(visibleRange, currentRange) : undefined;\n}\n\nfunction canScrollBottom(\n  visibleRange: AbsoluteTimeRange,\n  currentRange: TimeRange,\n  timeZone: TimeZone,\n  sortOrder: LogsSortOrder\n): AbsoluteTimeRange | undefined {\n  if (sortOrder === LogsSortOrder.Descending) {\n    const canScroll = Math.abs(currentRange.from.valueOf() - visibleRange.from) > SCROLLING_THRESHOLD;\n    return canScroll ? getPrevRange(visibleRange, currentRange) : undefined;\n  }\n  // When requesting new logs, update the current range if using relative time ranges.\n  currentRange = updateCurrentRange(currentRange, timeZone);\n  const canScroll = currentRange.to.valueOf() - visibleRange.to > SCROLLING_THRESHOLD;\n  return canScroll ? getNextRange(visibleRange, currentRange, timeZone) : undefined;\n}\n\n// Given a TimeRange, returns a new instance if using relative time, or else the same.\nfunction updateCurrentRange(timeRange: TimeRange, timeZone: TimeZone) {\n  return isRelativeTimeRange(timeRange.raw) ? convertRawToRange(timeRange.raw, timeZone) : timeRange;\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Icon, Stack, useStyles2 } from '@grafana/ui';\n\ninterface Props {\n  feedbackUrl?: string;\n}\n\nexport function LogsFeedback({ feedbackUrl }: Props) {\n  const styles = useStyles2(getStyles);\n  return (\n    <Stack>\n      <a\n        href={feedbackUrl}\n        className={styles.link}\n        title=\"The logs table is new, please let us know how we can improve it\"\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        <Icon name=\"comment-alt-message\" /> Give feedback\n      </a>\n    </Stack>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    link: css({\n      color: theme.colors.text.secondary,\n      fontSize: theme.typography.bodySmall.fontSize,\n      ':hover': {\n        color: theme.colors.text.link,\n      },\n    }),\n  };\n}\n","import { css } from '@emotion/css';\nimport React, { memo } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  metaContainer: css({\n    flex: 1,\n    color: theme.colors.text.secondary,\n    marginBottom: theme.spacing(2),\n    minWidth: '30%',\n    display: 'flex',\n    flexWrap: 'wrap',\n  }),\n  metaItem: css({\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(0.5),\n    display: 'flex',\n    alignItems: 'center',\n    ['.logs-meta-item__error']: {\n      color: theme.colors.error.text,\n    },\n  }),\n  metaLabel: css({\n    marginRight: `calc(${theme.spacing(2)} / 2)`,\n    fontSize: theme.typography.bodySmall.fontSize,\n    fontWeight: theme.typography.fontWeightMedium,\n  }),\n  metaValue: css({\n    fontFamily: theme.typography.fontFamilyMonospace,\n    fontSize: theme.typography.bodySmall.fontSize,\n  }),\n});\n\nexport interface MetaItemProps {\n  label?: string;\n  value: string | JSX.Element;\n}\n\nconst MetaInfoItem = memo(function MetaInfoItem(props: MetaItemProps) {\n  const style = useStyles2(getStyles);\n  const { label, value } = props;\n\n  return (\n    <div data-testid=\"meta-info-text-item\" className={style.metaItem}>\n      {label && <span className={style.metaLabel}>{label}:</span>}\n      <span className={style.metaValue}>{value}</span>\n    </div>\n  );\n});\n\ninterface MetaInfoTextProps {\n  metaItems: MetaItemProps[];\n}\n\nexport const MetaInfoText = memo(function MetaInfoText(props: MetaInfoTextProps) {\n  const style = useStyles2(getStyles);\n  const { metaItems } = props;\n\n  return (\n    <div className={style.metaContainer} data-testid=\"meta-info-text\">\n      {metaItems.map((item, index) => (\n        <MetaInfoItem key={`${index}-${item.label}`} label={item.label} value={item.value} />\n      ))}\n    </div>\n  );\n});\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { lastValueFrom } from 'rxjs';\n\nimport {\n  applyFieldOverrides,\n  CustomTransformOperator,\n  DataFrame,\n  DataFrameType,\n  DataTransformerConfig,\n  Field,\n  FieldType,\n  guessFieldTypeForField,\n  LogsSortOrder,\n  sortDataFrame,\n  SplitOpen,\n  TimeRange,\n  transformDataFrame,\n  ValueLinkConfig,\n} from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { AdHocFilterItem, Table } from '@grafana/ui';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR } from '@grafana/ui/src/components/Table/types';\nimport { LogsFrame } from 'app/features/logs/logsFrame';\n\nimport { getFieldLinksForExplore } from '../utils/links';\n\nimport { FieldNameMeta } from './LogsTableWrap';\n\ninterface Props {\n  dataFrame: DataFrame;\n  width: number;\n  timeZone: string;\n  splitOpen: SplitOpen;\n  range: TimeRange;\n  logsSortOrder: LogsSortOrder;\n  columnsWithMeta: Record<string, FieldNameMeta>;\n  height: number;\n  onClickFilterLabel?: (key: string, value: string, frame?: DataFrame) => void;\n  onClickFilterOutLabel?: (key: string, value: string, frame?: DataFrame) => void;\n  logsFrame: LogsFrame | null;\n}\n\nexport function LogsTable(props: Props) {\n  const { timeZone, splitOpen, range, logsSortOrder, width, dataFrame, columnsWithMeta, logsFrame } = props;\n  const [tableFrame, setTableFrame] = useState<DataFrame | undefined>(undefined);\n  const timeIndex = logsFrame?.timeField.index;\n\n  const prepareTableFrame = useCallback(\n    (frame: DataFrame): DataFrame => {\n      if (!frame.length) {\n        return frame;\n      }\n\n      const sortedFrame = sortDataFrame(frame, timeIndex, logsSortOrder === LogsSortOrder.Descending);\n\n      const [frameWithOverrides] = applyFieldOverrides({\n        data: [sortedFrame],\n        timeZone,\n        theme: config.theme2,\n        replaceVariables: (v: string) => v,\n        fieldConfig: {\n          defaults: {\n            custom: {},\n          },\n          overrides: [],\n        },\n      });\n      // `getLinks` and `applyFieldOverrides` are taken from TableContainer.tsx\n      for (const field of frameWithOverrides.fields) {\n        field.getLinks = (config: ValueLinkConfig) => {\n          return getFieldLinksForExplore({\n            field,\n            rowIndex: config.valueRowIndex!,\n            splitOpenFn: splitOpen,\n            range: range,\n            dataFrame: sortedFrame!,\n          });\n        };\n        field.config = {\n          ...field.config,\n          custom: {\n            inspect: true,\n            filterable: true, // This sets the columns to be filterable\n            width: getInitialFieldWidth(field),\n            ...field.config.custom,\n          },\n          // This sets the individual field value as filterable\n          filterable: isFieldFilterable(field, logsFrame?.bodyField.name ?? '', logsFrame?.timeField.name ?? ''),\n        };\n\n        // If it's a string, then try to guess for a better type for numeric support in viz\n        field.type = field.type === FieldType.string ? guessFieldTypeForField(field) ?? FieldType.string : field.type;\n      }\n\n      return frameWithOverrides;\n    },\n    [logsSortOrder, timeZone, splitOpen, range, logsFrame?.bodyField.name, logsFrame?.timeField.name, timeIndex]\n  );\n\n  useEffect(() => {\n    const prepare = async () => {\n      if (!logsFrame?.timeField.name || !logsFrame?.bodyField.name) {\n        setTableFrame(undefined);\n        return;\n      }\n\n      // create extract JSON transformation for every field that is `json.RawMessage`\n      const transformations: Array<DataTransformerConfig | CustomTransformOperator> = getLogsExtractFields(dataFrame);\n\n      let labelFilters = buildLabelFilters(columnsWithMeta);\n\n      // Add the label filters to the transformations\n      const transform = getLabelFiltersTransform(labelFilters);\n      if (transform) {\n        transformations.push(transform);\n      } else {\n        // If no fields are filtered, filter the default fields, so we don't render all columns\n        transformations.push({\n          id: 'organize',\n          options: {\n            indexByName: {\n              [logsFrame.bodyField.name]: 0,\n              [logsFrame.timeField.name]: 1,\n            },\n            includeByName: {\n              [logsFrame.bodyField.name]: true,\n              [logsFrame.timeField.name]: true,\n            },\n          },\n        });\n      }\n\n      if (transformations.length > 0) {\n        const transformedDataFrame = await lastValueFrom(transformDataFrame(transformations, [dataFrame]));\n        const tableFrame = prepareTableFrame(transformedDataFrame[0]);\n        setTableFrame(tableFrame);\n      } else {\n        setTableFrame(prepareTableFrame(dataFrame));\n      }\n    };\n    prepare();\n  }, [\n    columnsWithMeta,\n    dataFrame,\n    logsSortOrder,\n    prepareTableFrame,\n    logsFrame?.bodyField.name,\n    logsFrame?.timeField.name,\n  ]);\n\n  if (!tableFrame) {\n    return null;\n  }\n\n  const onCellFilterAdded = (filter: AdHocFilterItem) => {\n    const { value, key, operator } = filter;\n    const { onClickFilterLabel, onClickFilterOutLabel } = props;\n    if (!onClickFilterLabel || !onClickFilterOutLabel) {\n      return;\n    }\n    if (operator === FILTER_FOR_OPERATOR) {\n      onClickFilterLabel(key, value, dataFrame);\n    }\n\n    if (operator === FILTER_OUT_OPERATOR) {\n      onClickFilterOutLabel(key, value, dataFrame);\n    }\n  };\n\n  return (\n    <Table\n      data={tableFrame}\n      width={width}\n      onCellFilterAdded={props.onClickFilterLabel && props.onClickFilterOutLabel ? onCellFilterAdded : undefined}\n      height={props.height}\n      footerOptions={{ show: true, reducer: ['count'], countRows: true }}\n    />\n  );\n}\n\nconst isFieldFilterable = (field: Field, bodyName: string, timeName: string) => {\n  if (!bodyName || !timeName) {\n    return false;\n  }\n  if (bodyName === field.name) {\n    return false;\n  }\n  if (timeName === field.name) {\n    return false;\n  }\n  if (field.config.links?.length) {\n    return false;\n  }\n\n  return true;\n};\n\n// TODO: explore if `logsFrame.ts` can help us with getting the right fields\n// TODO Why is typeInfo not defined on the Field interface?\nexport function getLogsExtractFields(dataFrame: DataFrame) {\n  return dataFrame.fields\n    .filter((field: Field & { typeInfo?: { frame: string } }) => {\n      const isFieldLokiLabels =\n        field.typeInfo?.frame === 'json.RawMessage' &&\n        field.name === 'labels' &&\n        dataFrame?.meta?.type !== DataFrameType.LogLines;\n      const isFieldDataplaneLabels =\n        field.name === 'labels' && field.type === FieldType.other && dataFrame?.meta?.type === DataFrameType.LogLines;\n      return isFieldLokiLabels || isFieldDataplaneLabels;\n    })\n    .flatMap((field: Field) => {\n      return [\n        {\n          id: 'extractFields',\n          options: {\n            format: 'json',\n            keepTime: false,\n            replace: false,\n            source: field.name,\n          },\n        },\n      ];\n    });\n}\n\nfunction buildLabelFilters(columnsWithMeta: Record<string, FieldNameMeta>) {\n  // Create object of label filters to include columns selected by the user\n  let labelFilters: Record<string, number> = {};\n  Object.keys(columnsWithMeta)\n    .filter((key) => columnsWithMeta[key].active)\n    .forEach((key) => {\n      const index = columnsWithMeta[key].index;\n      // Index should always be defined for any active column\n      if (index !== undefined) {\n        labelFilters[key] = index;\n      }\n    });\n\n  return labelFilters;\n}\n\nfunction getLabelFiltersTransform(labelFilters: Record<string, number>) {\n  let labelFiltersInclude: Record<string, boolean> = {};\n\n  for (const key in labelFilters) {\n    labelFiltersInclude[key] = true;\n  }\n\n  if (Object.keys(labelFilters).length > 0) {\n    return {\n      id: 'organize',\n      options: {\n        indexByName: labelFilters,\n        includeByName: labelFiltersInclude,\n      },\n    };\n  }\n  return null;\n}\n\nfunction getInitialFieldWidth(field: Field): number | undefined {\n  if (field.type === FieldType.time) {\n    return 200;\n  }\n  return undefined;\n}\n","import { css } from '@emotion/css';\nimport saveAs from 'file-saver';\nimport React from 'react';\nimport { lastValueFrom } from 'rxjs';\n\nimport {\n  LogsDedupStrategy,\n  LogsMetaItem,\n  LogsMetaKind,\n  LogRowModel,\n  CoreApp,\n  dateTimeFormat,\n  transformDataFrame,\n  DataTransformerConfig,\n  CustomTransformOperator,\n} from '@grafana/data';\nimport { DataFrame } from '@grafana/data/';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Button, Dropdown, Menu, ToolbarButton, Tooltip, useStyles2 } from '@grafana/ui';\n\nimport { downloadDataFrameAsCsv, downloadLogsModelAsTxt } from '../../inspector/utils/download';\nimport { LogLabels } from '../../logs/components/LogLabels';\nimport { MAX_CHARACTERS } from '../../logs/components/LogRowMessage';\nimport { logRowsToReadableJson } from '../../logs/utils';\nimport { MetaInfoText, MetaItemProps } from '../MetaInfoText';\n\nimport { getLogsExtractFields } from './LogsTable';\n\nconst getStyles = () => ({\n  metaContainer: css`\n    flex: 1;\n    display: flex;\n    flex-wrap: wrap;\n  `,\n});\n\nexport type Props = {\n  meta: LogsMetaItem[];\n  dedupStrategy: LogsDedupStrategy;\n  dedupCount: number;\n  displayedFields: string[];\n  hasUnescapedContent: boolean;\n  forceEscape: boolean;\n  logRows: LogRowModel[];\n  onEscapeNewlines: () => void;\n  clearDetectedFields: () => void;\n};\n\nenum DownloadFormat {\n  Text = 'text',\n  Json = 'json',\n  CSV = 'csv',\n}\n\nexport const LogsMetaRow = React.memo(\n  ({\n    meta,\n    dedupStrategy,\n    dedupCount,\n    displayedFields,\n    clearDetectedFields,\n    hasUnescapedContent,\n    forceEscape,\n    onEscapeNewlines,\n    logRows,\n  }: Props) => {\n    const style = useStyles2(getStyles);\n\n    const downloadLogs = async (format: DownloadFormat) => {\n      reportInteraction('grafana_logs_download_logs_clicked', {\n        app: CoreApp.Explore,\n        format,\n        area: 'logs-meta-row',\n      });\n\n      switch (format) {\n        case DownloadFormat.Text:\n          downloadLogsModelAsTxt({ meta, rows: logRows }, 'Explore');\n          break;\n        case DownloadFormat.Json:\n          const jsonLogs = logRowsToReadableJson(logRows);\n          const blob = new Blob([JSON.stringify(jsonLogs)], {\n            type: 'application/json;charset=utf-8',\n          });\n          const fileName = `Explore-logs-${dateTimeFormat(new Date())}.json`;\n          saveAs(blob, fileName);\n          break;\n        case DownloadFormat.CSV:\n          const dataFrameMap = new Map<string, DataFrame>();\n          logRows.forEach((row) => {\n            if (row.dataFrame?.refId && !dataFrameMap.has(row.dataFrame?.refId)) {\n              dataFrameMap.set(row.dataFrame?.refId, row.dataFrame);\n            }\n          });\n          dataFrameMap.forEach(async (dataFrame) => {\n            const transforms: Array<DataTransformerConfig | CustomTransformOperator> = getLogsExtractFields(dataFrame);\n            transforms.push({\n              id: 'organize',\n              options: {\n                excludeByName: {\n                  ['labels']: true,\n                  ['labelTypes']: true,\n                },\n              },\n            });\n            const transformedDataFrame = await lastValueFrom(transformDataFrame(transforms, [dataFrame]));\n            downloadDataFrameAsCsv(transformedDataFrame[0], `Explore-logs-${dataFrame.refId}`);\n          });\n      }\n    };\n\n    const logsMetaItem: Array<LogsMetaItem | MetaItemProps> = [...meta];\n\n    // Add deduplication info\n    if (dedupStrategy !== LogsDedupStrategy.none) {\n      logsMetaItem.push({\n        label: 'Deduplication count',\n        value: dedupCount,\n        kind: LogsMetaKind.Number,\n      });\n    }\n    // Add info about limit for highlighting\n    if (logRows.some((r) => r.entry.length > MAX_CHARACTERS)) {\n      logsMetaItem.push({\n        label: 'Info',\n        value: 'Logs with more than 100,000 characters could not be parsed and highlighted',\n        kind: LogsMetaKind.String,\n      });\n    }\n\n    // Add detected fields info\n    if (displayedFields?.length > 0) {\n      logsMetaItem.push(\n        {\n          label: 'Showing only selected fields',\n          value: renderMetaItem(displayedFields, LogsMetaKind.LabelsMap),\n        },\n        {\n          label: '',\n          value: (\n            <Button variant=\"secondary\" size=\"sm\" onClick={clearDetectedFields}>\n              Show original line\n            </Button>\n          ),\n        }\n      );\n    }\n\n    // Add unescaped content info\n    if (hasUnescapedContent) {\n      logsMetaItem.push({\n        label: 'Your logs might have incorrectly escaped content',\n        value: (\n          <Tooltip\n            content=\"Fix incorrectly escaped newline and tab sequences in log lines. Manually review the results to confirm that the replacements are correct.\"\n            placement=\"right\"\n          >\n            <Button variant=\"secondary\" size=\"sm\" onClick={onEscapeNewlines}>\n              {forceEscape ? 'Remove escaping' : 'Escape newlines'}\n            </Button>\n          </Tooltip>\n        ),\n      });\n    }\n    const downloadMenu = (\n      <Menu>\n        <Menu.Item label=\"txt\" onClick={() => downloadLogs(DownloadFormat.Text)} />\n        <Menu.Item label=\"json\" onClick={() => downloadLogs(DownloadFormat.Json)} />\n        <Menu.Item label=\"csv\" onClick={() => downloadLogs(DownloadFormat.CSV)} />\n      </Menu>\n    );\n    return (\n      <>\n        {logsMetaItem && (\n          <div className={style.metaContainer}>\n            <MetaInfoText\n              metaItems={logsMetaItem.map((item) => {\n                return {\n                  label: item.label,\n                  value: 'kind' in item ? renderMetaItem(item.value, item.kind) : item.value,\n                };\n              })}\n            />\n            <Dropdown overlay={downloadMenu}>\n              <ToolbarButton isOpen={false} variant=\"canvas\" icon=\"download-alt\">\n                Download\n              </ToolbarButton>\n            </Dropdown>\n          </div>\n        )}\n      </>\n    );\n  }\n);\n\nLogsMetaRow.displayName = 'LogsMetaRow';\n\nfunction renderMetaItem(value: any, kind: LogsMetaKind) {\n  if (kind === LogsMetaKind.LabelsMap) {\n    return <LogLabels labels={value} />;\n  } else if (kind === LogsMetaKind.Error) {\n    return <span className=\"logs-meta-item__error\">{value}</span>;\n  }\n  return value;\n}\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { dateTimeFormat, systemDateFormats, GrafanaTheme2 } from '@grafana/data';\nimport { TimeZone } from '@grafana/schema';\nimport { CustomScrollbar, Spinner, useTheme2, clearButtonStyles } from '@grafana/ui';\n\nimport { LogsPage } from './LogsNavigation';\n\ntype Props = {\n  pages: LogsPage[];\n  currentPageIndex: number;\n  oldestLogsFirst: boolean;\n  timeZone: TimeZone;\n  loading: boolean;\n  onClick: (page: LogsPage, pageNumber: number) => void;\n};\n\nexport function LogsNavigationPages({ pages, currentPageIndex, oldestLogsFirst, timeZone, loading, onClick }: Props) {\n  const formatTime = (time: number) => {\n    return `${dateTimeFormat(time, {\n      format: systemDateFormats.interval.second,\n      timeZone: timeZone,\n    })}`;\n  };\n\n  const createPageContent = (page: LogsPage, index: number) => {\n    if (currentPageIndex === index && loading) {\n      return <Spinner />;\n    }\n    const topContent = formatTime(oldestLogsFirst ? page.logsRange.from : page.logsRange.to);\n    const bottomContent = formatTime(oldestLogsFirst ? page.logsRange.to : page.logsRange.from);\n    return `${topContent} — ${bottomContent}`;\n  };\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, loading);\n\n  return (\n    <CustomScrollbar autoHide>\n      <div className={styles.pagesWrapper} data-testid=\"logsNavigationPages\">\n        <div className={styles.pagesContainer}>\n          {pages.map((page: LogsPage, index: number) => (\n            <button\n              type=\"button\"\n              data-testid={`page${index + 1}`}\n              className={cx(clearButtonStyles(theme), styles.page)}\n              key={page.queryRange.to}\n              onClick={() => {\n                onClick(page, index + 1);\n              }}\n              disabled={loading}\n            >\n              <div className={cx(styles.line, { selectedBg: currentPageIndex === index })} />\n              <div className={cx(styles.time, { selectedText: currentPageIndex === index })}>\n                {createPageContent(page, index)}\n              </div>\n            </button>\n          ))}\n        </div>\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2, loading: boolean) => {\n  return {\n    pagesWrapper: css`\n      height: 100%;\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      flex-direction: column;\n      overflow-y: scroll;\n      &::after {\n        content: '';\n        display: block;\n        background: repeating-linear-gradient(\n          135deg,\n          ${theme.colors.background.primary},\n          ${theme.colors.background.primary} 5px,\n          ${theme.colors.background.secondary} 5px,\n          ${theme.colors.background.secondary} 15px\n        );\n        width: 3px;\n        height: inherit;\n        margin-bottom: 8px;\n      }\n    `,\n    pagesContainer: css`\n      display: flex;\n      padding: 0;\n      flex-direction: column;\n    `,\n    page: css`\n      display: flex;\n      margin: ${theme.spacing(2)} 0;\n      cursor: ${loading ? 'auto' : 'pointer'};\n      white-space: normal;\n      .selectedBg {\n        background: ${theme.colors.primary.main};\n      }\n      .selectedText {\n        color: ${theme.colors.primary.main};\n      }\n    `,\n    line: css`\n      width: 3px;\n      height: 100%;\n      align-items: center;\n      background: ${theme.colors.text.secondary};\n    `,\n    time: css`\n      width: 60px;\n      min-height: 80px;\n      font-size: ${theme.v1.typography.size.sm};\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      align-items: center;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport { isEqual } from 'lodash';\nimport React, { memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport { AbsoluteTimeRange, GrafanaTheme2, LogsSortOrder } from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { DataQuery, TimeZone } from '@grafana/schema';\nimport { Button, Icon, Spinner, useTheme2 } from '@grafana/ui';\nimport { TOP_BAR_LEVEL_HEIGHT } from 'app/core/components/AppChrome/types';\n\nimport { LogsNavigationPages } from './LogsNavigationPages';\n\ntype Props = {\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  queries: DataQuery[];\n  loading: boolean;\n  visibleRange: AbsoluteTimeRange;\n  logsSortOrder?: LogsSortOrder | null;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  scrollToTopLogs: () => void;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n};\n\nexport type LogsPage = {\n  logsRange: AbsoluteTimeRange;\n  queryRange: AbsoluteTimeRange;\n};\n\nfunction LogsNavigation({\n  absoluteRange,\n  logsSortOrder,\n  timeZone,\n  loading,\n  onChangeTime,\n  scrollToTopLogs,\n  visibleRange,\n  queries,\n  clearCache,\n  addResultsToCache,\n}: Props) {\n  const [pages, setPages] = useState<LogsPage[]>([]);\n\n  // These refs are to determine, if we want to clear up logs navigation when totally new query is run\n  const expectedQueriesRef = useRef<DataQuery[]>();\n  const expectedRangeRef = useRef<AbsoluteTimeRange>();\n  // This ref is to store range span for future queres based on firstly selected time range\n  // e.g. if last 5 min selected, always run 5 min range\n  const rangeSpanRef = useRef(0);\n\n  const currentPageIndex = useMemo(\n    () =>\n      pages.findIndex((page) => {\n        return page.queryRange.to === absoluteRange.to;\n      }),\n    [absoluteRange.to, pages]\n  );\n\n  const oldestLogsFirst = logsSortOrder === LogsSortOrder.Ascending;\n  const onFirstPage = oldestLogsFirst ? currentPageIndex === pages.length - 1 : currentPageIndex === 0;\n  const onLastPage = oldestLogsFirst ? currentPageIndex === 0 : currentPageIndex === pages.length - 1;\n  const theme = useTheme2();\n  const styles = getStyles(theme, oldestLogsFirst);\n\n  // Main effect to set pages and index\n  useEffect(() => {\n    const newPage = { logsRange: visibleRange, queryRange: absoluteRange };\n    let newPages: LogsPage[] = [];\n    // We want to start new pagination if queries change or if absolute range is different than expected\n    if (!isEqual(expectedRangeRef.current, absoluteRange) || !isEqual(expectedQueriesRef.current, queries)) {\n      clearCache();\n      setPages([newPage]);\n      expectedQueriesRef.current = queries;\n      rangeSpanRef.current = absoluteRange.to - absoluteRange.from;\n    } else {\n      setPages((pages) => {\n        // Remove duplicates with new query\n        newPages = pages.filter((page) => !isEqual(newPage.queryRange, page.queryRange));\n        // Sort pages based on logsOrder so they visually align with displayed logs\n        newPages = [...newPages, newPage].sort((a, b) => sortPages(a, b, logsSortOrder));\n        return newPages;\n      });\n    }\n  }, [visibleRange, absoluteRange, logsSortOrder, queries, clearCache, addResultsToCache]);\n\n  const changeTime = useCallback(\n    ({ from, to }: AbsoluteTimeRange) => {\n      addResultsToCache();\n      expectedRangeRef.current = { from, to };\n      onChangeTime({ from, to });\n    },\n    [onChangeTime, addResultsToCache]\n  );\n\n  const sortPages = (a: LogsPage, b: LogsPage, logsSortOrder?: LogsSortOrder | null) => {\n    if (logsSortOrder === LogsSortOrder.Ascending) {\n      return a.queryRange.to > b.queryRange.to ? 1 : -1;\n    }\n    return a.queryRange.to > b.queryRange.to ? -1 : 1;\n  };\n\n  const olderLogsButton = (\n    <Button\n      data-testid=\"olderLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the last page, use next page's range\n        reportInteraction('grafana_explore_logs_pagination_clicked', {\n          pageType: 'olderLogsButton',\n        });\n        if (!onLastPage) {\n          const indexChange = oldestLogsFirst ? -1 : 1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        } else {\n          //If we are on the last page, create new range\n          changeTime({ from: visibleRange.from - rangeSpanRef.current, to: visibleRange.from });\n        }\n        scrollToTopLogs();\n      }}\n      disabled={loading}\n    >\n      <div className={styles.navButtonContent}>\n        {loading ? <Spinner /> : <Icon name={oldestLogsFirst ? 'angle-up' : 'angle-down'} size=\"lg\" />}\n        Older logs\n      </div>\n    </Button>\n  );\n\n  const newerLogsButton = (\n    <Button\n      data-testid=\"newerLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        reportInteraction('grafana_explore_logs_pagination_clicked', {\n          pageType: 'newerLogsButton',\n        });\n        //If we are not on the first page, use previous page's range\n        if (!onFirstPage) {\n          const indexChange = oldestLogsFirst ? 1 : -1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        }\n        scrollToTopLogs();\n        //If we are on the first page, button is disabled and we do nothing\n      }}\n      disabled={loading || onFirstPage}\n    >\n      <div className={styles.navButtonContent}>\n        {loading && <Spinner />}\n        {onFirstPage || loading ? null : <Icon name={oldestLogsFirst ? 'angle-down' : 'angle-up'} size=\"lg\" />}\n        {onFirstPage ? 'Start of range' : 'Newer logs'}\n      </div>\n    </Button>\n  );\n\n  const onPageClick = useCallback(\n    (page: LogsPage, pageNumber: number) => {\n      reportInteraction('grafana_explore_logs_pagination_clicked', {\n        pageType: 'page',\n        pageNumber,\n      });\n      changeTime({ from: page.queryRange.from, to: page.queryRange.to });\n      scrollToTopLogs();\n    },\n    [changeTime, scrollToTopLogs]\n  );\n\n  const onScrollToTopClick = useCallback(() => {\n    reportInteraction('grafana_explore_logs_scroll_top_clicked');\n    scrollToTopLogs();\n  }, [scrollToTopLogs]);\n\n  return (\n    <div className={styles.navContainer}>\n      {!config.featureToggles.logsInfiniteScrolling && (\n        <>\n          {oldestLogsFirst ? olderLogsButton : newerLogsButton}\n          <LogsNavigationPages\n            pages={pages}\n            currentPageIndex={currentPageIndex}\n            oldestLogsFirst={oldestLogsFirst}\n            timeZone={timeZone}\n            loading={loading}\n            onClick={onPageClick}\n          />\n          {oldestLogsFirst ? newerLogsButton : olderLogsButton}\n        </>\n      )}\n      <Button\n        data-testid=\"scrollToTop\"\n        className={styles.scrollToTopButton}\n        variant=\"secondary\"\n        onClick={onScrollToTopClick}\n        title=\"Scroll to top\"\n      >\n        <Icon name=\"arrow-up\" size=\"lg\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default memo(LogsNavigation);\n\nconst getStyles = (theme: GrafanaTheme2, oldestLogsFirst: boolean) => {\n  const navContainerHeight = `calc(100vh - 2*${theme.spacing(2)} - 2*${TOP_BAR_LEVEL_HEIGHT}px)`;\n  return {\n    navContainer: css`\n      max-height: ${navContainerHeight};\n      display: flex;\n      flex-direction: column;\n      ${config.featureToggles.logsInfiniteScrolling\n        ? `justify-content: flex-end;`\n        : `justify-content: ${oldestLogsFirst ? 'flex-start' : 'space-between'};`}\n      position: sticky;\n      top: ${theme.spacing(2)};\n      right: 0;\n    `,\n    navButton: css`\n      width: 58px;\n      height: 68px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      line-height: 1;\n    `,\n    navButtonContent: css`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      white-space: normal;\n    `,\n    scrollToTopButton: css`\n      width: 40px;\n      height: 40px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      margin-top: ${theme.spacing(1)};\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { Field, Input, useTheme2 } from '@grafana/ui/src';\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    searchWrap: css({\n      padding: `${theme.spacing(0.4)} 0 ${theme.spacing(0.4)} ${theme.spacing(0.4)}`,\n    }),\n  };\n}\n\nexport function LogsColumnSearch(props: { onChange: (e: React.FormEvent<HTMLInputElement>) => void; value: string }) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return (\n    <Field className={styles.searchWrap}>\n      <Input value={props.value} type={'text'} placeholder={'Search fields by name'} onChange={props.onChange} />\n    </Field>\n  );\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    empty: css({\n      marginBottom: theme.spacing(2),\n      marginLeft: theme.spacing(1.75),\n      fontSize: theme.typography.fontSize,\n    }),\n  };\n}\n\nexport function LogsTableEmptyFields() {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return <div className={styles.empty}>No fields</div>;\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Checkbox, Icon, useTheme2 } from '@grafana/ui';\n\nimport { FieldNameMeta } from './LogsTableWrap';\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    dragIcon: css({\n      cursor: 'drag',\n      marginLeft: theme.spacing(1),\n      opacity: 0.4,\n    }),\n    labelCount: css({\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      appearance: 'none',\n      background: 'none',\n      border: 'none',\n      fontSize: theme.typography.pxToRem(11),\n      opacity: 0.6,\n    }),\n    contentWrap: css({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      width: '100%',\n    }),\n    // Hide text that overflows, had to select elements within the Checkbox component, so this is a bit fragile\n    checkboxLabel: css({\n      '> span': {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        display: 'block',\n        maxWidth: '100%',\n      },\n    }),\n  };\n}\n\nexport function LogsTableNavField(props: {\n  label: string;\n  onChange: () => void;\n  labels: Record<string, FieldNameMeta>;\n  draggable?: boolean;\n  showCount?: boolean;\n}): React.JSX.Element | undefined {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  if (props.labels[props.label]) {\n    return (\n      <>\n        <div className={styles.contentWrap}>\n          <Checkbox\n            className={styles.checkboxLabel}\n            label={props.label}\n            onChange={props.onChange}\n            checked={props.labels[props.label]?.active ?? false}\n          />\n          {props.showCount && (\n            <button className={styles.labelCount} onClick={props.onChange}>\n              {props.labels[props.label]?.percentOfLinesWithLabel}%\n            </button>\n          )}\n        </div>\n        {props.draggable && (\n          <Icon\n            aria-label=\"Drag and drop icon\"\n            title=\"Drag and drop to reorder\"\n            name=\"draggabledots\"\n            size=\"lg\"\n            className={styles.dragIcon}\n          />\n        )}\n      </>\n    );\n  }\n  return undefined;\n}\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { DragDropContext, Draggable, DraggableProvided, Droppable, DropResult } from 'react-beautiful-dnd';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { useTheme2 } from '@grafana/ui/src';\n\nimport { LogsTableEmptyFields } from './LogsTableEmptyFields';\nimport { LogsTableNavField } from './LogsTableNavField';\nimport { FieldNameMeta } from './LogsTableWrap';\n\nexport function getLogsFieldsStyles(theme: GrafanaTheme2) {\n  return {\n    wrap: css({\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n      display: 'flex',\n      background: theme.colors.background.primary,\n    }),\n    dragging: css({\n      background: theme.colors.background.secondary,\n    }),\n    columnWrapper: css({\n      marginBottom: theme.spacing(1.5),\n      // need some space or the outline of the checkbox is cut off\n      paddingLeft: theme.spacing(0.5),\n    }),\n  };\n}\n\nfunction sortLabels(labels: Record<string, FieldNameMeta>) {\n  return (a: string, b: string) => {\n    const la = labels[a];\n    const lb = labels[b];\n\n    // Sort by index\n    if (la.index != null && lb.index != null) {\n      return la.index - lb.index;\n    }\n\n    // otherwise do not sort\n    return 0;\n  };\n}\n\nexport const LogsTableActiveFields = (props: {\n  labels: Record<string, FieldNameMeta>;\n  valueFilter: (value: string) => boolean;\n  toggleColumn: (columnName: string) => void;\n  reorderColumn: (sourceIndex: number, destinationIndex: number) => void;\n  id: string;\n}): JSX.Element => {\n  const { reorderColumn, labels, valueFilter, toggleColumn } = props;\n  const theme = useTheme2();\n  const styles = getLogsFieldsStyles(theme);\n  const labelKeys = Object.keys(labels).filter((labelName) => valueFilter(labelName));\n\n  const onDragEnd = (result: DropResult) => {\n    if (!result.destination) {\n      return;\n    }\n    reorderColumn(result.source.index, result.destination.index);\n  };\n\n  const renderTitle = (labelName: string) => {\n    const label = labels[labelName];\n    if (label) {\n      return `${labelName} appears in ${label?.percentOfLinesWithLabel}% of log lines`;\n    }\n\n    return undefined;\n  };\n\n  if (labelKeys.length) {\n    return (\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"order-fields\" direction=\"vertical\">\n          {(provided) => (\n            <div className={styles.columnWrapper} {...provided.droppableProps} ref={provided.innerRef}>\n              {labelKeys.sort(sortLabels(labels)).map((labelName, index) => (\n                <Draggable draggableId={labelName} key={labelName} index={index}>\n                  {(provided: DraggableProvided, snapshot) => (\n                    <div\n                      className={cx(styles.wrap, snapshot.isDragging ? styles.dragging : undefined)}\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      title={renderTitle(labelName)}\n                    >\n                      <LogsTableNavField\n                        label={labelName}\n                        onChange={() => toggleColumn(labelName)}\n                        labels={labels}\n                        draggable={true}\n                      />\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n\n  return <LogsTableEmptyFields />;\n};\n","import React from 'react';\n\nimport { useTheme2 } from '@grafana/ui/src';\n\nimport { getLogsFieldsStyles } from './LogsTableActiveFields';\nimport { LogsTableEmptyFields } from './LogsTableEmptyFields';\nimport { LogsTableNavField } from './LogsTableNavField';\nimport { FieldNameMeta } from './LogsTableWrap';\n\nconst collator = new Intl.Collator(undefined, { sensitivity: 'base' });\n\nfunction sortLabels(labels: Record<string, FieldNameMeta>) {\n  return (a: string, b: string) => {\n    const la = labels[a];\n    const lb = labels[b];\n\n    // ...sort by type and alphabetically\n    if (la != null && lb != null) {\n      return (\n        Number(lb.type === 'TIME_FIELD') - Number(la.type === 'TIME_FIELD') ||\n        Number(lb.type === 'BODY_FIELD') - Number(la.type === 'BODY_FIELD') ||\n        collator.compare(a, b)\n      );\n    }\n\n    // otherwise do not sort\n    return 0;\n  };\n}\n\nexport const LogsTableAvailableFields = (props: {\n  labels: Record<string, FieldNameMeta>;\n  valueFilter: (value: string) => boolean;\n  toggleColumn: (columnName: string) => void;\n}): JSX.Element => {\n  const { labels, valueFilter, toggleColumn } = props;\n  const theme = useTheme2();\n  const styles = getLogsFieldsStyles(theme);\n  const labelKeys = Object.keys(labels).filter((labelName) => valueFilter(labelName));\n  if (labelKeys.length) {\n    // Otherwise show list with a hardcoded order\n    return (\n      <div className={styles.columnWrapper}>\n        {labelKeys.sort(sortLabels(labels)).map((labelName, index) => (\n          <div\n            key={labelName}\n            className={styles.wrap}\n            title={`${labelName} appears in ${labels[labelName]?.percentOfLinesWithLabel}% of log lines`}\n          >\n            <LogsTableNavField\n              showCount={true}\n              label={labelName}\n              onChange={() => toggleColumn(labelName)}\n              labels={labels}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  return <LogsTableEmptyFields />;\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { useTheme2 } from '@grafana/ui/src';\n\nimport { LogsTableActiveFields } from './LogsTableActiveFields';\nimport { LogsTableAvailableFields } from './LogsTableAvailableFields';\nimport { FieldNameMeta } from './LogsTableWrap';\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    sidebarWrap: css({\n      overflowY: 'scroll',\n      height: 'calc(100% - 50px)',\n      /* Hide scrollbar for Chrome, Safari, and Opera */\n      '&::-webkit-scrollbar': {\n        display: 'none',\n      },\n      /* Hide scrollbar for Firefox */\n      scrollbarWidth: 'none',\n    }),\n    columnHeaderButton: css({\n      appearance: 'none',\n      background: 'none',\n      border: 'none',\n      fontSize: theme.typography.pxToRem(11),\n    }),\n    columnHeader: css({\n      display: 'flex',\n      justifyContent: 'space-between',\n      fontSize: theme.typography.h6.fontSize,\n      background: theme.colors.background.secondary,\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      paddingTop: theme.spacing(0.75),\n      paddingRight: theme.spacing(0.75),\n      paddingBottom: theme.spacing(0.75),\n      paddingLeft: theme.spacing(1.5),\n      zIndex: 3,\n      marginBottom: theme.spacing(2),\n    }),\n  };\n}\n\nexport const LogsTableMultiSelect = (props: {\n  toggleColumn: (columnName: string) => void;\n  filteredColumnsWithMeta: Record<string, FieldNameMeta> | undefined;\n  columnsWithMeta: Record<string, FieldNameMeta>;\n  clear: () => void;\n  reorderColumn: (oldIndex: number, newIndex: number) => void;\n}) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  return (\n    <div className={styles.sidebarWrap}>\n      {/* Sidebar columns */}\n      <>\n        <div className={styles.columnHeader}>\n          Selected fields\n          <button onClick={props.clear} className={styles.columnHeaderButton}>\n            Reset\n          </button>\n        </div>\n        <LogsTableActiveFields\n          reorderColumn={props.reorderColumn}\n          toggleColumn={props.toggleColumn}\n          labels={props.filteredColumnsWithMeta ?? props.columnsWithMeta}\n          valueFilter={(value) => props.columnsWithMeta[value]?.active ?? false}\n          id={'selected-fields'}\n        />\n\n        <div className={styles.columnHeader}>Fields</div>\n        <LogsTableAvailableFields\n          toggleColumn={props.toggleColumn}\n          labels={props.filteredColumnsWithMeta ?? props.columnsWithMeta}\n          valueFilter={(value) => !props.columnsWithMeta[value]?.active}\n        />\n      </>\n    </div>\n  );\n};\n","import uFuzzy from '@leeoniya/ufuzzy';\nimport { debounce as debounceLodash } from 'lodash';\n\nconst uf = new uFuzzy({\n  intraMode: 1,\n  intraIns: 1,\n  intraSub: 1,\n  intraTrn: 1,\n  intraDel: 1,\n});\n\nexport function fuzzySearch(haystack: string[], query: string, dispatcher: (data: string[][]) => void) {\n  const [idxs, info, order] = uf.search(haystack, query, 0, 1e5);\n\n  let haystackOrder: string[] = [];\n  let matchesSet: Set<string> = new Set();\n  if (idxs && order) {\n    /**\n     * get the fuzzy matches for hilighting\n     * @param part\n     * @param matched\n     */\n    const mark = (part: string, matched: boolean) => {\n      if (matched) {\n        matchesSet.add(part);\n      }\n    };\n\n    // Iterate to create the order of needles(queries) and the matches\n    for (let i = 0; i < order.length; i++) {\n      let infoIdx = order[i];\n\n      /** Evaluate the match, get the matches for highlighting */\n      uFuzzy.highlight(haystack[info.idx[infoIdx]], info.ranges[infoIdx], mark);\n      /** Get the order */\n      haystackOrder.push(haystack[info.idx[infoIdx]]);\n    }\n\n    dispatcher([haystackOrder, [...matchesSet]]);\n  } else if (!query) {\n    dispatcher([[], []]);\n  }\n}\n\nexport const debouncedFuzzySearch = debounceLodash(fuzzySearch, 300);\n","import { css } from '@emotion/css';\nimport { Resizable, ResizeCallback } from 're-resizable';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport {\n  DataFrame,\n  ExploreLogsPanelState,\n  GrafanaTheme2,\n  Labels,\n  LogsSortOrder,\n  SelectableValue,\n  SplitOpen,\n  TimeRange,\n} from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime/src';\nimport { InlineField, Select, Themeable2 } from '@grafana/ui/';\n\nimport { parseLogsFrame } from '../../logs/logsFrame';\n\nimport { LogsColumnSearch } from './LogsColumnSearch';\nimport { LogsTable } from './LogsTable';\nimport { LogsTableMultiSelect } from './LogsTableMultiSelect';\nimport { fuzzySearch } from './utils/uFuzzy';\n\ninterface Props extends Themeable2 {\n  logsFrames: DataFrame[];\n  width: number;\n  timeZone: string;\n  splitOpen: SplitOpen;\n  range: TimeRange;\n  logsSortOrder: LogsSortOrder;\n  panelState: ExploreLogsPanelState | undefined;\n  updatePanelState: (panelState: Partial<ExploreLogsPanelState>) => void;\n  onClickFilterLabel?: (key: string, value: string, frame?: DataFrame) => void;\n  onClickFilterOutLabel?: (key: string, value: string, frame?: DataFrame) => void;\n  datasourceType?: string;\n}\n\ntype ActiveFieldMeta = {\n  active: false;\n  index: undefined; // if undefined the column is not selected\n};\n\ntype InactiveFieldMeta = {\n  active: true;\n  index: number; // if undefined the column is not selected\n};\n\ntype GenericMeta = {\n  percentOfLinesWithLabel: number;\n  type?: 'BODY_FIELD' | 'TIME_FIELD';\n};\n\nexport type FieldNameMeta = (InactiveFieldMeta | ActiveFieldMeta) & GenericMeta;\n\ntype FieldName = string;\ntype FieldNameMetaStore = Record<FieldName, FieldNameMeta>;\n\nexport function LogsTableWrap(props: Props) {\n  const { logsFrames, updatePanelState, panelState } = props;\n  const propsColumns = panelState?.columns;\n  // Save the normalized cardinality of each label\n  const [columnsWithMeta, setColumnsWithMeta] = useState<FieldNameMetaStore | undefined>(undefined);\n\n  // Filtered copy of columnsWithMeta that only includes matching results\n  const [filteredColumnsWithMeta, setFilteredColumnsWithMeta] = useState<FieldNameMetaStore | undefined>(undefined);\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  const height = getLogsTableHeight();\n  const panelStateRefId = props?.panelState?.refId;\n\n  // The current dataFrame containing the refId of the current query\n  const [currentDataFrame, setCurrentDataFrame] = useState<DataFrame>(\n    logsFrames.find((f) => f.refId === panelStateRefId) ?? logsFrames[0]\n  );\n\n  const getColumnsFromProps = useCallback(\n    (fieldNames: FieldNameMetaStore) => {\n      const previouslySelected = props.panelState?.columns;\n      if (previouslySelected) {\n        Object.values(previouslySelected).forEach((key, index) => {\n          if (fieldNames[key]) {\n            fieldNames[key].active = true;\n            fieldNames[key].index = index;\n          }\n        });\n      }\n      return fieldNames;\n    },\n    [props.panelState?.columns]\n  );\n  const logsFrame = parseLogsFrame(currentDataFrame);\n\n  useEffect(() => {\n    if (logsFrame?.timeField.name && logsFrame?.bodyField.name && !propsColumns) {\n      const defaultColumns = { 0: logsFrame?.timeField.name ?? '', 1: logsFrame?.bodyField.name ?? '' };\n      updatePanelState({\n        columns: Object.values(defaultColumns),\n        visualisationType: 'table',\n        labelFieldName: logsFrame?.getLabelFieldName() ?? undefined,\n      });\n    }\n  }, [logsFrame, propsColumns, updatePanelState]);\n\n  /**\n   * When logs frame updates (e.g. query|range changes), we need to set the selected frame to state\n   */\n  useEffect(() => {\n    const newFrame = logsFrames.find((f) => f.refId === panelStateRefId) ?? logsFrames[0];\n    if (newFrame) {\n      setCurrentDataFrame(newFrame);\n    }\n  }, [logsFrames, panelStateRefId]);\n\n  /**\n   * Keeps the filteredColumnsWithMeta state in sync with the columnsWithMeta state,\n   * which can be updated by explore browser history state changes\n   * This prevents an edge case bug where the user is navigating while a search is open.\n   */\n  useEffect(() => {\n    if (!columnsWithMeta || !filteredColumnsWithMeta) {\n      return;\n    }\n    let newFiltered = { ...filteredColumnsWithMeta };\n    let flag = false;\n    Object.keys(columnsWithMeta).forEach((key) => {\n      if (newFiltered[key] && newFiltered[key].active !== columnsWithMeta[key].active) {\n        newFiltered[key] = columnsWithMeta[key];\n        flag = true;\n      }\n    });\n    if (flag) {\n      setFilteredColumnsWithMeta(newFiltered);\n    }\n  }, [columnsWithMeta, filteredColumnsWithMeta]);\n\n  /**\n   * when the query results change, we need to update the columnsWithMeta state\n   * and reset any local search state\n   *\n   * This will also find all the unique labels, and calculate how many log lines have each label into the labelCardinality Map\n   * Then it normalizes the counts\n   *\n   */\n  useEffect(() => {\n    // If the data frame is empty, there's nothing to viz, it could mean the user has unselected all columns\n    if (!currentDataFrame.length) {\n      return;\n    }\n    const numberOfLogLines = currentDataFrame ? currentDataFrame.length : 0;\n    const logsFrame = parseLogsFrame(currentDataFrame);\n    const labels = logsFrame?.getLogFrameLabelsAsLabels();\n\n    const otherFields = [];\n\n    if (logsFrame) {\n      otherFields.push(...logsFrame.extraFields.filter((field) => !field?.config?.custom?.hidden));\n    }\n    if (logsFrame?.severityField) {\n      otherFields.push(logsFrame?.severityField);\n    }\n    if (logsFrame?.bodyField) {\n      otherFields.push(logsFrame?.bodyField);\n    }\n    if (logsFrame?.timeField) {\n      otherFields.push(logsFrame?.timeField);\n    }\n\n    // Use a map to dedupe labels and count their occurrences in the logs\n    const labelCardinality = new Map<FieldName, FieldNameMeta>();\n\n    // What the label state will look like\n    let pendingLabelState: FieldNameMetaStore = {};\n\n    // If we have labels and log lines\n    if (labels?.length && numberOfLogLines) {\n      // Iterate through all of Labels\n      labels.forEach((labels: Labels) => {\n        const labelsArray = Object.keys(labels);\n        // Iterate through the label values\n        labelsArray.forEach((label) => {\n          // If it's already in our map, increment the count\n          if (labelCardinality.has(label)) {\n            const value = labelCardinality.get(label);\n            if (value) {\n              if (value?.active) {\n                labelCardinality.set(label, {\n                  percentOfLinesWithLabel: value.percentOfLinesWithLabel + 1,\n                  active: true,\n                  index: value.index,\n                });\n              } else {\n                labelCardinality.set(label, {\n                  percentOfLinesWithLabel: value.percentOfLinesWithLabel + 1,\n                  active: false,\n                  index: undefined,\n                });\n              }\n            }\n            // Otherwise add it\n          } else {\n            labelCardinality.set(label, { percentOfLinesWithLabel: 1, active: false, index: undefined });\n          }\n        });\n      });\n\n      // Converting the map to an object\n      pendingLabelState = Object.fromEntries(labelCardinality);\n\n      // Convert count to percent of log lines\n      Object.keys(pendingLabelState).forEach((key) => {\n        pendingLabelState[key].percentOfLinesWithLabel = normalize(\n          pendingLabelState[key].percentOfLinesWithLabel,\n          numberOfLogLines\n        );\n      });\n    }\n\n    // Normalize the other fields\n    otherFields.forEach((field) => {\n      const isActive = pendingLabelState[field.name]?.active;\n      const index = pendingLabelState[field.name]?.index;\n      if (isActive && index !== undefined) {\n        pendingLabelState[field.name] = {\n          percentOfLinesWithLabel: normalize(\n            field.values.filter((value) => value !== null && value !== undefined).length,\n            numberOfLogLines\n          ),\n          active: true,\n          index: index,\n        };\n      } else {\n        pendingLabelState[field.name] = {\n          percentOfLinesWithLabel: normalize(\n            field.values.filter((value) => value !== null && value !== undefined).length,\n            numberOfLogLines\n          ),\n          active: false,\n          index: undefined,\n        };\n      }\n    });\n\n    pendingLabelState = getColumnsFromProps(pendingLabelState);\n\n    // Get all active columns\n    const active = Object.keys(pendingLabelState).filter((key) => pendingLabelState[key].active);\n\n    // If nothing is selected, then select the default columns\n    if (active.length === 0) {\n      if (logsFrame?.bodyField?.name) {\n        pendingLabelState[logsFrame.bodyField.name].active = true;\n      }\n      if (logsFrame?.timeField?.name) {\n        pendingLabelState[logsFrame.timeField.name].active = true;\n      }\n    }\n\n    if (logsFrame?.bodyField?.name && logsFrame?.timeField?.name) {\n      pendingLabelState[logsFrame.bodyField.name].type = 'BODY_FIELD';\n      pendingLabelState[logsFrame.timeField.name].type = 'TIME_FIELD';\n    }\n\n    setColumnsWithMeta(pendingLabelState);\n\n    // The panel state is updated when the user interacts with the multi-select sidebar\n  }, [currentDataFrame, getColumnsFromProps]);\n\n  const [sidebarWidth, setSidebarWidth] = useState(220);\n  const tableWidth = props.width - sidebarWidth;\n\n  if (!columnsWithMeta) {\n    return null;\n  }\n\n  function columnFilterEvent(columnName: string) {\n    if (columnsWithMeta) {\n      const newState = !columnsWithMeta[columnName]?.active;\n      const priorActiveCount = Object.keys(columnsWithMeta).filter((column) => columnsWithMeta[column]?.active)?.length;\n      const event = {\n        columnAction: newState ? 'add' : 'remove',\n        columnCount: newState ? priorActiveCount + 1 : priorActiveCount - 1,\n        datasourceType: props.datasourceType,\n      };\n      reportInteraction('grafana_explore_logs_table_column_filter_clicked', event);\n    }\n  }\n\n  function searchFilterEvent(searchResultCount: number) {\n    reportInteraction('grafana_explore_logs_table_text_search_result_count', {\n      resultCount: searchResultCount,\n      datasourceType: props.datasourceType ?? 'unknown',\n    });\n  }\n\n  const clearSelection = () => {\n    const pendingLabelState = { ...columnsWithMeta };\n    let index = 0;\n    Object.keys(pendingLabelState).forEach((key) => {\n      const isDefaultField = !!pendingLabelState[key].type;\n      // after reset the only active fields are the special time and body fields\n      pendingLabelState[key].active = isDefaultField;\n      // reset the index\n      pendingLabelState[key].index = isDefaultField ? index++ : undefined;\n    });\n    setColumnsWithMeta(pendingLabelState);\n  };\n\n  const reorderColumn = (sourceIndex: number, destinationIndex: number) => {\n    if (sourceIndex === destinationIndex) {\n      return;\n    }\n\n    const pendingLabelState = { ...columnsWithMeta };\n\n    const keys = Object.keys(pendingLabelState)\n      .filter((key) => pendingLabelState[key].active)\n      .map((key) => ({\n        fieldName: key,\n        index: pendingLabelState[key].index ?? 0,\n      }))\n      .sort((a, b) => a.index - b.index);\n\n    const [source] = keys.splice(sourceIndex, 1);\n    keys.splice(destinationIndex, 0, source);\n\n    keys.forEach((key, index) => {\n      pendingLabelState[key.fieldName].index = index;\n    });\n\n    // Set local state\n    setColumnsWithMeta(pendingLabelState);\n\n    // Sync the explore state\n    updateExploreState(pendingLabelState);\n  };\n\n  function updateExploreState(pendingLabelState: FieldNameMetaStore) {\n    // Get all active columns and sort by index\n    const newColumnsArray = Object.keys(pendingLabelState)\n      // Only include active filters\n      .filter((key) => pendingLabelState[key]?.active)\n      .sort((a, b) => {\n        const pa = pendingLabelState[a];\n        const pb = pendingLabelState[b];\n        if (pa.index !== undefined && pb.index !== undefined) {\n          return pa.index - pb.index; // sort by index\n        }\n        return 0;\n      });\n\n    const newColumns: Record<number, string> = Object.assign(\n      {},\n      // Get the keys of the object as an array\n      newColumnsArray\n    );\n\n    const defaultColumns = { 0: logsFrame?.timeField.name ?? '', 1: logsFrame?.bodyField.name ?? '' };\n    const newPanelState: ExploreLogsPanelState = {\n      ...props.panelState,\n      // URL format requires our array of values be an object, so we convert it using object.assign\n      columns: Object.keys(newColumns).length ? newColumns : defaultColumns,\n      refId: currentDataFrame.refId,\n      visualisationType: 'table',\n      labelFieldName: logsFrame?.getLabelFieldName() ?? undefined,\n    };\n\n    // Update url state\n    updatePanelState(newPanelState);\n  }\n\n  // Toggle a column on or off when the user interacts with an element in the multi-select sidebar\n  const toggleColumn = (columnName: FieldName) => {\n    if (!columnsWithMeta || !(columnName in columnsWithMeta)) {\n      console.warn('failed to get column', columnsWithMeta);\n      return;\n    }\n\n    const length = Object.keys(columnsWithMeta).filter((c) => columnsWithMeta[c].active).length;\n    const isActive = !columnsWithMeta[columnName].active ? true : undefined;\n\n    let pendingLabelState: FieldNameMetaStore;\n    if (isActive) {\n      pendingLabelState = {\n        ...columnsWithMeta,\n        [columnName]: {\n          ...columnsWithMeta[columnName],\n          active: isActive,\n          index: length,\n        },\n      };\n    } else {\n      pendingLabelState = {\n        ...columnsWithMeta,\n        [columnName]: {\n          ...columnsWithMeta[columnName],\n          active: false,\n          index: undefined,\n        },\n      };\n    }\n\n    // Analytics\n    columnFilterEvent(columnName);\n\n    // Set local state\n    setColumnsWithMeta(pendingLabelState);\n\n    // If user is currently filtering, update filtered state\n    if (filteredColumnsWithMeta) {\n      const active = !filteredColumnsWithMeta[columnName]?.active;\n      let pendingFilteredLabelState: FieldNameMetaStore;\n      if (active) {\n        pendingFilteredLabelState = {\n          ...filteredColumnsWithMeta,\n          [columnName]: {\n            ...filteredColumnsWithMeta[columnName],\n            active: active,\n            index: length,\n          },\n        };\n      } else {\n        pendingFilteredLabelState = {\n          ...filteredColumnsWithMeta,\n          [columnName]: {\n            ...filteredColumnsWithMeta[columnName],\n            active: false,\n            index: undefined,\n          },\n        };\n      }\n\n      setFilteredColumnsWithMeta(pendingFilteredLabelState);\n    }\n\n    updateExploreState(pendingLabelState);\n  };\n\n  // uFuzzy search dispatcher, adds any matches to the local state\n  const dispatcher = (data: string[][]) => {\n    const matches = data[0];\n    let newColumnsWithMeta: FieldNameMetaStore = {};\n    let numberOfResults = 0;\n    matches.forEach((match) => {\n      if (match in columnsWithMeta) {\n        newColumnsWithMeta[match] = columnsWithMeta[match];\n        numberOfResults++;\n      }\n    });\n    setFilteredColumnsWithMeta(newColumnsWithMeta);\n    searchFilterEvent(numberOfResults);\n  };\n\n  // uFuzzy search\n  const search = (needle: string) => {\n    fuzzySearch(Object.keys(columnsWithMeta), needle, dispatcher);\n  };\n\n  // onChange handler for search input\n  const onSearchInputChange = (e: React.FormEvent<HTMLInputElement>) => {\n    const value = e.currentTarget?.value;\n    setSearchValue(value);\n    if (value) {\n      search(value);\n    } else {\n      // If the search input is empty, reset the local search state.\n      setFilteredColumnsWithMeta(undefined);\n    }\n  };\n\n  const onFrameSelectorChange = (value: SelectableValue<string>) => {\n    const matchingDataFrame = logsFrames.find((frame) => frame.refId === value.value);\n    if (matchingDataFrame) {\n      setCurrentDataFrame(logsFrames.find((frame) => frame.refId === value.value) ?? logsFrames[0]);\n    }\n    props.updatePanelState({ refId: value.value, labelFieldName: logsFrame?.getLabelFieldName() ?? undefined });\n  };\n\n  const styles = getStyles(props.theme, height, sidebarWidth);\n\n  const getOnResize: ResizeCallback = (event, direction, ref) => {\n    const newSidebarWidth = Number(ref.style.width.slice(0, -2));\n    if (!isNaN(newSidebarWidth)) {\n      setSidebarWidth(newSidebarWidth);\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {logsFrames.length > 1 && (\n          <div>\n            <InlineField\n              label=\"Select query\"\n              htmlFor=\"explore_logs_table_frame_selector\"\n              labelWidth={22}\n              tooltip=\"Select a query to visualize in the table.\"\n            >\n              <Select\n                inputId={'explore_logs_table_frame_selector'}\n                aria-label={'Select query by name'}\n                value={currentDataFrame.refId}\n                options={logsFrames.map((frame) => {\n                  return {\n                    label: frame.refId,\n                    value: frame.refId,\n                  };\n                })}\n                onChange={onFrameSelectorChange}\n              />\n            </InlineField>\n          </div>\n        )}\n      </div>\n      <div className={styles.wrapper}>\n        <Resizable\n          enable={{\n            right: true,\n          }}\n          handleClasses={{ right: styles.rzHandle }}\n          onResize={getOnResize}\n        >\n          <section className={styles.sidebar}>\n            <LogsColumnSearch value={searchValue} onChange={onSearchInputChange} />\n            <LogsTableMultiSelect\n              reorderColumn={reorderColumn}\n              toggleColumn={toggleColumn}\n              filteredColumnsWithMeta={filteredColumnsWithMeta}\n              columnsWithMeta={columnsWithMeta}\n              clear={clearSelection}\n            />\n          </section>\n        </Resizable>\n        <LogsTable\n          logsFrame={logsFrame}\n          onClickFilterLabel={props.onClickFilterLabel}\n          onClickFilterOutLabel={props.onClickFilterOutLabel}\n          logsSortOrder={props.logsSortOrder}\n          range={props.range}\n          splitOpen={props.splitOpen}\n          timeZone={props.timeZone}\n          width={tableWidth}\n          dataFrame={currentDataFrame}\n          columnsWithMeta={columnsWithMeta}\n          height={height}\n        />\n      </div>\n    </>\n  );\n}\n\nconst normalize = (value: number, total: number): number => {\n  return Math.ceil((100 * value) / total);\n};\n\nfunction getStyles(theme: GrafanaTheme2, height: number, width: number) {\n  return {\n    wrapper: css({\n      display: 'flex',\n    }),\n    sidebar: css({\n      height: height,\n      fontSize: theme.typography.pxToRem(11),\n      overflowY: 'hidden',\n      width: width,\n      paddingRight: theme.spacing(3),\n    }),\n    rzHandle: css({\n      background: theme.colors.secondary.main,\n      transition: '0.3s background ease-in-out',\n      position: 'relative',\n      height: '50% !important',\n      width: `${theme.spacing(1)} !important`,\n      top: '25% !important',\n      right: `${theme.spacing(1)} !important`,\n      cursor: 'grab',\n      borderRadius: theme.shape.radius.pill,\n      ['&:hover']: {\n        background: theme.colors.secondary.shade,\n      },\n    }),\n  };\n}\n\nexport const getLogsTableHeight = () => {\n  // Instead of making the height of the table based on the content (like in the table panel itself), let's try to use the vertical space that is available.\n  // Since this table is in explore, we can expect the user to be running multiple queries that return disparate numbers of rows and labels in the same session\n  // Also changing the height of the table between queries can be and cause content to jump, so we'll set a minimum height of 500px, and a max based on the innerHeight\n  // Ideally the table container should always be able to fit in the users viewport without needing to scroll\n  return Math.max(window.innerHeight - 500, 500);\n};\n","import { css } from '@emotion/css';\nimport React, { useState } from 'react';\n\nimport { DataQueryError, GrafanaTheme2 } from '@grafana/data';\nimport { Alert, AlertVariant, Button, useTheme2 } from '@grafana/ui';\n\ntype Props = {\n  error?: DataQueryError;\n  title: string;\n  severity?: AlertVariant;\n  suggestedAction?: string;\n  onSuggestedAction?(): void;\n  onRemove?(): void;\n};\nexport function SupplementaryResultError(props: Props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const SHORT_ERROR_MESSAGE_LIMIT = 100;\n  const { error, title, suggestedAction, onSuggestedAction, onRemove, severity = 'warning' } = props;\n  // generic get-error-message-logic, taken from\n  // /public/app/features/explore/ErrorContainer.tsx\n  const message = error?.message || error?.data?.message || '';\n  const showButton = !isOpen && message.length > SHORT_ERROR_MESSAGE_LIMIT;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  return (\n    <div className={styles.supplementaryErrorContainer}>\n      <Alert title={title} severity={severity} onRemove={onRemove}>\n        <div className={styles.suggestedActionWrapper}>\n          {showButton ? (\n            <Button\n              variant=\"secondary\"\n              size=\"xs\"\n              onClick={() => {\n                setIsOpen(true);\n              }}\n            >\n              Show details\n            </Button>\n          ) : (\n            message\n          )}\n          {suggestedAction && onSuggestedAction && (\n            <div className={styles.suggestedActionWrapper}>\n              <Button variant=\"primary\" size=\"xs\" onClick={onSuggestedAction}>\n                {suggestedAction}\n              </Button>\n            </div>\n          )}\n        </div>\n      </Alert>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    supplementaryErrorContainer: css({\n      width: '50%',\n      minWidth: `${theme.breakpoints.values.sm}px`,\n      margin: '0 auto',\n    }),\n    suggestedActionWrapper: css({\n      height: theme.spacing(6),\n      ['button']: {\n        position: 'absolute',\n        right: theme.spacing(2),\n        top: theme.spacing(7),\n      },\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport { identity } from 'lodash';\nimport React from 'react';\n\nimport {\n  AbsoluteTimeRange,\n  DataQueryResponse,\n  LoadingState,\n  SplitOpen,\n  EventBus,\n  GrafanaTheme2,\n  DataFrame,\n} from '@grafana/data';\nimport { TimeZone } from '@grafana/schema';\nimport { Icon, Tooltip, TooltipDisplayMode, useStyles2, useTheme2 } from '@grafana/ui';\n\nimport { getLogsVolumeDataSourceInfo, isLogsVolumeLimited } from '../../logs/utils';\nimport { ExploreGraph } from '../Graph/ExploreGraph';\n\ntype Props = {\n  logsVolumeData: DataQueryResponse;\n  allLogsVolumeMaximum: number;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  splitOpen: SplitOpen;\n  width: number;\n  onUpdateTimeRange: (timeRange: AbsoluteTimeRange) => void;\n  onLoadLogsVolume: () => void;\n  onHiddenSeriesChanged: (hiddenSeries: string[]) => void;\n  eventBus: EventBus;\n  annotations: DataFrame[];\n};\n\nexport function LogsVolumePanel(props: Props) {\n  const { width, timeZone, splitOpen, onUpdateTimeRange, onHiddenSeriesChanged, allLogsVolumeMaximum } = props;\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n  const height = 150;\n\n  const logsVolumeData = props.logsVolumeData;\n\n  const logsVolumeInfo = getLogsVolumeDataSourceInfo(logsVolumeData?.data);\n  let extraInfo = logsVolumeInfo ? `${logsVolumeInfo.name}` : '';\n\n  if (isLogsVolumeLimited(logsVolumeData.data)) {\n    extraInfo = [\n      extraInfo,\n      'This datasource does not support full-range histograms. The graph below is based on the logs seen in the response.',\n    ]\n      .filter(identity)\n      .join('. ');\n  }\n\n  let extraInfoComponent = <span>{extraInfo}</span>;\n\n  if (logsVolumeData.state === LoadingState.Streaming) {\n    extraInfoComponent = (\n      <>\n        {extraInfoComponent}\n        <Tooltip content=\"Streaming\">\n          <Icon name=\"circle-mono\" size=\"md\" className={styles.streaming} data-testid=\"logs-volume-streaming\" />\n        </Tooltip>\n      </>\n    );\n  }\n\n  return (\n    <div style={{ height }} className={styles.contentContainer}>\n      <ExploreGraph\n        vizLegendOverrides={{\n          calcs: ['sum'],\n        }}\n        graphStyle=\"lines\"\n        loadingState={logsVolumeData.state ?? LoadingState.Done}\n        data={logsVolumeData.data}\n        height={height}\n        width={width - spacing * 2}\n        absoluteRange={props.absoluteRange}\n        onChangeTime={onUpdateTimeRange}\n        timeZone={timeZone}\n        splitOpenFn={splitOpen}\n        tooltipDisplayMode={TooltipDisplayMode.Multi}\n        onHiddenSeriesChanged={onHiddenSeriesChanged}\n        anchorToZero\n        yAxisMaximum={allLogsVolumeMaximum}\n        eventBus={props.eventBus}\n        annotations={props.annotations}\n      />\n      {extraInfoComponent && <div className={styles.extraInfoContainer}>{extraInfoComponent}</div>}\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    extraInfoContainer: css`\n      display: flex;\n      justify-content: end;\n      position: absolute;\n      right: 5px;\n      top: -10px;\n      font-size: ${theme.typography.bodySmall.fontSize};\n      color: ${theme.colors.text.secondary};\n    `,\n    contentContainer: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n    `,\n    streaming: css`\n      color: ${theme.colors.success.text};\n    `,\n  };\n};\n","import { DataQueryError, DataQueryResponse } from '@grafana/data';\n\n// Currently we can only infer if an error response is a timeout or not.\nexport function isTimeoutErrorResponse(response: DataQueryResponse | undefined): boolean {\n  if (!response) {\n    return false;\n  }\n  if (!response.error && !response.errors) {\n    return false;\n  }\n\n  const errors = response.error ? [response.error] : response.errors || [];\n\n  return errors.some((error: DataQueryError) => {\n    const message = `${error.message || error.data?.message}`?.toLowerCase();\n    return message.includes('timeout');\n  });\n}\n","import { css } from '@emotion/css';\nimport { flatten, groupBy, mapValues, sortBy } from 'lodash';\nimport React, { useMemo } from 'react';\n\nimport {\n  AbsoluteTimeRange,\n  DataFrame,\n  DataQueryResponse,\n  DataTopic,\n  EventBus,\n  GrafanaTheme2,\n  LoadingState,\n  SplitOpen,\n  TimeZone,\n} from '@grafana/data';\nimport { Button, InlineField, Alert, useStyles2 } from '@grafana/ui';\n\nimport { mergeLogsVolumeDataFrames, isLogsVolumeLimited, getLogsVolumeMaximumRange } from '../../logs/utils';\nimport { SupplementaryResultError } from '../SupplementaryResultError';\n\nimport { LogsVolumePanel } from './LogsVolumePanel';\nimport { isTimeoutErrorResponse } from './utils/logsVolumeResponse';\n\ntype Props = {\n  logsVolumeData: DataQueryResponse | undefined;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  splitOpen: SplitOpen;\n  width: number;\n  onUpdateTimeRange: (timeRange: AbsoluteTimeRange) => void;\n  onLoadLogsVolume: () => void;\n  onHiddenSeriesChanged: (hiddenSeries: string[]) => void;\n  eventBus: EventBus;\n  onClose?(): void;\n};\n\nexport const LogsVolumePanelList = ({\n  logsVolumeData,\n  absoluteRange,\n  onUpdateTimeRange,\n  width,\n  onLoadLogsVolume,\n  onHiddenSeriesChanged,\n  eventBus,\n  splitOpen,\n  timeZone,\n  onClose,\n}: Props) => {\n  const {\n    logVolumes,\n    maximumValue: allLogsVolumeMaximumValue,\n    maximumRange: allLogsVolumeMaximumRange,\n    annotations,\n  } = useMemo(() => {\n    let maximumValue = -Infinity;\n    const data = logsVolumeData?.data.filter((frame: DataFrame) => frame.meta?.dataTopic !== DataTopic.Annotations);\n    const annotations =\n      logsVolumeData?.data.filter((frame: DataFrame) => frame.meta?.dataTopic === DataTopic.Annotations) || [];\n    const sorted = sortBy(data || [], 'meta.custom.datasourceName');\n    const grouped = groupBy(sorted, 'meta.custom.datasourceName');\n    const logVolumes = mapValues(grouped, (value) => {\n      const mergedData = mergeLogsVolumeDataFrames(value);\n      maximumValue = Math.max(maximumValue, mergedData.maximum);\n      return mergedData.dataFrames;\n    });\n    const maximumRange = getLogsVolumeMaximumRange(flatten(Object.values(logVolumes)));\n    return {\n      maximumValue,\n      maximumRange,\n      logVolumes,\n      annotations,\n    };\n  }, [logsVolumeData]);\n\n  const styles = useStyles2(getStyles);\n\n  const numberOfLogVolumes = Object.keys(logVolumes).length;\n\n  const containsZoomed = Object.values(logVolumes).some((data: DataFrame[]) => {\n    const zoomRatio = logsLevelZoomRatio(data, absoluteRange);\n    return !isLogsVolumeLimited(data) && zoomRatio && zoomRatio < 1;\n  });\n\n  const timeoutError = isTimeoutErrorResponse(logsVolumeData);\n\n  const visibleRange = {\n    from: Math.max(absoluteRange.from, allLogsVolumeMaximumRange.from),\n    to: Math.min(absoluteRange.to, allLogsVolumeMaximumRange.to),\n  };\n\n  if (logsVolumeData?.state === LoadingState.Loading) {\n    return <span>Loading...</span>;\n  } else if (timeoutError) {\n    return (\n      <SupplementaryResultError\n        title=\"The logs volume query has timed out\"\n        // Using info to avoid users thinking that the actual query has failed.\n        severity=\"info\"\n        suggestedAction=\"Retry\"\n        onSuggestedAction={onLoadLogsVolume}\n        onRemove={onClose}\n      />\n    );\n  } else if (logsVolumeData?.error !== undefined) {\n    return <SupplementaryResultError error={logsVolumeData.error} title=\"Failed to load log volume for this query\" />;\n  }\n\n  if (numberOfLogVolumes === 0) {\n    return (\n      <div className={styles.alertContainer}>\n        <Alert severity=\"info\" title=\"No logs volume available\">\n          No volume information available for the current queries and time range.\n        </Alert>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.listContainer}>\n      {Object.keys(logVolumes).map((name, index) => {\n        const logsVolumeData = { data: logVolumes[name] };\n        return (\n          <LogsVolumePanel\n            key={index}\n            absoluteRange={visibleRange}\n            allLogsVolumeMaximum={allLogsVolumeMaximumValue}\n            width={width}\n            logsVolumeData={logsVolumeData}\n            onUpdateTimeRange={onUpdateTimeRange}\n            timeZone={timeZone}\n            splitOpen={splitOpen}\n            onLoadLogsVolume={onLoadLogsVolume}\n            // TODO: Support filtering level from multiple log levels\n            onHiddenSeriesChanged={numberOfLogVolumes > 1 ? () => {} : onHiddenSeriesChanged}\n            eventBus={eventBus}\n            annotations={annotations}\n          />\n        );\n      })}\n      {containsZoomed && (\n        <div className={styles.extraInfoContainer}>\n          <InlineField label=\"Reload log volume\" transparent>\n            <Button size=\"xs\" icon=\"sync\" variant=\"secondary\" onClick={onLoadLogsVolume} id=\"reload-volume\" />\n          </InlineField>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    listContainer: css`\n      padding-top: 10px;\n    `,\n    extraInfoContainer: css`\n      display: flex;\n      justify-content: end;\n      position: absolute;\n      right: 5px;\n      top: 5px;\n    `,\n    oldInfoText: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n      color: ${theme.colors.text.secondary};\n    `,\n    alertContainer: css`\n      width: 50%;\n      min-width: ${theme.breakpoints.values.sm}px;\n      margin: 0 auto;\n    `,\n  };\n};\n\nfunction logsLevelZoomRatio(\n  logsVolumeData: DataFrame[] | undefined,\n  selectedTimeRange: AbsoluteTimeRange\n): number | undefined {\n  const dataRange = logsVolumeData && logsVolumeData[0] && logsVolumeData[0].meta?.custom?.absoluteRange;\n  return dataRange ? (selectedTimeRange.from - selectedTimeRange.to) / (dataRange.from - dataRange.to) : undefined;\n}\n","import { css, cx } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport React, { createRef, PureComponent } from 'react';\n\nimport {\n  AbsoluteTimeRange,\n  CoreApp,\n  DataFrame,\n  DataHoverClearEvent,\n  DataHoverEvent,\n  DataQueryResponse,\n  EventBus,\n  ExploreLogsPanelState,\n  ExplorePanelsState,\n  Field,\n  GrafanaTheme2,\n  LinkModel,\n  LoadingState,\n  LogLevel,\n  LogRowContextOptions,\n  LogRowModel,\n  LogsDedupDescription,\n  LogsDedupStrategy,\n  LogsMetaItem,\n  LogsSortOrder,\n  rangeUtil,\n  RawTimeRange,\n  serializeStateToUrlParam,\n  SplitOpen,\n  TimeRange,\n  urlUtil,\n} from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { DataQuery, TimeZone } from '@grafana/schema';\nimport {\n  Button,\n  InlineField,\n  InlineFieldRow,\n  InlineSwitch,\n  PanelChrome,\n  RadioButtonGroup,\n  Themeable2,\n  withTheme2,\n} from '@grafana/ui';\nimport store from 'app/core/store';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { InfiniteScroll } from 'app/features/logs/components/InfiniteScroll';\nimport { getLogLevelFromKey } from 'app/features/logs/utils';\nimport { dispatch, getState } from 'app/store/store';\n\nimport { ExploreItemState } from '../../../types';\nimport { LogRows } from '../../logs/components/LogRows';\nimport { LogRowContextModal } from '../../logs/components/log-context/LogRowContextModal';\nimport { dedupLogRows, filterLogLevels } from '../../logs/logsModel';\nimport { getUrlStateFromPaneState } from '../hooks/useStateSync';\nimport { changePanelState } from '../state/explorePane';\n\nimport { LogsFeedback } from './LogsFeedback';\nimport { LogsMetaRow } from './LogsMetaRow';\nimport LogsNavigation from './LogsNavigation';\nimport { getLogsTableHeight, LogsTableWrap } from './LogsTableWrap';\nimport { LogsVolumePanelList } from './LogsVolumePanelList';\nimport { SETTINGS_KEYS, visualisationTypeKey } from './utils/logs';\n\ninterface Props extends Themeable2 {\n  width: number;\n  splitOpen: SplitOpen;\n  logRows: LogRowModel[];\n  logsMeta?: LogsMetaItem[];\n  logsSeries?: DataFrame[];\n  logsQueries?: DataQuery[];\n  visibleRange?: AbsoluteTimeRange;\n  theme: GrafanaTheme2;\n  loading: boolean;\n  loadingState: LoadingState;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  scanning?: boolean;\n  scanRange?: RawTimeRange;\n  exploreId: string;\n  datasourceType?: string;\n  logsVolumeEnabled: boolean;\n  logsVolumeData: DataQueryResponse | undefined;\n  onSetLogsVolumeEnabled: (enabled: boolean) => void;\n  loadLogsVolumeData: () => void;\n  showContextToggle?: (row: LogRowModel) => boolean;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  onClickFilterLabel?: (key: string, value: string, frame?: DataFrame) => void;\n  onClickFilterOutLabel?: (key: string, value: string, frame?: DataFrame) => void;\n  onStartScanning?: () => void;\n  onStopScanning?: () => void;\n  getRowContext?: (row: LogRowModel, origRow: LogRowModel, options: LogRowContextOptions) => Promise<any>;\n  getRowContextQuery?: (\n    row: LogRowModel,\n    options?: LogRowContextOptions,\n    cacheFilters?: boolean\n  ) => Promise<DataQuery | null>;\n  getLogRowContextUi?: (row: LogRowModel, runContextQuery?: () => void) => React.ReactNode;\n  getFieldLinks: (field: Field, rowIndex: number, dataFrame: DataFrame) => Array<LinkModel<Field>>;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n  eventBus: EventBus;\n  panelState?: ExplorePanelsState;\n  scrollElement?: HTMLDivElement;\n  isFilterLabelActive?: (key: string, value: string, refId?: string) => Promise<boolean>;\n  logsFrames?: DataFrame[];\n  range: TimeRange;\n  onClickFilterValue?: (value: string, refId?: string) => void;\n  onClickFilterOutValue?: (value: string, refId?: string) => void;\n  loadMoreLogs?(range: AbsoluteTimeRange): void;\n}\n\nexport type LogsVisualisationType = 'table' | 'logs';\n\ninterface State {\n  showLabels: boolean;\n  showTime: boolean;\n  wrapLogMessage: boolean;\n  prettifyLogMessage: boolean;\n  dedupStrategy: LogsDedupStrategy;\n  hiddenLogLevels: LogLevel[];\n  logsSortOrder: LogsSortOrder;\n  isFlipping: boolean;\n  displayedFields: string[];\n  forceEscape: boolean;\n  contextOpen: boolean;\n  contextRow?: LogRowModel;\n  tableFrame?: DataFrame;\n  visualisationType?: LogsVisualisationType;\n  logsContainer?: HTMLDivElement;\n}\n\n// we need to define the order of these explicitly\nconst DEDUP_OPTIONS = [\n  LogsDedupStrategy.none,\n  LogsDedupStrategy.exact,\n  LogsDedupStrategy.numbers,\n  LogsDedupStrategy.signature,\n];\n\nconst getDefaultVisualisationType = (): LogsVisualisationType => {\n  const visualisationType = store.get(visualisationTypeKey);\n  if (visualisationType === 'table') {\n    return 'table';\n  }\n  return 'logs';\n};\n\nclass UnthemedLogs extends PureComponent<Props, State> {\n  flipOrderTimer?: number;\n  cancelFlippingTimer?: number;\n  topLogsRef = createRef<HTMLDivElement>();\n  logsVolumeEventBus: EventBus;\n\n  state: State = {\n    showLabels: store.getBool(SETTINGS_KEYS.showLabels, false),\n    showTime: store.getBool(SETTINGS_KEYS.showTime, true),\n    wrapLogMessage: store.getBool(SETTINGS_KEYS.wrapLogMessage, true),\n    prettifyLogMessage: store.getBool(SETTINGS_KEYS.prettifyLogMessage, false),\n    dedupStrategy: LogsDedupStrategy.none,\n    hiddenLogLevels: [],\n    logsSortOrder: store.get(SETTINGS_KEYS.logsSortOrder) || LogsSortOrder.Descending,\n    isFlipping: false,\n    displayedFields: [],\n    forceEscape: false,\n    contextOpen: false,\n    contextRow: undefined,\n    tableFrame: undefined,\n    visualisationType: this.props.panelState?.logs?.visualisationType ?? getDefaultVisualisationType(),\n    logsContainer: undefined,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.logsVolumeEventBus = props.eventBus.newScopedBus('logsvolume', { onlyLocal: false });\n  }\n\n  componentWillUnmount() {\n    if (this.flipOrderTimer) {\n      window.clearTimeout(this.flipOrderTimer);\n    }\n\n    if (this.cancelFlippingTimer) {\n      window.clearTimeout(this.cancelFlippingTimer);\n    }\n\n    // If we're unmounting logs (e.g. switching to another datasource), we need to remove the table specific panel state, otherwise it will persist in the explore url\n    if (\n      this.props?.panelState?.logs?.columns ||\n      this.props?.panelState?.logs?.refId ||\n      this.props?.panelState?.logs?.labelFieldName\n    ) {\n      dispatch(\n        changePanelState(this.props.exploreId, 'logs', {\n          ...this.props.panelState?.logs,\n          columns: undefined,\n          visualisationType: this.state.visualisationType,\n          labelFieldName: undefined,\n          refId: undefined,\n        })\n      );\n    }\n  }\n\n  updatePanelState = (logsPanelState: Partial<ExploreLogsPanelState>) => {\n    const state: ExploreItemState | undefined = getState().explore.panes[this.props.exploreId];\n    if (state?.panelsState) {\n      dispatch(\n        changePanelState(this.props.exploreId, 'logs', {\n          ...state.panelsState.logs,\n          columns: logsPanelState.columns ?? this.props.panelState?.logs?.columns,\n          visualisationType: logsPanelState.visualisationType ?? this.state.visualisationType,\n          labelFieldName: logsPanelState.labelFieldName,\n          refId: logsPanelState.refId ?? this.props.panelState?.logs?.refId,\n        })\n      );\n    }\n  };\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (this.props.loading && !prevProps.loading && this.props.panelState?.logs?.id) {\n      // loading stopped, so we need to remove any permalinked log lines\n      delete this.props.panelState.logs.id;\n\n      dispatch(\n        changePanelState(this.props.exploreId, 'logs', {\n          ...this.props.panelState,\n        })\n      );\n    }\n    if (this.props.panelState?.logs?.visualisationType !== prevProps.panelState?.logs?.visualisationType) {\n      const visualisationType = this.props.panelState?.logs?.visualisationType ?? getDefaultVisualisationType();\n\n      this.setState({\n        visualisationType: visualisationType,\n      });\n      store.set(visualisationTypeKey, visualisationType);\n    }\n  }\n\n  onLogRowHover = (row?: LogRowModel) => {\n    if (!row) {\n      this.props.eventBus.publish(new DataHoverClearEvent());\n    } else {\n      this.props.eventBus.publish(\n        new DataHoverEvent({\n          point: {\n            time: row.timeEpochMs,\n          },\n        })\n      );\n    }\n  };\n\n  onLogsContainerRef = (node: HTMLDivElement) => {\n    this.setState({ logsContainer: node });\n  };\n\n  onChangeLogsSortOrder = () => {\n    this.setState({ isFlipping: true });\n    // we are using setTimeout here to make sure that disabled button is rendered before the rendering of reordered logs\n    this.flipOrderTimer = window.setTimeout(() => {\n      this.setState((prevState) => {\n        const newSortOrder =\n          prevState.logsSortOrder === LogsSortOrder.Descending ? LogsSortOrder.Ascending : LogsSortOrder.Descending;\n        store.set(SETTINGS_KEYS.logsSortOrder, newSortOrder);\n        return { logsSortOrder: newSortOrder };\n      });\n    }, 0);\n    this.cancelFlippingTimer = window.setTimeout(() => this.setState({ isFlipping: false }), 1000);\n  };\n\n  onEscapeNewlines = () => {\n    this.setState((prevState) => ({\n      forceEscape: !prevState.forceEscape,\n    }));\n  };\n\n  onChangeVisualisation = (visualisation: LogsVisualisationType) => {\n    this.setState(() => ({\n      visualisationType: visualisation,\n    }));\n    const payload = {\n      ...this.props.panelState?.logs,\n      visualisationType: visualisation,\n    };\n    this.updatePanelState(payload);\n\n    reportInteraction('grafana_explore_logs_visualisation_changed', {\n      newVisualizationType: visualisation,\n      datasourceType: this.props.datasourceType ?? 'unknown',\n    });\n  };\n\n  onChangeDedup = (dedupStrategy: LogsDedupStrategy) => {\n    reportInteraction('grafana_explore_logs_deduplication_clicked', {\n      deduplicationType: dedupStrategy,\n      datasourceType: this.props.datasourceType,\n    });\n    this.setState({ dedupStrategy });\n  };\n\n  onChangeLabels = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showLabels = target.checked;\n      this.setState({\n        showLabels,\n      });\n      store.set(SETTINGS_KEYS.showLabels, showLabels);\n    }\n  };\n\n  onChangeTime = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showTime = target.checked;\n      this.setState({\n        showTime,\n      });\n      store.set(SETTINGS_KEYS.showTime, showTime);\n    }\n  };\n\n  onChangeWrapLogMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const wrapLogMessage = target.checked;\n      this.setState({\n        wrapLogMessage,\n      });\n      store.set(SETTINGS_KEYS.wrapLogMessage, wrapLogMessage);\n    }\n  };\n\n  onChangePrettifyLogMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const prettifyLogMessage = target.checked;\n      this.setState({\n        prettifyLogMessage,\n      });\n      store.set(SETTINGS_KEYS.prettifyLogMessage, prettifyLogMessage);\n    }\n  };\n\n  onToggleLogLevel = (hiddenRawLevels: string[]) => {\n    const hiddenLogLevels = hiddenRawLevels.map((level) => getLogLevelFromKey(level));\n    this.setState({ hiddenLogLevels });\n  };\n\n  onToggleLogsVolumeCollapse = (collapsed: boolean) => {\n    this.props.onSetLogsVolumeEnabled(!collapsed);\n    reportInteraction('grafana_explore_logs_histogram_toggle_clicked', {\n      datasourceType: this.props.datasourceType,\n      type: !collapsed ? 'open' : 'close',\n    });\n  };\n\n  onClickScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStartScanning) {\n      this.props.onStartScanning();\n      reportInteraction('grafana_explore_logs_scanning_button_clicked', {\n        type: 'start',\n        datasourceType: this.props.datasourceType,\n      });\n    }\n  };\n\n  onClickStopScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStopScanning) {\n      this.props.onStopScanning();\n    }\n  };\n\n  showField = (key: string) => {\n    const index = this.state.displayedFields.indexOf(key);\n\n    if (index === -1) {\n      this.setState((state) => {\n        return {\n          displayedFields: state.displayedFields.concat(key),\n        };\n      });\n    }\n  };\n\n  hideField = (key: string) => {\n    const index = this.state.displayedFields.indexOf(key);\n    if (index > -1) {\n      this.setState((state) => {\n        return {\n          displayedFields: state.displayedFields.filter((k) => key !== k),\n        };\n      });\n    }\n  };\n\n  clearDetectedFields = () => {\n    this.setState((state) => {\n      return {\n        displayedFields: [],\n      };\n    });\n  };\n\n  onCloseContext = () => {\n    this.setState({\n      contextOpen: false,\n      contextRow: undefined,\n    });\n  };\n\n  onOpenContext = (row: LogRowModel, onClose: () => void) => {\n    // we are setting the `contextOpen` open state and passing it down to the `LogRow` in order to highlight the row when a LogContext is open\n    this.setState({\n      contextOpen: true,\n      contextRow: row,\n    });\n    reportInteraction('grafana_explore_logs_log_context_opened', {\n      datasourceType: row.datasourceType,\n      logRowUid: row.uid,\n    });\n    this.onCloseContext = () => {\n      this.setState({\n        contextOpen: false,\n        contextRow: undefined,\n      });\n      reportInteraction('grafana_explore_logs_log_context_closed', {\n        datasourceType: row.datasourceType,\n        logRowUid: row.uid,\n      });\n      onClose();\n    };\n  };\n\n  getPreviousLog(row: LogRowModel, allLogs: LogRowModel[]): LogRowModel | null {\n    for (let i = allLogs.indexOf(row) - 1; i >= 0; i--) {\n      if (allLogs[i].timeEpochMs > row.timeEpochMs) {\n        return allLogs[i];\n      }\n    }\n\n    return null;\n  }\n\n  getPermalinkRange(row: LogRowModel) {\n    const range = {\n      from: new Date(this.props.absoluteRange.from).toISOString(),\n      to: new Date(this.props.absoluteRange.to).toISOString(),\n    };\n    if (!config.featureToggles.logsInfiniteScrolling) {\n      return range;\n    }\n\n    // With infinite scrolling, the time range of the log line can be after the absolute range or beyond the request line limit, so we need to adjust\n    // Look for the previous sibling log, and use its timestamp\n    const allLogs = this.props.logRows.filter((logRow) => logRow.dataFrame.refId === row.dataFrame.refId);\n    const prevLog = this.getPreviousLog(row, allLogs);\n\n    if (row.timeEpochMs > this.props.absoluteRange.to && !prevLog) {\n      // Because there's no sibling and the current `to` is oldest than the log, we have no reference we can use for the interval\n      // This only happens when you scroll into the future and you want to share the first log of the list\n      return {\n        from: new Date(this.props.absoluteRange.from).toISOString(),\n        // Slide 1ms otherwise it's very likely to be omitted in the results\n        to: new Date(row.timeEpochMs + 1).toISOString(),\n      };\n    }\n\n    return {\n      from: new Date(this.props.absoluteRange.from).toISOString(),\n      to: new Date(prevLog ? prevLog.timeEpochMs : this.props.absoluteRange.to).toISOString(),\n    };\n  }\n\n  onPermalinkClick = async (row: LogRowModel) => {\n    // this is an extra check, to be sure that we are not\n    // creating permalinks for logs without an id-field.\n    // normally it should never happen, because we do not\n    // display the permalink button in such cases.\n    if (row.rowId === undefined) {\n      return;\n    }\n\n    // get explore state, add log-row-id and make timerange absolute\n    const urlState = getUrlStateFromPaneState(getState().explore.panes[this.props.exploreId]!);\n    urlState.panelsState = {\n      ...this.props.panelState,\n      logs: { id: row.uid, visualisationType: this.state.visualisationType ?? getDefaultVisualisationType() },\n    };\n    urlState.range = this.getPermalinkRange(row);\n\n    // append changed urlState to baseUrl\n    const serializedState = serializeStateToUrlParam(urlState);\n    const baseUrl = /.*(?=\\/explore)/.exec(`${window.location.href}`)![0];\n    const url = urlUtil.renderUrl(`${baseUrl}/explore`, { left: serializedState });\n    await createAndCopyShortLink(url);\n\n    reportInteraction('grafana_explore_logs_permalink_clicked', {\n      datasourceType: row.datasourceType ?? 'unknown',\n      logRowUid: row.uid,\n      logRowLevel: row.logLevel,\n    });\n  };\n\n  scrollIntoView = (element: HTMLElement) => {\n    if (config.featureToggles.logsInfiniteScrolling) {\n      if (this.state.logsContainer) {\n        this.topLogsRef.current?.scrollIntoView();\n        this.state.logsContainer.scroll({\n          behavior: 'smooth',\n          top: this.state.logsContainer.scrollTop + element.getBoundingClientRect().top - window.innerHeight / 2,\n        });\n      }\n\n      return;\n    }\n    const { scrollElement } = this.props;\n\n    if (scrollElement) {\n      scrollElement.scroll({\n        behavior: 'smooth',\n        top: scrollElement.scrollTop + element.getBoundingClientRect().top - window.innerHeight / 2,\n      });\n    }\n  };\n\n  checkUnescapedContent = memoizeOne((logRows: LogRowModel[]) => {\n    return !!logRows.some((r) => r.hasUnescapedContent);\n  });\n\n  dedupRows = memoizeOne((logRows: LogRowModel[], dedupStrategy: LogsDedupStrategy) => {\n    const dedupedRows = dedupLogRows(logRows, dedupStrategy);\n    const dedupCount = dedupedRows.reduce((sum, row) => (row.duplicates ? sum + row.duplicates : sum), 0);\n    return { dedupedRows, dedupCount };\n  });\n\n  filterRows = memoizeOne((logRows: LogRowModel[], hiddenLogLevels: LogLevel[]) => {\n    return filterLogLevels(logRows, new Set(hiddenLogLevels));\n  });\n\n  createNavigationRange = memoizeOne((logRows: LogRowModel[]): { from: number; to: number } | undefined => {\n    if (!logRows || logRows.length === 0) {\n      return undefined;\n    }\n    const firstTimeStamp = logRows[0].timeEpochMs;\n    const lastTimeStamp = logRows[logRows.length - 1].timeEpochMs;\n\n    if (lastTimeStamp < firstTimeStamp) {\n      return { from: lastTimeStamp, to: firstTimeStamp };\n    }\n\n    return { from: firstTimeStamp, to: lastTimeStamp };\n  });\n\n  scrollToTopLogs = () => {\n    if (config.featureToggles.logsInfiniteScrolling) {\n      if (this.state.logsContainer) {\n        this.state.logsContainer.scroll({\n          behavior: 'auto',\n          top: 0,\n        });\n      }\n    }\n    this.topLogsRef.current?.scrollIntoView();\n  };\n\n  render() {\n    const {\n      width,\n      splitOpen,\n      logRows,\n      logsMeta,\n      logsVolumeEnabled,\n      logsVolumeData,\n      loadLogsVolumeData,\n      loading = false,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      timeZone,\n      scanning,\n      scanRange,\n      showContextToggle,\n      absoluteRange,\n      onChangeTime,\n      getFieldLinks,\n      theme,\n      logsQueries,\n      clearCache,\n      addResultsToCache,\n      exploreId,\n      getRowContext,\n      getLogRowContextUi,\n      getRowContextQuery,\n      loadMoreLogs,\n    } = this.props;\n\n    const {\n      showLabels,\n      showTime,\n      wrapLogMessage,\n      prettifyLogMessage,\n      dedupStrategy,\n      hiddenLogLevels,\n      logsSortOrder,\n      isFlipping,\n      displayedFields,\n      forceEscape,\n      contextOpen,\n      contextRow,\n    } = this.state;\n\n    const tableHeight = getLogsTableHeight();\n    const styles = getStyles(theme, wrapLogMessage, tableHeight);\n    const hasData = logRows && logRows.length > 0;\n    const hasUnescapedContent = this.checkUnescapedContent(logRows);\n\n    const filteredLogs = this.filterRows(logRows, hiddenLogLevels);\n    const { dedupedRows, dedupCount } = this.dedupRows(filteredLogs, dedupStrategy);\n    const navigationRange = this.createNavigationRange(logRows);\n\n    const scanText = scanRange ? `Scanning ${rangeUtil.describeTimeRange(scanRange)}` : 'Scanning...';\n\n    return (\n      <>\n        {getRowContext && contextRow && (\n          <LogRowContextModal\n            open={contextOpen}\n            row={contextRow}\n            onClose={this.onCloseContext}\n            getRowContext={(row, options) => getRowContext(row, contextRow, options)}\n            getRowContextQuery={getRowContextQuery}\n            getLogRowContextUi={getLogRowContextUi}\n            logsSortOrder={logsSortOrder}\n            timeZone={timeZone}\n          />\n        )}\n        <PanelChrome\n          title=\"Logs volume\"\n          collapsible\n          collapsed={!logsVolumeEnabled}\n          onToggleCollapse={this.onToggleLogsVolumeCollapse}\n        >\n          {logsVolumeEnabled && (\n            <LogsVolumePanelList\n              absoluteRange={absoluteRange}\n              width={width}\n              logsVolumeData={logsVolumeData}\n              onUpdateTimeRange={onChangeTime}\n              timeZone={timeZone}\n              splitOpen={splitOpen}\n              onLoadLogsVolume={loadLogsVolumeData}\n              onHiddenSeriesChanged={this.onToggleLogLevel}\n              eventBus={this.logsVolumeEventBus}\n              onClose={() => this.onToggleLogsVolumeCollapse(true)}\n            />\n          )}\n        </PanelChrome>\n        <PanelChrome\n          titleItems={[\n            config.featureToggles.logsExploreTableVisualisation ? (\n              this.state.visualisationType === 'logs' ? null : (\n                <PanelChrome.TitleItem title=\"Feedback\" key=\"A\">\n                  <LogsFeedback feedbackUrl=\"https://forms.gle/5YyKdRQJ5hzq4c289\" />\n                </PanelChrome.TitleItem>\n              )\n            ) : null,\n          ]}\n          title={'Logs'}\n          actions={\n            <>\n              {config.featureToggles.logsExploreTableVisualisation && (\n                <div className={styles.visualisationType}>\n                  <RadioButtonGroup\n                    className={styles.visualisationTypeRadio}\n                    options={[\n                      {\n                        label: 'Logs',\n                        value: 'logs',\n                        description: 'Show results in logs visualisation',\n                      },\n                      {\n                        label: 'Table',\n                        value: 'table',\n                        description: 'Show results in table visualisation',\n                      },\n                    ]}\n                    size=\"sm\"\n                    value={this.state.visualisationType}\n                    onChange={this.onChangeVisualisation}\n                  />\n                </div>\n              )}\n            </>\n          }\n          loadingState={loading ? LoadingState.Loading : LoadingState.Done}\n        >\n          <div className={styles.stickyNavigation}>\n            {this.state.visualisationType !== 'table' && (\n              <div className={styles.logOptions}>\n                <InlineFieldRow>\n                  <InlineField label=\"Time\" className={styles.horizontalInlineLabel} transparent>\n                    <InlineSwitch\n                      value={showTime}\n                      onChange={this.onChangeTime}\n                      className={styles.horizontalInlineSwitch}\n                      transparent\n                      id={`show-time_${exploreId}`}\n                    />\n                  </InlineField>\n                  <InlineField label=\"Unique labels\" className={styles.horizontalInlineLabel} transparent>\n                    <InlineSwitch\n                      value={showLabels}\n                      onChange={this.onChangeLabels}\n                      className={styles.horizontalInlineSwitch}\n                      transparent\n                      id={`unique-labels_${exploreId}`}\n                    />\n                  </InlineField>\n                  <InlineField label=\"Wrap lines\" className={styles.horizontalInlineLabel} transparent>\n                    <InlineSwitch\n                      value={wrapLogMessage}\n                      onChange={this.onChangeWrapLogMessage}\n                      className={styles.horizontalInlineSwitch}\n                      transparent\n                      id={`wrap-lines_${exploreId}`}\n                    />\n                  </InlineField>\n                  <InlineField label=\"Prettify JSON\" className={styles.horizontalInlineLabel} transparent>\n                    <InlineSwitch\n                      value={prettifyLogMessage}\n                      onChange={this.onChangePrettifyLogMessage}\n                      className={styles.horizontalInlineSwitch}\n                      transparent\n                      id={`prettify_${exploreId}`}\n                    />\n                  </InlineField>\n                  <InlineField label=\"Deduplication\" className={styles.horizontalInlineLabel} transparent>\n                    <RadioButtonGroup\n                      options={DEDUP_OPTIONS.map((dedupType) => ({\n                        label: capitalize(dedupType),\n                        value: dedupType,\n                        description: LogsDedupDescription[dedupType],\n                      }))}\n                      value={dedupStrategy}\n                      onChange={this.onChangeDedup}\n                      className={styles.radioButtons}\n                    />\n                  </InlineField>\n                </InlineFieldRow>\n\n                <div>\n                  <InlineField\n                    label=\"Display results\"\n                    className={styles.horizontalInlineLabel}\n                    transparent\n                    disabled={isFlipping || loading}\n                  >\n                    <RadioButtonGroup\n                      options={[\n                        {\n                          label: 'Newest first',\n                          value: LogsSortOrder.Descending,\n                          description: 'Show results newest to oldest',\n                        },\n                        {\n                          label: 'Oldest first',\n                          value: LogsSortOrder.Ascending,\n                          description: 'Show results oldest to newest',\n                        },\n                      ]}\n                      value={logsSortOrder}\n                      onChange={this.onChangeLogsSortOrder}\n                      className={styles.radioButtons}\n                    />\n                  </InlineField>\n                </div>\n              </div>\n            )}\n            <div ref={this.topLogsRef} />\n            <LogsMetaRow\n              logRows={logRows}\n              meta={logsMeta || []}\n              dedupStrategy={dedupStrategy}\n              dedupCount={dedupCount}\n              hasUnescapedContent={hasUnescapedContent}\n              forceEscape={forceEscape}\n              displayedFields={displayedFields}\n              onEscapeNewlines={this.onEscapeNewlines}\n              clearDetectedFields={this.clearDetectedFields}\n            />\n          </div>\n          <div\n            className={cx(styles.logsSection, this.state.visualisationType === 'table' ? styles.logsTable : undefined)}\n          >\n            {this.state.visualisationType === 'table' && hasData && (\n              <div className={styles.logRows} data-testid=\"logRowsTable\">\n                {/* Width should be full width minus logs navigation and padding */}\n                <LogsTableWrap\n                  logsSortOrder={this.state.logsSortOrder}\n                  range={this.props.range}\n                  splitOpen={this.props.splitOpen}\n                  timeZone={timeZone}\n                  width={width - 80}\n                  logsFrames={this.props.logsFrames ?? []}\n                  onClickFilterLabel={onClickFilterLabel}\n                  onClickFilterOutLabel={onClickFilterOutLabel}\n                  panelState={this.props.panelState?.logs}\n                  theme={theme}\n                  updatePanelState={this.updatePanelState}\n                  datasourceType={this.props.datasourceType}\n                />\n              </div>\n            )}\n            {this.state.visualisationType === 'logs' && hasData && (\n              <div\n                className={config.featureToggles.logsInfiniteScrolling ? styles.scrollableLogRows : styles.logRows}\n                data-testid=\"logRows\"\n                ref={this.onLogsContainerRef}\n              >\n                <InfiniteScroll\n                  loading={loading}\n                  loadMoreLogs={loadMoreLogs}\n                  range={this.props.range}\n                  timeZone={timeZone}\n                  rows={logRows}\n                  scrollElement={this.state.logsContainer}\n                  sortOrder={logsSortOrder}\n                >\n                  <LogRows\n                    logRows={logRows}\n                    deduplicatedRows={dedupedRows}\n                    dedupStrategy={dedupStrategy}\n                    onClickFilterLabel={onClickFilterLabel}\n                    onClickFilterOutLabel={onClickFilterOutLabel}\n                    showContextToggle={showContextToggle}\n                    getRowContextQuery={getRowContextQuery}\n                    showLabels={showLabels}\n                    showTime={showTime}\n                    enableLogDetails={true}\n                    forceEscape={forceEscape}\n                    wrapLogMessage={wrapLogMessage}\n                    prettifyLogMessage={prettifyLogMessage}\n                    timeZone={timeZone}\n                    getFieldLinks={getFieldLinks}\n                    logsSortOrder={logsSortOrder}\n                    displayedFields={displayedFields}\n                    onClickShowField={this.showField}\n                    onClickHideField={this.hideField}\n                    app={CoreApp.Explore}\n                    onLogRowHover={this.onLogRowHover}\n                    onOpenContext={this.onOpenContext}\n                    onPermalinkClick={this.onPermalinkClick}\n                    permalinkedRowId={this.props.panelState?.logs?.id}\n                    scrollIntoView={this.scrollIntoView}\n                    isFilterLabelActive={this.props.isFilterLabelActive}\n                    containerRendered={!!this.state.logsContainer}\n                    onClickFilterValue={this.props.onClickFilterValue}\n                    onClickFilterOutValue={this.props.onClickFilterOutValue}\n                  />\n                </InfiniteScroll>\n              </div>\n            )}\n            {!loading && !hasData && !scanning && (\n              <div className={styles.logRows}>\n                <div className={styles.noData}>\n                  No logs found.\n                  <Button size=\"sm\" variant=\"secondary\" onClick={this.onClickScan}>\n                    Scan for older logs\n                  </Button>\n                </div>\n              </div>\n            )}\n            {scanning && (\n              <div className={styles.logRows}>\n                <div className={styles.noData}>\n                  <span>{scanText}</span>\n                  <Button size=\"sm\" variant=\"secondary\" onClick={this.onClickStopScan}>\n                    Stop scan\n                  </Button>\n                </div>\n              </div>\n            )}\n            <LogsNavigation\n              logsSortOrder={logsSortOrder}\n              visibleRange={navigationRange ?? absoluteRange}\n              absoluteRange={absoluteRange}\n              timeZone={timeZone}\n              onChangeTime={onChangeTime}\n              loading={loading}\n              queries={logsQueries ?? []}\n              scrollToTopLogs={this.scrollToTopLogs}\n              addResultsToCache={addResultsToCache}\n              clearCache={clearCache}\n            />\n          </div>\n        </PanelChrome>\n      </>\n    );\n  }\n}\n\nexport const Logs = withTheme2(UnthemedLogs);\n\nconst getStyles = (theme: GrafanaTheme2, wrapLogMessage: boolean, tableHeight: number) => {\n  return {\n    noData: css({\n      '& > *': {\n        marginLeft: '0.5em',\n      },\n    }),\n    logOptions: css({\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'baseline',\n      flexWrap: 'wrap',\n      backgroundColor: theme.colors.background.primary,\n      padding: `${theme.spacing(1)} ${theme.spacing(2)}`,\n      borderRadius: theme.shape.radius.default,\n      margin: `${theme.spacing(0, 0, 1)}`,\n      border: `1px solid ${theme.colors.border.medium}`,\n    }),\n    headerButton: css({\n      margin: `${theme.spacing(0.5, 0, 0, 1)}`,\n    }),\n    horizontalInlineLabel: css({\n      '& > label': {\n        marginRight: '0',\n      },\n    }),\n    horizontalInlineSwitch: css({\n      padding: `0 ${theme.spacing(1)} 0 0`,\n    }),\n    radioButtons: css({\n      margin: '0',\n    }),\n    logsSection: css({\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    }),\n    logsTable: css({\n      maxHeight: `${tableHeight}px`,\n    }),\n    scrollableLogRows: css({\n      overflowY: 'scroll',\n      width: '100%',\n      maxHeight: '75vh',\n    }),\n    logRows: css({\n      overflowX: `${wrapLogMessage ? 'unset' : 'scroll'}`,\n      overflowY: 'visible',\n      width: '100%',\n    }),\n    visualisationType: css({\n      display: 'flex',\n      flex: '1',\n      justifyContent: 'space-between',\n    }),\n    visualisationTypeRadio: css({\n      margin: `0 0 0 ${theme.spacing(1)}`,\n    }),\n    stickyNavigation: css({\n      overflow: 'visible',\n      ...(config.featureToggles.logsInfiniteScrolling && { marginBottom: '0px' }),\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport memoizeOne from 'memoize-one';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nconst transitionDuration = 500;\n// We add a bit of delay to the transition as another perf optimisation. As at the start we need to render\n// quite a bit of new rows, if we start transition at the same time there can be frame rate drop. This gives time\n// for react to first render them and then do the animation.\nconst transitionDelay = 100;\n\nconst getStyles = memoizeOne(() => {\n  return {\n    logsEnter: css`\n      label: logsEnter;\n      position: absolute;\n      opacity: 0;\n      height: auto;\n      width: 100%;\n    `,\n    logsEnterActive: css`\n      label: logsEnterActive;\n      opacity: 1;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n    logsExit: css`\n      label: logsExit;\n      position: absolute;\n      opacity: 1;\n      height: auto;\n      width: 100%;\n    `,\n    logsExitActive: css`\n      label: logsExitActive;\n      opacity: 0;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n  };\n});\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n};\n\n/**\n * Cross fade transition component that is tied a bit too much to the logs containers so not very useful elsewhere\n * right now.\n */\nexport function LogsCrossFadeTransition(props: Props) {\n  const { visible, children } = props;\n  const styles = getStyles();\n  return (\n    <CSSTransition\n      in={visible}\n      mountOnEnter={true}\n      unmountOnExit={true}\n      timeout={transitionDuration + transitionDelay}\n      classNames={{\n        enter: styles.logsEnter,\n        enterActive: styles.logsEnterActive,\n        exit: styles.logsExit,\n        exitActive: styles.logsExitActive,\n      }}\n    >\n      {children}\n    </CSSTransition>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport {\n  AbsoluteTimeRange,\n  Field,\n  hasLogsContextSupport,\n  hasLogsContextUiSupport,\n  LoadingState,\n  LogRowModel,\n  RawTimeRange,\n  EventBus,\n  SplitOpen,\n  DataFrame,\n  SupplementaryQueryType,\n  DataQueryResponse,\n  LogRowContextOptions,\n  DataSourceWithLogsContextSupport,\n  DataSourceApi,\n  hasToggleableQueryFiltersSupport,\n  DataSourceWithQueryModificationSupport,\n  hasQueryModificationSupport,\n} from '@grafana/data';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { Collapse } from '@grafana/ui';\nimport { MIXED_DATASOURCE_NAME } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { StoreState } from 'app/types';\nimport { ExploreItemState } from 'app/types/explore';\n\nimport { getTimeZone } from '../../profile/state/selectors';\nimport {\n  addResultsToCache,\n  clearCache,\n  loadSupplementaryQueryData,\n  selectIsWaitingForData,\n  setSupplementaryQueryEnabled,\n} from '../state/query';\nimport { updateTimeRange, loadMoreLogs } from '../state/time';\nimport { LiveTailControls } from '../useLiveTailControls';\nimport { getFieldLinksForExplore } from '../utils/links';\n\nimport { LiveLogsWithTheme } from './LiveLogs';\nimport { Logs } from './Logs';\nimport { LogsCrossFadeTransition } from './utils/LogsCrossFadeTransition';\n\ninterface LogsContainerProps extends PropsFromRedux {\n  width: number;\n  exploreId: string;\n  scanRange?: RawTimeRange;\n  syncedTimes: boolean;\n  loadingState: LoadingState;\n  onClickFilterLabel: (key: string, value: string, frame?: DataFrame) => void;\n  onClickFilterOutLabel: (key: string, value: string, frame?: DataFrame) => void;\n  onStartScanning: () => void;\n  onStopScanning: () => void;\n  eventBus: EventBus;\n  splitOpenFn: SplitOpen;\n  scrollElement?: HTMLDivElement;\n  isFilterLabelActive: (key: string, value: string, refId?: string) => Promise<boolean>;\n  onClickFilterValue: (value: string, refId?: string) => void;\n  onClickFilterOutValue: (value: string, refId?: string) => void;\n}\n\ntype DataSourceInstance =\n  | DataSourceApi<DataQuery>\n  | (DataSourceApi<DataQuery> & DataSourceWithLogsContextSupport<DataQuery>)\n  | (DataSourceApi<DataQuery> & DataSourceWithQueryModificationSupport<DataQuery>);\n\ninterface LogsContainerState {\n  dsInstances: Record<string, DataSourceInstance>;\n}\n\nclass LogsContainer extends PureComponent<LogsContainerProps, LogsContainerState> {\n  state: LogsContainerState = {\n    dsInstances: {},\n  };\n\n  componentDidMount() {\n    this.updateDataSourceInstances();\n  }\n\n  componentDidUpdate(prevProps: LogsContainerProps) {\n    if (prevProps.logsQueries !== this.props.logsQueries) {\n      this.updateDataSourceInstances();\n    }\n  }\n\n  private updateDataSourceInstances() {\n    const { logsQueries, datasourceInstance } = this.props;\n    if (!logsQueries || !datasourceInstance) {\n      return;\n    }\n\n    const dsInstances: Record<string, DataSourceInstance> = {};\n\n    // Not in mixed mode.\n    if (datasourceInstance.uid !== MIXED_DATASOURCE_NAME) {\n      logsQueries.forEach(({ refId }) => {\n        dsInstances[refId] = datasourceInstance;\n      });\n      this.setState({ dsInstances });\n      return;\n    }\n\n    // Mixed mode.\n    const dsPromises: Array<Promise<{ ds: DataSourceApi; refId: string }>> = [];\n    for (const query of logsQueries) {\n      if (!query.datasource) {\n        continue;\n      }\n      const mustCheck = !dsInstances[query.refId] || dsInstances[query.refId].uid !== query.datasource.uid;\n      if (mustCheck) {\n        dsPromises.push(\n          new Promise((resolve) => {\n            getDataSourceSrv()\n              .get(query.datasource)\n              .then((ds) => {\n                resolve({ ds, refId: query.refId });\n              });\n          })\n        );\n      }\n    }\n\n    if (!dsPromises.length) {\n      return;\n    }\n\n    Promise.all(dsPromises).then((instances) => {\n      instances.forEach(({ ds, refId }) => {\n        dsInstances[refId] = ds;\n      });\n      this.setState({ dsInstances });\n    });\n  }\n\n  onChangeTime = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  loadMoreLogs = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, loadMoreLogs } = this.props;\n    loadMoreLogs({ exploreId, absoluteRange });\n  };\n\n  private getQuery(\n    logsQueries: DataQuery[] | undefined,\n    row: LogRowModel,\n    datasourceInstance: DataSourceApi<DataQuery> & DataSourceWithLogsContextSupport<DataQuery>\n  ) {\n    // we need to find the query, and we need to be very sure that it's a query\n    // from this datasource\n    return (logsQueries ?? []).find(\n      (q) => q.refId === row.dataFrame.refId && q.datasource != null && q.datasource.type === datasourceInstance.type\n    );\n  }\n\n  getLogRowContext = async (\n    row: LogRowModel,\n    origRow: LogRowModel,\n    options: LogRowContextOptions\n  ): Promise<DataQueryResponse | []> => {\n    const { logsQueries } = this.props;\n\n    if (!origRow.dataFrame.refId || !this.state.dsInstances[origRow.dataFrame.refId]) {\n      return Promise.resolve([]);\n    }\n\n    const ds = this.state.dsInstances[origRow.dataFrame.refId];\n    if (!hasLogsContextSupport(ds)) {\n      return Promise.resolve([]);\n    }\n\n    const query = this.getQuery(logsQueries, origRow, ds);\n    return query ? ds.getLogRowContext(row, options, query) : Promise.resolve([]);\n  };\n\n  getLogRowContextQuery = async (\n    row: LogRowModel,\n    options?: LogRowContextOptions,\n    cacheFilters = true\n  ): Promise<DataQuery | null> => {\n    const { logsQueries } = this.props;\n\n    if (!row.dataFrame.refId || !this.state.dsInstances[row.dataFrame.refId]) {\n      return Promise.resolve(null);\n    }\n\n    const ds = this.state.dsInstances[row.dataFrame.refId];\n    if (!hasLogsContextSupport(ds)) {\n      return Promise.resolve(null);\n    }\n\n    const query = this.getQuery(logsQueries, row, ds);\n    return query && ds.getLogRowContextQuery\n      ? ds.getLogRowContextQuery(row, options, query, cacheFilters)\n      : Promise.resolve(null);\n  };\n\n  getLogRowContextUi = (row: LogRowModel, runContextQuery?: () => void): React.ReactNode => {\n    const { logsQueries } = this.props;\n\n    if (!row.dataFrame.refId || !this.state.dsInstances[row.dataFrame.refId]) {\n      return <></>;\n    }\n\n    const ds = this.state.dsInstances[row.dataFrame.refId];\n    if (!hasLogsContextSupport(ds)) {\n      return <></>;\n    }\n\n    const query = this.getQuery(logsQueries, row, ds);\n    return query && hasLogsContextUiSupport(ds) && ds.getLogRowContextUi ? (\n      ds.getLogRowContextUi(row, runContextQuery, query)\n    ) : (\n      <></>\n    );\n  };\n\n  showContextToggle = (row?: LogRowModel): boolean => {\n    if (!row?.dataFrame.refId || !this.state.dsInstances[row.dataFrame.refId]) {\n      return false;\n    }\n    return hasLogsContextSupport(this.state.dsInstances[row.dataFrame.refId]);\n  };\n\n  getFieldLinks = (field: Field, rowIndex: number, dataFrame: DataFrame) => {\n    const { splitOpenFn, range } = this.props;\n    return getFieldLinksForExplore({ field, rowIndex, splitOpenFn, range, dataFrame });\n  };\n\n  logDetailsFilterAvailable = () => {\n    return Object.values(this.state.dsInstances).some(\n      (ds) => ds?.modifyQuery || hasQueryModificationSupport(ds) || hasToggleableQueryFiltersSupport(ds)\n    );\n  };\n\n  filterValueAvailable = () => {\n    return Object.values(this.state.dsInstances).some(\n      (ds) => hasQueryModificationSupport(ds) && ds?.getSupportedQueryModifications().includes('ADD_STRING_FILTER')\n    );\n  };\n\n  filterOutValueAvailable = () => {\n    return Object.values(this.state.dsInstances).some(\n      (ds) => hasQueryModificationSupport(ds) && ds?.getSupportedQueryModifications().includes('ADD_STRING_FILTER_OUT')\n    );\n  };\n\n  addResultsToCache = () => {\n    this.props.addResultsToCache(this.props.exploreId);\n  };\n\n  clearCache = () => {\n    this.props.clearCache(this.props.exploreId);\n  };\n\n  render() {\n    const {\n      loading,\n      loadingState,\n      logRows,\n      logsMeta,\n      logsSeries,\n      logsQueries,\n      loadSupplementaryQueryData,\n      setSupplementaryQueryEnabled,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      onStartScanning,\n      onStopScanning,\n      absoluteRange,\n      timeZone,\n      visibleRange,\n      scanning,\n      range,\n      width,\n      splitOpenFn,\n      isLive,\n      exploreId,\n      logsVolume,\n      scrollElement,\n    } = this.props;\n\n    if (!logRows) {\n      return null;\n    }\n\n    return (\n      <>\n        <LogsCrossFadeTransition visible={isLive}>\n          <Collapse label=\"Logs\" loading={false} isOpen>\n            <LiveTailControls exploreId={exploreId}>\n              {(controls) => (\n                <LiveLogsWithTheme\n                  logRows={logRows}\n                  timeZone={timeZone}\n                  stopLive={controls.stop}\n                  isPaused={this.props.isPaused}\n                  onPause={controls.pause}\n                  onResume={controls.resume}\n                  onClear={controls.clear}\n                  clearedAtIndex={this.props.clearedAtIndex}\n                />\n              )}\n            </LiveTailControls>\n          </Collapse>\n        </LogsCrossFadeTransition>\n        <LogsCrossFadeTransition visible={!isLive}>\n          <Logs\n            exploreId={exploreId}\n            datasourceType={this.props.datasourceInstance?.type}\n            logRows={logRows}\n            logsMeta={logsMeta}\n            logsSeries={logsSeries}\n            logsVolumeEnabled={logsVolume.enabled}\n            onSetLogsVolumeEnabled={(enabled) =>\n              setSupplementaryQueryEnabled(exploreId, enabled, SupplementaryQueryType.LogsVolume)\n            }\n            logsVolumeData={logsVolume.data}\n            logsQueries={logsQueries}\n            width={width}\n            splitOpen={splitOpenFn}\n            loading={loading}\n            loadingState={loadingState}\n            loadLogsVolumeData={() => loadSupplementaryQueryData(exploreId, SupplementaryQueryType.LogsVolume)}\n            onChangeTime={this.onChangeTime}\n            loadMoreLogs={this.loadMoreLogs}\n            onClickFilterLabel={this.logDetailsFilterAvailable() ? onClickFilterLabel : undefined}\n            onClickFilterOutLabel={this.logDetailsFilterAvailable() ? onClickFilterOutLabel : undefined}\n            onStartScanning={onStartScanning}\n            onStopScanning={onStopScanning}\n            absoluteRange={absoluteRange}\n            visibleRange={visibleRange}\n            timeZone={timeZone}\n            scanning={scanning}\n            scanRange={range.raw}\n            showContextToggle={this.showContextToggle}\n            getRowContext={this.getLogRowContext}\n            getRowContextQuery={this.getLogRowContextQuery}\n            getLogRowContextUi={this.getLogRowContextUi}\n            getFieldLinks={this.getFieldLinks}\n            addResultsToCache={this.addResultsToCache}\n            clearCache={this.clearCache}\n            eventBus={this.props.eventBus}\n            panelState={this.props.panelState}\n            logsFrames={this.props.logsFrames}\n            scrollElement={scrollElement}\n            isFilterLabelActive={this.logDetailsFilterAvailable() ? this.props.isFilterLabelActive : undefined}\n            range={range}\n            onClickFilterValue={this.filterValueAvailable() ? this.props.onClickFilterValue : undefined}\n            onClickFilterOutValue={this.filterOutValueAvailable() ? this.props.onClickFilterOutValue : undefined}\n          />\n        </LogsCrossFadeTransition>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore.panes[exploreId]!;\n  const {\n    logsResult,\n    scanning,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    clearedAtIndex,\n    range,\n    absoluteRange,\n    supplementaryQueries,\n  } = item;\n  const loading = selectIsWaitingForData(exploreId)(state);\n  const panelState = item.panelsState;\n  const timeZone = getTimeZone(state.user);\n  const logsVolume = supplementaryQueries[SupplementaryQueryType.LogsVolume];\n\n  return {\n    loading,\n    logRows: logsResult?.rows,\n    logsMeta: logsResult?.meta,\n    logsSeries: logsResult?.series,\n    logsQueries: logsResult?.queries,\n    visibleRange: logsResult?.visibleRange,\n    scanning,\n    timeZone,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    clearedAtIndex,\n    range,\n    absoluteRange,\n    logsVolume,\n    panelState,\n    logsFrames: item.queryResponse.logsFrames,\n  };\n}\n\nconst mapDispatchToProps = {\n  updateTimeRange,\n  loadMoreLogs,\n  addResultsToCache,\n  clearCache,\n  loadSupplementaryQueryData,\n  setSupplementaryQueryEnabled,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(LogsContainer);\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport {\n  DataQueryResponse,\n  DataSourceApi,\n  GrafanaTheme2,\n  hasSupplementaryQuerySupport,\n  LoadingState,\n  LogsDedupStrategy,\n  SplitOpen,\n  SupplementaryQueryType,\n} from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { DataQuery, TimeZone } from '@grafana/schema';\nimport { Button, Collapse, Icon, Tooltip, useStyles2 } from '@grafana/ui';\nimport store from 'app/core/store';\n\nimport { LogRows } from '../../logs/components/LogRows';\nimport { dataFrameToLogsModel } from '../../logs/logsModel';\nimport { SupplementaryResultError } from '../SupplementaryResultError';\n\nimport { SETTINGS_KEYS } from './utils/logs';\n\ntype Props = {\n  queryResponse: DataQueryResponse | undefined;\n  enabled: boolean;\n  timeZone: TimeZone;\n  queries: DataQuery[];\n  datasourceInstance: DataSourceApi | null | undefined;\n  splitOpen: SplitOpen;\n  setLogsSampleEnabled: (enabled: boolean) => void;\n};\n\nexport function LogsSamplePanel(props: Props) {\n  const { queryResponse, timeZone, enabled, setLogsSampleEnabled, datasourceInstance, queries, splitOpen } = props;\n\n  const styles = useStyles2(getStyles);\n  const onToggleLogsSampleCollapse = (isOpen: boolean) => {\n    setLogsSampleEnabled(isOpen);\n    reportInteraction('grafana_explore_logs_sample_toggle_clicked', {\n      datasourceType: datasourceInstance?.type ?? 'unknown',\n      type: isOpen ? 'open' : 'close',\n    });\n  };\n\n  const OpenInSplitViewButton = () => {\n    if (!datasourceInstance) {\n      return null;\n    }\n    if (!hasSupplementaryQuerySupport(datasourceInstance, SupplementaryQueryType.LogsSample)) {\n      return null;\n    }\n\n    const logSampleQueries = queries\n      .map((query) => datasourceInstance.getSupplementaryQuery({ type: SupplementaryQueryType.LogsSample }, query))\n      .filter((query): query is DataQuery => !!query);\n\n    if (!logSampleQueries.length) {\n      return null;\n    }\n\n    const onSplitOpen = () => {\n      splitOpen({ queries: logSampleQueries, datasourceUid: datasourceInstance.uid });\n      reportInteraction('grafana_explore_logs_sample_split_button_clicked', {\n        datasourceType: datasourceInstance?.type ?? 'unknown',\n        queriesCount: logSampleQueries.length,\n      });\n    };\n\n    return (\n      <Button size=\"sm\" className={styles.logSamplesButton} onClick={onSplitOpen}>\n        Open logs in split view\n      </Button>\n    );\n  };\n\n  let LogsSamplePanelContent: JSX.Element | null;\n\n  if (queryResponse === undefined) {\n    LogsSamplePanelContent = null;\n  } else if (queryResponse.error !== undefined) {\n    LogsSamplePanelContent = (\n      <SupplementaryResultError error={queryResponse.error} title=\"Failed to load logs sample for this query\" />\n    );\n  } else if (queryResponse.state === LoadingState.Loading) {\n    LogsSamplePanelContent = <span>Logs sample is loading...</span>;\n  } else if (queryResponse.data.length === 0 || queryResponse.data.every((frame) => frame.length === 0)) {\n    LogsSamplePanelContent = <span>No logs sample data.</span>;\n  } else {\n    const logs = dataFrameToLogsModel(queryResponse.data);\n    LogsSamplePanelContent = (\n      <>\n        <OpenInSplitViewButton />\n        <div className={styles.logContainer}>\n          <LogRows\n            logRows={logs.rows}\n            dedupStrategy={LogsDedupStrategy.none}\n            showLabels={store.getBool(SETTINGS_KEYS.showLabels, false)}\n            showTime={store.getBool(SETTINGS_KEYS.showTime, true)}\n            wrapLogMessage={store.getBool(SETTINGS_KEYS.wrapLogMessage, true)}\n            prettifyLogMessage={store.getBool(SETTINGS_KEYS.prettifyLogMessage, false)}\n            timeZone={timeZone}\n            enableLogDetails={true}\n          />\n        </div>\n      </>\n    );\n  }\n\n  return queryResponse?.state !== LoadingState.NotStarted ? (\n    <Collapse\n      label={\n        <div>\n          Logs sample\n          <Tooltip content=\"Show log lines that contributed to visualized metrics\">\n            <Icon name=\"info-circle\" className={styles.infoTooltip} />\n          </Tooltip>\n        </div>\n      }\n      isOpen={enabled}\n      collapsible={true}\n      onToggle={onToggleLogsSampleCollapse}\n    >\n      {LogsSamplePanelContent}\n    </Collapse>\n  ) : null;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    logSamplesButton: css`\n      position: absolute;\n      top: ${theme.spacing(1)};\n      right: ${theme.spacing(1)};\n    `,\n    logContainer: css`\n      overflow: scroll;\n    `,\n    infoTooltip: css`\n      margin-left: ${theme.spacing(1)};\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { useStyles2, PanelContainer } from '@grafana/ui';\n\nexport const NoData = () => {\n  const css = useStyles2(getStyles);\n  return (\n    <>\n      <PanelContainer data-testid=\"explore-no-data\" className={css.wrapper}>\n        <span className={css.message}>{'No data'}</span>\n      </PanelContainer>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css({\n    label: 'no-data-card',\n    padding: theme.spacing(3),\n    background: theme.colors.background.primary,\n    borderRadius: theme.shape.radius.default,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n  }),\n  message: css({\n    fontSize: theme.typography.h2.fontSize,\n    padding: theme.spacing(4),\n    color: theme.colors.text.disabled,\n  }),\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { LinkButton, CallToActionCard, Icon, useStyles2 } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nfunction getCardStyles(theme: GrafanaTheme2) {\n  return css({\n    maxWidth: `${theme.breakpoints.values.lg}px`,\n    marginTop: theme.spacing(2),\n    alignSelf: 'center',\n  });\n}\n\nexport const NoDataSourceCallToAction = () => {\n  const cardStyles = useStyles2(getCardStyles);\n\n  const canCreateDataSource =\n    contextSrv.hasPermission(AccessControlAction.DataSourcesCreate) &&\n    contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n\n  const message =\n    'Explore requires at least one data source. Once you have added a data source, you can query it here.';\n  const footer = (\n    <>\n      <Icon name=\"rocket\" />\n      <> ProTip: You can also define data sources through configuration files. </>\n      <a\n        href=\"http://docs.grafana.org/administration/provisioning/?utm_source=explore#data-sources\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"text-link\"\n      >\n        Learn more\n      </a>\n    </>\n  );\n\n  const ctaElement = (\n    <LinkButton size=\"lg\" href=\"datasources/new\" icon=\"database\" disabled={!canCreateDataSource}>\n      Add data source\n    </LinkButton>\n  );\n\n  return <CallToActionCard callToActionElement={ctaElement} className={cardStyles} footer={footer} message={message} />;\n};\n","import { css } from '@emotion/css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useToggle, useWindowSize } from 'react-use';\n\nimport { applyFieldOverrides, DataFrame, GrafanaTheme2, SplitOpen } from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { useStyles2, useTheme2, PanelChrome } from '@grafana/ui';\n\nimport { NodeGraph } from '../../../plugins/panel/nodeGraph';\nimport { useCategorizeFrames } from '../../../plugins/panel/nodeGraph/useCategorizeFrames';\nimport { StoreState } from '../../../types';\nimport { useLinks } from '../utils/links';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  warningText: css`\n    label: warningText;\n    display: flex;\n    align-items: center;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    color: ${theme.colors.text.secondary};\n  `,\n});\n\ninterface OwnProps {\n  // Edges and Nodes are separate frames\n  dataFrames: DataFrame[];\n  exploreId: string;\n  // When showing the node graph together with trace view we do some changes so it works better.\n  withTraceView?: boolean;\n  datasourceType: string;\n  splitOpenFn: SplitOpen;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport function UnconnectedNodeGraphContainer(props: Props) {\n  const { dataFrames, range, splitOpenFn, withTraceView, datasourceType } = props;\n  const getLinks = useLinks(range, splitOpenFn);\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  // This is implicit dependency that is needed for links to work. At some point when replacing variables in the link\n  // it requires field to have a display property which is added by the overrides even though we don't add any field\n  // overrides in explore.\n  const frames = applyFieldOverrides({\n    fieldConfig: {\n      defaults: {},\n      overrides: [],\n    },\n    data: dataFrames,\n    // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n    replaceVariables: (value) => value,\n    theme,\n  });\n\n  const { nodes } = useCategorizeFrames(frames);\n  const [collapsed, toggleCollapsed] = useToggle(true);\n\n  const toggled = () => {\n    toggleCollapsed();\n    reportInteraction('grafana_traces_node_graph_panel_clicked', {\n      datasourceType: datasourceType,\n      grafana_version: config.buildInfo.version,\n      isExpanded: !open,\n    });\n  };\n\n  // Calculate node graph height based on window and top position, with some padding\n  const { height: windowHeight } = useWindowSize();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [top, setTop] = useState(250);\n  useEffect(() => {\n    if (containerRef.current) {\n      const { top } = containerRef.current.getBoundingClientRect();\n      setTop(top);\n    }\n  }, [containerRef]);\n  const height = windowHeight - top - 32;\n\n  const countWarning =\n    withTraceView && nodes[0]?.length > 1000 ? (\n      <span className={styles.warningText}> ({nodes[0].length} nodes, can be slow to load)</span>\n    ) : null;\n\n  return (\n    <PanelChrome\n      title={`Node graph`}\n      titleItems={countWarning}\n      // We allow collapsing this only when it is shown together with trace view.\n      collapsible={!!withTraceView}\n      collapsed={withTraceView ? collapsed : false}\n      onToggleCollapse={withTraceView ? toggled : undefined}\n    >\n      <div\n        ref={containerRef}\n        style={\n          withTraceView\n            ? { height: 500 }\n            : {\n                minHeight: 600,\n                height,\n              }\n        }\n      >\n        <NodeGraph dataFrames={frames} getLinks={getLinks} />\n      </div>\n    </PanelChrome>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: OwnProps) {\n  return {\n    range: state.explore.panes[exploreId]!.range,\n  };\n}\n\nconst connector = connect(mapStateToProps, {});\nexport const NodeGraphContainer = connector(UnconnectedNodeGraphContainer);\n","import { createSelector } from '@reduxjs/toolkit';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { CoreApp } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { getNextRefIdChar } from 'app/core/utils/query';\nimport { useDispatch, useSelector } from 'app/types';\n\nimport { getDatasourceSrv } from '../plugins/datasource_srv';\nimport { QueryEditorRows } from '../query/components/QueryEditorRows';\n\nimport { ContentOutlineItem } from './ContentOutline/ContentOutlineItem';\nimport { changeQueries, runQueries } from './state/query';\nimport { getExploreItemSelector } from './state/selectors';\n\ninterface Props {\n  exploreId: string;\n}\n\nconst makeSelectors = (exploreId: string) => {\n  const exploreItemSelector = getExploreItemSelector(exploreId);\n  return {\n    getQueries: createSelector(exploreItemSelector, (s) => s!.queries),\n    getQueryResponse: createSelector(exploreItemSelector, (s) => s!.queryResponse),\n    getHistory: createSelector(exploreItemSelector, (s) => s!.history),\n    getEventBridge: createSelector(exploreItemSelector, (s) => s!.eventBridge),\n    getDatasourceInstanceSettings: createSelector(\n      exploreItemSelector,\n      (s) => getDatasourceSrv().getInstanceSettings(s!.datasourceInstance?.uid)!\n    ),\n  };\n};\n\nexport const QueryRows = ({ exploreId }: Props) => {\n  const dispatch = useDispatch();\n  const { getQueries, getDatasourceInstanceSettings, getQueryResponse, getHistory, getEventBridge } = useMemo(\n    () => makeSelectors(exploreId),\n    [exploreId]\n  );\n\n  const queries = useSelector(getQueries);\n  const dsSettings = useSelector(getDatasourceInstanceSettings);\n  const queryResponse = useSelector(getQueryResponse);\n  const history = useSelector(getHistory);\n  const eventBridge = useSelector(getEventBridge);\n\n  const onRunQueries = useCallback(() => {\n    dispatch(runQueries({ exploreId }));\n  }, [dispatch, exploreId]);\n\n  const onChange = useCallback(\n    (newQueries: DataQuery[]) => {\n      dispatch(changeQueries({ exploreId, queries: newQueries }));\n    },\n    [dispatch, exploreId]\n  );\n\n  const onAddQuery = useCallback(\n    (query: DataQuery) => {\n      onChange([...queries, { ...query, refId: getNextRefIdChar(queries) }]);\n    },\n    [onChange, queries]\n  );\n\n  const onQueryCopied = () => {\n    reportInteraction('grafana_explore_query_row_copy');\n  };\n\n  const onQueryRemoved = () => {\n    reportInteraction('grafana_explore_query_row_remove');\n  };\n\n  const onQueryToggled = (queryStatus?: boolean) => {\n    reportInteraction('grafana_query_row_toggle', queryStatus === undefined ? {} : { queryEnabled: queryStatus });\n  };\n\n  return (\n    <QueryEditorRows\n      dsSettings={dsSettings}\n      queries={queries}\n      onQueriesChange={onChange}\n      onAddQuery={onAddQuery}\n      onRunQueries={onRunQueries}\n      onQueryCopied={onQueryCopied}\n      onQueryRemoved={onQueryRemoved}\n      onQueryToggled={onQueryToggled}\n      data={queryResponse}\n      app={CoreApp.Explore}\n      history={history}\n      eventBus={eventBridge}\n      queryRowWrapper={(children, refId) => (\n        <ContentOutlineItem\n          title={refId}\n          icon=\"arrow\"\n          key={refId}\n          panelId=\"Queries\"\n          customTopOffset={-10}\n          level=\"child\"\n        >\n          {children}\n        </ContentOutlineItem>\n      )}\n    />\n  );\n};\n","import { css } from '@emotion/css';\nimport { cloneDeep } from 'lodash';\nimport React, { useEffect, useId, useRef, useState } from 'react';\nimport { useWindowSize } from 'react-use';\nimport { VariableSizeList as List } from 'react-window';\n\nimport { DataFrame, Field as DataFrameField } from '@grafana/data/';\nimport { reportInteraction } from '@grafana/runtime/src';\nimport { Field, Switch } from '@grafana/ui/';\n\nimport { ItemLabels } from './ItemLabels';\nimport RawListItem from './RawListItem';\nimport {\n  getRawPrometheusListItemsFromDataFrame,\n  RawPrometheusListItemEmptyValue,\n} from './utils/getRawPrometheusListItemsFromDataFrame';\n\nexport type instantQueryRawVirtualizedListData = { Value: string; __name__: string; [index: string]: string };\n\nexport interface RawListContainerProps {\n  tableResult: DataFrame;\n}\n\nconst styles = {\n  wrapper: css`\n    height: 100%;\n    overflow: scroll;\n  `,\n  switchWrapper: css`\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 0;\n  `,\n  switchLabel: css`\n    margin-left: 15px;\n    margin-bottom: 0;\n  `,\n  switch: css`\n    margin-left: 10px;\n  `,\n  resultCount: css`\n    margin-bottom: 4px;\n  `,\n  header: css`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px 0;\n    font-size: 12px;\n    line-height: 1.25;\n  `,\n};\n\nconst mobileWidthThreshold = 480;\nconst numberOfColumnsBeforeExpandedViewIsDefault = 2;\n\n/**\n * The container that provides the virtualized list to the child components\n * @param props\n * @constructor\n */\nconst RawListContainer = (props: RawListContainerProps) => {\n  const { tableResult } = props;\n  const dataFrame = cloneDeep(tableResult);\n  const listRef = useRef<List | null>(null);\n\n  const valueLabels = dataFrame.fields.filter((field) => field.name.includes('Value'));\n  const items = getRawPrometheusListItemsFromDataFrame(dataFrame);\n  const { width } = useWindowSize();\n  const [isExpandedView, setIsExpandedView] = useState(\n    width <= mobileWidthThreshold || valueLabels.length > numberOfColumnsBeforeExpandedViewIsDefault\n  );\n\n  const onContentClick = () => {\n    setIsExpandedView(!isExpandedView);\n    const props = {\n      isExpanded: !isExpandedView,\n    };\n    reportInteraction('grafana_explore_prometheus_instant_query_ui_raw_toggle_expand', props);\n  };\n\n  useEffect(() => {\n    // After the expanded view has updated, tell the list to re-render\n    listRef.current?.resetAfterIndex(0, true);\n  }, [isExpandedView]);\n\n  const calculateInitialHeight = (length: number): number => {\n    const maxListHeight = 600;\n    const shortListLength = 10;\n\n    if (length < shortListLength) {\n      let sum = 0;\n      for (let i = 0; i < length; i++) {\n        sum += getListItemHeight(i, true);\n      }\n\n      return Math.min(maxListHeight, sum);\n    }\n\n    return maxListHeight;\n  };\n\n  const getListItemHeight = (itemIndex: number, isExpandedView: boolean) => {\n    const singleLineHeight = 32;\n    const additionalLineHeight = 22;\n    if (!isExpandedView) {\n      return singleLineHeight;\n    }\n    const item = items[itemIndex];\n\n    // Height of 1.5 lines, plus the number of non-value attributes times the height of additional lines\n    return 1.5 * singleLineHeight + (Object.keys(item).length - valueLabels.length) * additionalLineHeight;\n  };\n\n  const switchId = `isExpandedView ${useId()}`;\n\n  return (\n    <section>\n      <header className={styles.header}>\n        <Field className={styles.switchWrapper} label={`Expand results`} htmlFor={'isExpandedView'}>\n          <div className={styles.switch}>\n            <Switch onChange={onContentClick} id={switchId} value={isExpandedView} label={`Expand results`} />\n          </div>\n        </Field>\n\n        <div className={styles.resultCount}>Result series: {items.length}</div>\n      </header>\n\n      <div role={'table'}>\n        {\n          <>\n            {/* Show the value headings above all the values, but only if we're in the contracted view */}\n            {valueLabels.length > 1 && !isExpandedView && (\n              <ItemLabels valueLabels={valueLabels} expanded={isExpandedView} />\n            )}\n            <List\n              ref={listRef}\n              itemCount={items.length}\n              className={styles.wrapper}\n              itemSize={(index) => getListItemHeight(index, isExpandedView)}\n              height={calculateInitialHeight(items.length)}\n              width=\"100%\"\n            >\n              {({ index, style }) => {\n                let filteredValueLabels: DataFrameField[] | undefined;\n                if (isExpandedView) {\n                  filteredValueLabels = valueLabels.filter((valueLabel) => {\n                    const itemWithValue = items[index][valueLabel.name];\n                    return itemWithValue && itemWithValue !== RawPrometheusListItemEmptyValue;\n                  });\n                }\n\n                return (\n                  <div role=\"row\" style={{ ...style, overflow: 'hidden' }}>\n                    <RawListItem\n                      isExpandedView={isExpandedView}\n                      valueLabels={filteredValueLabels}\n                      totalNumberOfValues={valueLabels.length}\n                      listKey={items[index].__name__}\n                      listItemData={items[index]}\n                    />\n                  </div>\n                );\n              }}\n            </List>\n          </>\n        }\n      </div>\n    </section>\n  );\n};\n\nexport default RawListContainer;\n","import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { applyFieldOverrides, DataFrame, SelectableValue, SplitOpen } from '@grafana/data';\nimport { getTemplateSrv, reportInteraction } from '@grafana/runtime';\nimport { TimeZone } from '@grafana/schema';\nimport { RadioButtonGroup, Table, AdHocFilterItem, PanelChrome } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { PANEL_BORDER } from 'app/core/constants';\nimport { StoreState, TABLE_RESULTS_STYLE } from 'app/types';\nimport { ExploreItemState, TABLE_RESULTS_STYLES, TableResultsStyle } from 'app/types/explore';\n\nimport { MetaInfoText } from '../MetaInfoText';\nimport RawListContainer from '../PrometheusListView/RawListContainer';\nimport { exploreDataLinkPostProcessorFactory } from '../utils/links';\n\ninterface RawPrometheusContainerProps {\n  ariaLabel?: string;\n  exploreId: string;\n  width: number;\n  timeZone: TimeZone;\n  onCellFilterAdded?: (filter: AdHocFilterItem) => void;\n  showRawPrometheus?: boolean;\n  splitOpenFn: SplitOpen;\n}\n\ninterface PrometheusContainerState {\n  resultsStyle: TableResultsStyle;\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: RawPrometheusContainerProps) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore.panes[exploreId]!;\n  const { tableResult, rawPrometheusResult, range, queryResponse } = item;\n  const rawPrometheusFrame: DataFrame[] = rawPrometheusResult ? [rawPrometheusResult] : [];\n  const result = (tableResult?.length ?? 0) > 0 && rawPrometheusResult ? tableResult : rawPrometheusFrame;\n  const loading = queryResponse.state;\n\n  return { loading, tableResult: result, range };\n}\n\nconst connector = connect(mapStateToProps, {});\n\ntype Props = RawPrometheusContainerProps & ConnectedProps<typeof connector>;\n\nexport class RawPrometheusContainer extends PureComponent<Props, PrometheusContainerState> {\n  constructor(props: Props) {\n    super(props);\n\n    // If resultsStyle is undefined we won't render the toggle, and the default table will be rendered\n    if (props.showRawPrometheus) {\n      this.state = {\n        resultsStyle: TABLE_RESULTS_STYLE.raw,\n      };\n    }\n  }\n\n  onChangeResultsStyle = (resultsStyle: TableResultsStyle) => {\n    this.setState({ resultsStyle });\n  };\n\n  getTableHeight() {\n    const { tableResult } = this.props;\n\n    if (!tableResult || tableResult.length === 0) {\n      return 200;\n    }\n\n    // tries to estimate table height\n    return Math.max(Math.min(600, tableResult[0].length * 35) + 35);\n  }\n\n  renderLabel = () => {\n    const spacing = css({\n      display: 'flex',\n      justifyContent: 'space-between',\n      flex: '1',\n    });\n    const ALL_GRAPH_STYLE_OPTIONS: Array<SelectableValue<TableResultsStyle>> = TABLE_RESULTS_STYLES.map((style) => ({\n      value: style,\n      // capital-case it and switch `_` to ` `\n      label: style[0].toUpperCase() + style.slice(1).replace(/_/, ' '),\n    }));\n\n    return (\n      <div className={spacing}>\n        <RadioButtonGroup\n          onClick={() => {\n            const props = {\n              state:\n                this.state.resultsStyle === TABLE_RESULTS_STYLE.table\n                  ? TABLE_RESULTS_STYLE.raw\n                  : TABLE_RESULTS_STYLE.table,\n            };\n            reportInteraction('grafana_explore_prometheus_instant_query_ui_toggle_clicked', props);\n          }}\n          size=\"sm\"\n          options={ALL_GRAPH_STYLE_OPTIONS}\n          value={this.state?.resultsStyle}\n          onChange={this.onChangeResultsStyle}\n        />\n      </div>\n    );\n  };\n\n  render() {\n    const { loading, onCellFilterAdded, tableResult, width, splitOpenFn, range, ariaLabel, timeZone } = this.props;\n    const height = this.getTableHeight();\n    const tableWidth = width - config.theme.panelPadding * 2 - PANEL_BORDER;\n\n    let dataFrames = tableResult;\n\n    const dataLinkPostProcessor = exploreDataLinkPostProcessorFactory(splitOpenFn, range);\n\n    if (dataFrames?.length) {\n      dataFrames = applyFieldOverrides({\n        data: dataFrames,\n        timeZone,\n        theme: config.theme2,\n        replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n        fieldConfig: {\n          defaults: {},\n          overrides: [],\n        },\n        dataLinkPostProcessor,\n      });\n    }\n\n    const frames = dataFrames?.filter(\n      (frame: DataFrame | undefined): frame is DataFrame => !!frame && frame.length !== 0\n    );\n\n    const title = this.state.resultsStyle === TABLE_RESULTS_STYLE.raw ? 'Raw' : 'Table';\n    const label = this.state?.resultsStyle !== undefined ? this.renderLabel() : 'Table';\n\n    // Render table as default if resultsStyle is not set.\n    const renderTable = !this.state?.resultsStyle || this.state?.resultsStyle === TABLE_RESULTS_STYLE.table;\n\n    return (\n      <PanelChrome title={title} actions={label} loadingState={loading}>\n        {frames?.length && (\n          <>\n            {renderTable && (\n              <Table\n                ariaLabel={ariaLabel}\n                data={frames[0]}\n                width={tableWidth}\n                height={height}\n                onCellFilterAdded={onCellFilterAdded}\n              />\n            )}\n            {this.state?.resultsStyle === TABLE_RESULTS_STYLE.raw && <RawListContainer tableResult={frames[0]} />}\n          </>\n        )}\n        {!frames?.length && <MetaInfoText metaItems={[{ value: '0 series returned' }]} />}\n      </PanelChrome>\n    );\n  }\n}\n\nexport default connector(RawPrometheusContainer);\n","import React, { CSSProperties } from 'react';\nimport Transition, { ExitHandler } from 'react-transition-group/Transition';\n\ninterface Props {\n  duration: number;\n  children: JSX.Element;\n  in: boolean;\n  unmountOnExit?: boolean;\n  onExited?: ExitHandler<HTMLDivElement>;\n}\n\nexport const FadeIn = (props: Props) => {\n  const defaultStyle: CSSProperties = {\n    transition: `opacity ${props.duration}ms linear`,\n    opacity: 0,\n  };\n\n  const transitionStyles: { [str: string]: CSSProperties } = {\n    exited: { opacity: 0, display: 'none' },\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n    exiting: { opacity: 0 },\n  };\n\n  return (\n    <Transition\n      in={props.in}\n      timeout={props.duration}\n      unmountOnExit={props.unmountOnExit || false}\n      onExited={props.onExited}\n    >\n      {(state) => (\n        <div\n          style={{\n            ...defaultStyle,\n            ...transitionStyles[state],\n          }}\n        >\n          {props.children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n","import React from 'react';\n\nimport { DataQueryError } from '@grafana/data';\nimport { Alert } from '@grafana/ui';\nimport { FadeIn } from 'app/core/components/Animations/FadeIn';\n\nexport interface ErrorContainerProps {\n  queryError?: DataQueryError;\n}\n\nexport const ErrorContainer = (props: ErrorContainerProps) => {\n  const { queryError } = props;\n  const showError = queryError ? true : false;\n  const duration = showError ? 100 : 10;\n  const title = queryError ? 'Query error' : 'Unknown error';\n  const message = queryError?.message || queryError?.data?.message || null;\n\n  return (\n    <FadeIn in={showError} duration={duration}>\n      <Alert severity=\"error\" title={title} topSpacing={2}>\n        {message}\n      </Alert>\n    </FadeIn>\n  );\n};\n","import React from 'react';\n\nimport { LoadingState } from '@grafana/data';\nimport { useSelector } from 'app/types';\n\nimport { ErrorContainer } from './ErrorContainer';\n\ninterface Props {\n  exploreId: string;\n}\nexport function ResponseErrorContainer(props: Props) {\n  const queryResponse = useSelector((state) => state.explore.panes[props.exploreId]!.queryResponse);\n  const queryError = queryResponse?.state === LoadingState.Error ? queryResponse?.error : undefined;\n\n  // Errors with ref ids are shown below the corresponding query\n  if (queryError?.refId) {\n    return null;\n  }\n\n  return <ErrorContainer queryError={queryError} />;\n}\n","import { css, cx } from '@emotion/css';\nimport React, { useCallback, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useAsync } from 'react-use';\n\nimport { GrafanaTheme2, DataSourceApi } from '@grafana/data';\nimport { config, getDataSourceSrv, reportInteraction, getAppEvents } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { TextArea, Button, IconButton, useStyles2, LoadingPlaceholder } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { Trans, t } from 'app/core/internationalization';\nimport { copyStringToClipboard } from 'app/core/utils/explore';\nimport { createUrlFromRichHistory, createQueryText } from 'app/core/utils/richHistory';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { changeDatasource } from 'app/features/explore/state/datasource';\nimport { starHistoryItem, commentHistoryItem, deleteHistoryItem } from 'app/features/explore/state/history';\nimport { setQueries } from 'app/features/explore/state/query';\nimport { dispatch } from 'app/store/store';\nimport { StoreState } from 'app/types';\nimport { ShowConfirmModalEvent } from 'app/types/events';\nimport { RichHistoryQuery } from 'app/types/explore';\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  const { datasourceInstance } = explore.panes[exploreId]!;\n  return {\n    exploreId,\n    datasourceInstance,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  deleteHistoryItem,\n  commentHistoryItem,\n  starHistoryItem,\n  setQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps<T extends DataQuery = DataQuery> {\n  queryHistoryItem: RichHistoryQuery<T>;\n}\n\nexport type Props<T extends DataQuery = DataQuery> = ConnectedProps<typeof connector> & OwnProps<T>;\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  /* Hard-coded value so all buttons and icons on right side of card are aligned */\n  const rightColumnWidth = '240px';\n  const rightColumnContentWidth = '170px';\n\n  /* If datasource was removed, card will have inactive color */\n  const cardColor = theme.colors.background.secondary;\n\n  return {\n    queryCard: css`\n      position: relative;\n      display: flex;\n      flex-direction: column;\n      border: 1px solid ${theme.colors.border.weak};\n      margin: ${theme.spacing(1)} 0;\n      background-color: ${cardColor};\n      border-radius: ${theme.shape.radius.default};\n      .starred {\n        color: ${theme.v1.palette.orange};\n      }\n    `,\n    cardRow: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing(1)};\n      border-bottom: none;\n      :first-of-type {\n        border-bottom: 1px solid ${theme.colors.border.weak};\n        padding: ${theme.spacing(0.5, 1)};\n      }\n      img {\n        height: ${theme.typography.fontSize}px;\n        max-width: ${theme.typography.fontSize}px;\n        margin-right: ${theme.spacing(1)};\n      }\n    `,\n    queryActionButtons: css`\n      max-width: ${rightColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      font-size: ${theme.typography.size.base};\n      button {\n        margin-left: ${theme.spacing(1)};\n      }\n    `,\n    queryContainer: css`\n      font-weight: ${theme.typography.fontWeightMedium};\n      width: calc(100% - ${rightColumnWidth});\n    `,\n    updateCommentContainer: css`\n      width: calc(100% + ${rightColumnWidth});\n      margin-top: ${theme.spacing(1)};\n    `,\n    comment: css`\n      overflow-wrap: break-word;\n      font-size: ${theme.typography.bodySmall.fontSize};\n      font-weight: ${theme.typography.fontWeightRegular};\n      margin-top: ${theme.spacing(0.5)};\n    `,\n    commentButtonRow: css`\n      > * {\n        margin-top: ${theme.spacing(1)};\n        margin-right: ${theme.spacing(1)};\n      }\n    `,\n    textArea: css`\n      width: 100%;\n    `,\n    runButton: css`\n      max-width: ${rightColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      button {\n        height: auto;\n        padding: ${theme.spacing(0.5, 2)};\n        line-height: 1.4;\n        span {\n          white-space: normal !important;\n        }\n      }\n    `,\n    loader: css`\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-color: ${theme.colors.background.secondary};\n    `,\n  };\n};\n\nexport function RichHistoryCard(props: Props) {\n  const {\n    queryHistoryItem,\n    commentHistoryItem,\n    starHistoryItem,\n    deleteHistoryItem,\n    changeDatasource,\n    exploreId,\n    datasourceInstance,\n    setQueries,\n  } = props;\n\n  const [activeUpdateComment, setActiveUpdateComment] = useState(false);\n  const [comment, setComment] = useState<string | undefined>(queryHistoryItem.comment);\n  const { value: historyCardData, loading } = useAsync(async () => {\n    let datasourceInstance: DataSourceApi | undefined;\n    try {\n      datasourceInstance = await getDataSourceSrv().get(queryHistoryItem.datasourceUid);\n    } catch (e) {}\n\n    return {\n      datasourceInstance,\n      queries: await Promise.all(\n        queryHistoryItem.queries.map(async (query) => {\n          let datasource;\n          if (datasourceInstance?.meta.mixed) {\n            try {\n              datasource = await getDataSourceSrv().get(query.datasource);\n            } catch (e) {}\n          } else {\n            datasource = datasourceInstance;\n          }\n\n          return {\n            query,\n            datasource,\n          };\n        })\n      ),\n    };\n  }, [queryHistoryItem.datasourceUid, queryHistoryItem.queries]);\n\n  const styles = useStyles2(getStyles);\n\n  const onRunQuery = async () => {\n    const queriesToRun = queryHistoryItem.queries;\n    const differentDataSource = queryHistoryItem.datasourceUid !== datasourceInstance?.uid;\n    if (differentDataSource) {\n      await changeDatasource({ exploreId, datasource: queryHistoryItem.datasourceUid });\n    }\n    setQueries(exploreId, queriesToRun);\n\n    reportInteraction('grafana_explore_query_history_run', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      differentDataSource,\n    });\n  };\n\n  const onCopyQuery = async () => {\n    const datasources = [...queryHistoryItem.queries.map((query) => query.datasource?.type || 'unknown')];\n    reportInteraction('grafana_explore_query_history_copy_query', {\n      datasources,\n      mixed: Boolean(historyCardData?.datasourceInstance?.meta.mixed),\n    });\n\n    if (loading || !historyCardData) {\n      return;\n    }\n\n    const queriesText = historyCardData.queries\n      .map((query) => {\n        return createQueryText(query.query, query.datasource);\n      })\n      .join('\\n');\n\n    copyStringToClipboard(queriesText);\n    dispatch(\n      notifyApp(\n        createSuccessNotification(t('explore.rich-history-notification.query-copied', 'Query copied to clipboard'))\n      )\n    );\n  };\n\n  const onCreateShortLink = async () => {\n    const link = createUrlFromRichHistory(queryHistoryItem);\n    await createAndCopyShortLink(link);\n  };\n\n  const onDeleteQuery = () => {\n    const performDelete = (queryId: string) => {\n      deleteHistoryItem(queryId);\n      dispatch(\n        notifyApp(createSuccessNotification(t('explore.rich-history-notification.query-deleted', 'Query deleted')))\n      );\n      reportInteraction('grafana_explore_query_history_deleted', {\n        queryHistoryEnabled: config.queryHistoryEnabled,\n      });\n    };\n\n    // For starred queries, we want confirmation. For non-starred, we don't.\n    if (queryHistoryItem.starred) {\n      getAppEvents().publish(\n        new ShowConfirmModalEvent({\n          title: t('explore.rich-history-card.delete-query-confirmation-title', 'Delete'),\n          text: t(\n            'explore.rich-history-card.delete-starred-query-confirmation-text',\n            'Are you sure you want to permanently delete your starred query?'\n          ),\n          yesText: t('explore.rich-history-card.confirm-delete', 'Delete'),\n          icon: 'trash-alt',\n          onConfirm: () => performDelete(queryHistoryItem.id),\n        })\n      );\n    } else {\n      performDelete(queryHistoryItem.id);\n    }\n  };\n\n  const onStarrQuery = () => {\n    starHistoryItem(queryHistoryItem.id, !queryHistoryItem.starred);\n    reportInteraction('grafana_explore_query_history_starred', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      newValue: !queryHistoryItem.starred,\n    });\n  };\n\n  const toggleActiveUpdateComment = () => setActiveUpdateComment(!activeUpdateComment);\n\n  const onUpdateComment = () => {\n    commentHistoryItem(queryHistoryItem.id, comment);\n    setActiveUpdateComment(false);\n    reportInteraction('grafana_explore_query_history_commented', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n    });\n  };\n\n  const onCancelUpdateComment = () => {\n    setActiveUpdateComment(false);\n    setComment(queryHistoryItem.comment);\n  };\n\n  const onKeyDown = (keyEvent: React.KeyboardEvent) => {\n    if (keyEvent.key === 'Enter' && (keyEvent.shiftKey || keyEvent.ctrlKey)) {\n      onUpdateComment();\n    }\n\n    if (keyEvent.key === 'Escape') {\n      onCancelUpdateComment();\n    }\n  };\n\n  const updateComment = (\n    <div\n      className={styles.updateCommentContainer}\n      aria-label={\n        comment\n          ? t('explore.rich-history-card.update-comment-form', 'Update comment form')\n          : t('explore.rich-history-card.add-comment-form', 'Add comment form')\n      }\n    >\n      <TextArea\n        onKeyDown={onKeyDown}\n        value={comment}\n        placeholder={\n          comment\n            ? undefined\n            : t('explore.rich-history-card.optional-description', 'An optional description of what the query does.')\n        }\n        onChange={(e) => setComment(e.currentTarget.value)}\n        className={styles.textArea}\n      />\n      <div className={styles.commentButtonRow}>\n        <Button onClick={onUpdateComment}>\n          <Trans i18nKey=\"explore.rich-history-card.save-comment\">Save comment</Trans>\n        </Button>\n        <Button variant=\"secondary\" onClick={onCancelUpdateComment}>\n          <Trans i18nKey=\"explore.rich-history-card.cancel\">Cancel</Trans>\n        </Button>\n      </div>\n    </div>\n  );\n\n  const queryActionButtons = (\n    <div className={styles.queryActionButtons}>\n      <IconButton\n        name=\"comment-alt\"\n        onClick={toggleActiveUpdateComment}\n        tooltip={\n          queryHistoryItem.comment?.length > 0\n            ? t('explore.rich-history-card.edit-comment-tooltip', 'Edit comment')\n            : t('explore.rich-history-card.add-comment-tooltip', 'Add comment')\n        }\n      />\n      <IconButton\n        name=\"copy\"\n        onClick={onCopyQuery}\n        tooltip={t('explore.rich-history-card.copy-query-tooltip', 'Copy query to clipboard')}\n      />\n      {historyCardData?.datasourceInstance && (\n        <IconButton\n          name=\"share-alt\"\n          onClick={onCreateShortLink}\n          tooltip={\n            <Trans i18nKey=\"explore.rich-history-card.copy-shortened-link-tooltip\">\n              Copy shortened link to clipboard\n            </Trans>\n          }\n        />\n      )}\n      <IconButton\n        name=\"trash-alt\"\n        title={t('explore.rich-history-card.delete-query-title', 'Delete query')}\n        tooltip={t('explore.rich-history-card.delete-query-tooltip', 'Delete query')}\n        onClick={onDeleteQuery}\n      />\n      <IconButton\n        name={queryHistoryItem.starred ? 'favorite' : 'star'}\n        iconType={queryHistoryItem.starred ? 'mono' : 'default'}\n        onClick={onStarrQuery}\n        tooltip={\n          queryHistoryItem.starred\n            ? t('explore.rich-history-card.unstar-query-tooltip', 'Unstar query')\n            : t('explore.rich-history-card.star-query-tooltip', 'Star query')\n        }\n      />\n    </div>\n  );\n\n  return (\n    <div className={styles.queryCard}>\n      <div className={styles.cardRow}>\n        <DatasourceInfo dsApi={historyCardData?.datasourceInstance} size=\"sm\" />\n\n        {queryActionButtons}\n      </div>\n      <div className={cx(styles.cardRow)}>\n        <div className={styles.queryContainer}>\n          {historyCardData?.queries.map((q, i) => {\n            return <Query query={q} key={`${q}-${i}`} showDsInfo={historyCardData?.datasourceInstance?.meta.mixed} />;\n          })}\n          {!activeUpdateComment && queryHistoryItem.comment && (\n            <div\n              aria-label={t('explore.rich-history-card.query-comment-label', 'Query comment')}\n              className={styles.comment}\n            >\n              {queryHistoryItem.comment}\n            </div>\n          )}\n          {activeUpdateComment && updateComment}\n        </div>\n        {!activeUpdateComment && (\n          <div className={styles.runButton}>\n            <Button\n              variant=\"secondary\"\n              onClick={onRunQuery}\n              disabled={\n                !historyCardData?.datasourceInstance || historyCardData.queries.some((query) => !query.datasource)\n              }\n            >\n              {datasourceInstance?.uid === queryHistoryItem.datasourceUid ? (\n                <Trans i18nKey=\"explore.rich-history-card.run-query-button\">Run query</Trans>\n              ) : (\n                <Trans i18nKey=\"explore.rich-history-card.switch-datasource-button\">\n                  Switch data source and run query\n                </Trans>\n              )}\n            </Button>\n          </div>\n        )}\n      </div>\n      {loading && (\n        <LoadingPlaceholder\n          text={t('explore.rich-history-card.loading-text', 'loading...')}\n          className={styles.loader}\n        />\n      )}\n    </div>\n  );\n}\n\nconst getQueryStyles = (theme: GrafanaTheme2) => ({\n  queryRow: css`\n    border-top: 1px solid ${theme.colors.border.weak};\n    display: flex;\n    flex-direction: row;\n    padding: 4px 0px;\n    gap: 4px;\n    :first-child {\n      border-top: none;\n    }\n  `,\n  dsInfoContainer: css`\n    display: flex;\n    align-items: center;\n  `,\n  queryText: css`\n    word-break: break-all;\n  `,\n});\n\ninterface QueryProps {\n  query: {\n    query: DataQuery;\n    datasource?: DataSourceApi;\n  };\n  /** Show datasource info (icon+name) alongside the query text */\n  showDsInfo?: boolean;\n}\n\nconst Query = ({ query, showDsInfo = false }: QueryProps) => {\n  const styles = useStyles2(getQueryStyles);\n\n  return (\n    <div className={styles.queryRow}>\n      {showDsInfo && (\n        <div className={styles.dsInfoContainer}>\n          <DatasourceInfo dsApi={query.datasource} size=\"md\" />\n          {': '}\n        </div>\n      )}\n      <span aria-label={t('explore.rich-history-card.query-text-label', 'Query text')} className={styles.queryText}>\n        {createQueryText(query.query, query.datasource)}\n      </span>\n    </div>\n  );\n};\n\nconst getDsInfoStyles = (size: 'sm' | 'md') => (theme: GrafanaTheme2) => css`\n  display: flex;\n  align-items: center;\n  font-size: ${theme.typography[size === 'sm' ? 'bodySmall' : 'body'].fontSize};\n  font-weight: ${theme.typography.fontWeightMedium};\n  white-space: nowrap;\n`;\n\nfunction DatasourceInfo({ dsApi, size }: { dsApi?: DataSourceApi; size: 'sm' | 'md' }) {\n  const getStyles = useCallback((theme: GrafanaTheme2) => getDsInfoStyles(size)(theme), [size]);\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles}>\n      <img\n        src={dsApi?.meta.info.logos.small || 'public/img/icn-datasource.svg'}\n        alt={dsApi?.type || t('explore.rich-history-card.datasource-not-exist', 'Data source does not exist anymore')}\n        aria-label={t('explore.rich-history-card.datasource-icon-label', 'Data source icon')}\n      />\n      <div aria-label={t('explore.rich-history-card.datasource-name-label', 'Data source name')}>\n        {dsApi?.name || t('explore.rich-history-card.datasource-not-exist', 'Data source does not exist anymore')}\n      </div>\n    </div>\n  );\n}\n\nexport default connector(RichHistoryCard);\n","import { css } from '@emotion/css';\nimport React, { useEffect } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Button, FilterInput, MultiSelect, RangeSlider, Select, useStyles2 } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\nimport {\n  createDatasourcesList,\n  mapNumbertoTimeInSlider,\n  mapQueriesToHeadings,\n  SortOrder,\n  RichHistorySearchFilters,\n  RichHistorySettings,\n} from 'app/core/utils/richHistory';\nimport { RichHistoryQuery } from 'app/types/explore';\n\nimport { getSortOrderOptions } from './RichHistory';\nimport RichHistoryCard from './RichHistoryCard';\n\nexport interface RichHistoryQueriesTabProps {\n  queries: RichHistoryQuery[];\n  totalQueries: number;\n  loading: boolean;\n  activeDatasourceInstance: string;\n  updateFilters: (filtersToUpdate?: Partial<RichHistorySearchFilters>) => void;\n  clearRichHistoryResults: () => void;\n  loadMoreRichHistory: () => void;\n  richHistorySettings: RichHistorySettings;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  exploreId: string;\n  height: number;\n}\n\nconst getStyles = (theme: GrafanaTheme2, height: number) => {\n  return {\n    container: css`\n      display: flex;\n    `,\n    labelSlider: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n      &:last-of-type {\n        margin-top: ${theme.spacing(3)};\n      }\n      &:first-of-type {\n        font-weight: ${theme.typography.fontWeightMedium};\n        margin-bottom: ${theme.spacing(2)};\n      }\n    `,\n    containerContent: css`\n      /* 134px is based on the width of the Query history tabs bar, so the content is aligned to right side of the tab */\n      width: calc(100% - 134px);\n    `,\n    containerSlider: css`\n      width: 129px;\n      margin-right: ${theme.spacing(1)};\n    `,\n    fixedSlider: css`\n      position: fixed;\n    `,\n    slider: css`\n      bottom: 10px;\n      height: ${height - 180}px;\n      width: 129px;\n      padding: ${theme.spacing(1)} 0;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    sessionName: css`\n      display: flex;\n      align-items: flex-start;\n      justify-content: flex-start;\n      margin-top: ${theme.spacing(3)};\n      h4 {\n        margin: 0 10px 0 0;\n      }\n    `,\n    heading: css`\n      font-size: ${theme.typography.h4.fontSize};\n      margin: ${theme.spacing(2, 0.25, 1, 0.25)};\n    `,\n    footer: css`\n      height: 60px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      font-weight: ${theme.typography.fontWeightLight};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      a {\n        font-weight: ${theme.typography.fontWeightMedium};\n        margin-left: ${theme.spacing(0.25)};\n      }\n    `,\n    queries: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n      font-weight: ${theme.typography.fontWeightRegular};\n      margin-left: ${theme.spacing(0.5)};\n    `,\n  };\n};\n\nexport function RichHistoryQueriesTab(props: RichHistoryQueriesTabProps) {\n  const {\n    queries,\n    totalQueries,\n    loading,\n    richHistorySearchFilters,\n    updateFilters,\n    clearRichHistoryResults,\n    loadMoreRichHistory,\n    richHistorySettings,\n    exploreId,\n    height,\n    activeDatasourceInstance,\n  } = props;\n\n  const styles = useStyles2(getStyles, height);\n\n  const listOfDatasources = createDatasourcesList();\n\n  useEffect(() => {\n    const datasourceFilters =\n      !richHistorySettings.activeDatasourceOnly && richHistorySettings.lastUsedDatasourceFilters\n        ? richHistorySettings.lastUsedDatasourceFilters\n        : [activeDatasourceInstance];\n    const filters: RichHistorySearchFilters = {\n      search: '',\n      sortOrder: SortOrder.Descending,\n      datasourceFilters,\n      from: 0,\n      to: richHistorySettings.retentionPeriod,\n      starred: false,\n    };\n    updateFilters(filters);\n\n    return () => {\n      clearRichHistoryResults();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!richHistorySearchFilters) {\n    return (\n      <span>\n        <Trans i18nKey=\"explore.rich-history-queries-tab.loading\">Loading...</Trans>;\n      </span>\n    );\n  }\n\n  /* mappedQueriesToHeadings is an object where query headings (stringified dates/data sources)\n   * are keys and arrays with queries that belong to that headings are values.\n   */\n  const mappedQueriesToHeadings = mapQueriesToHeadings(queries, richHistorySearchFilters.sortOrder);\n  const sortOrderOptions = getSortOrderOptions();\n  const partialResults = queries.length && queries.length !== totalQueries;\n  const timeFilter = [\n    richHistorySearchFilters.from || 0,\n    richHistorySearchFilters.to || richHistorySettings.retentionPeriod,\n  ];\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerSlider}>\n        <div className={styles.fixedSlider}>\n          <div className={styles.labelSlider}>\n            <Trans i18nKey=\"explore.rich-history-queries-tab.filter-history\">Filter history</Trans>\n          </div>\n          <div className={styles.labelSlider}>{mapNumbertoTimeInSlider(timeFilter[0])}</div>\n          <div className={styles.slider}>\n            <RangeSlider\n              tooltipAlwaysVisible={false}\n              min={0}\n              max={richHistorySettings.retentionPeriod}\n              value={timeFilter}\n              orientation=\"vertical\"\n              formatTooltipResult={mapNumbertoTimeInSlider}\n              reverse={true}\n              onAfterChange={(value) => {\n                updateFilters({ from: value![0], to: value![1] });\n              }}\n            />\n          </div>\n          <div className={styles.labelSlider}>{mapNumbertoTimeInSlider(timeFilter[1])}</div>\n        </div>\n      </div>\n\n      <div className={styles.containerContent} data-testid=\"query-history-queries-tab\">\n        <div className={styles.selectors}>\n          {!richHistorySettings.activeDatasourceOnly && (\n            <MultiSelect\n              className={styles.multiselect}\n              options={listOfDatasources.map((ds) => {\n                return { value: ds.name, label: ds.name };\n              })}\n              value={richHistorySearchFilters.datasourceFilters}\n              placeholder={t(\n                'explore.rich-history-queries-tab.filter-placeholder',\n                'Filter queries for data sources(s)'\n              )}\n              aria-label={t('explore.rich-history-queries-tab.filter-aria-label', 'Filter queries for data sources(s)')}\n              onChange={(options: SelectableValue[]) => {\n                updateFilters({ datasourceFilters: options.map((option) => option.value) });\n              }}\n            />\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              escapeRegex={false}\n              placeholder={t('explore.rich-history-queries-tab.search-placeholder', 'Search queries')}\n              value={richHistorySearchFilters.search}\n              onChange={(search: string) => updateFilters({ search })}\n            />\n          </div>\n          <div\n            aria-label={t('explore.rich-history-queries-tab.sort-aria-label', 'Sort queries')}\n            className={styles.sort}\n          >\n            <Select\n              value={sortOrderOptions.filter((order) => order.value === richHistorySearchFilters.sortOrder)}\n              options={sortOrderOptions}\n              placeholder={t('explore.rich-history-queries-tab.sort-placeholder', 'Sort queries by')}\n              onChange={(e: SelectableValue<SortOrder>) => updateFilters({ sortOrder: e.value })}\n            />\n          </div>\n        </div>\n\n        {loading && (\n          <span>\n            <Trans i18nKey=\"explore.rich-history-queries-tab.loading-results\">Loading results...</Trans>\n          </span>\n        )}\n\n        {!loading &&\n          Object.keys(mappedQueriesToHeadings).map((heading) => {\n            return (\n              <div key={heading}>\n                <div className={styles.heading}>\n                  {heading}{' '}\n                  <span className={styles.queries}>\n                    {partialResults ? (\n                      <Trans\n                        i18nKey=\"explore.rich-history-queries-tab.displaying-partial-queries\"\n                        defaults=\"Displaying {{ count }} queries\"\n                        values={{ count: mappedQueriesToHeadings[heading].length }}\n                      />\n                    ) : (\n                      <Trans\n                        i18nKey=\"explore.rich-history-queries-tab.displaying-queries\"\n                        defaults=\"{{ count }} queries\"\n                        values={{ count: mappedQueriesToHeadings[heading].length }}\n                      />\n                    )}\n                  </span>\n                </div>\n                {mappedQueriesToHeadings[heading].map((q) => {\n                  return <RichHistoryCard queryHistoryItem={q} key={q.id} exploreId={exploreId} />;\n                })}\n              </div>\n            );\n          })}\n        {partialResults ? (\n          <div>\n            <Trans\n              i18nKey=\"explore.rich-history-queries-tab.showing-queries\"\n              defaults=\"Showing {{ shown }} of {{ total }} <0>Load more</0>\"\n              values={{ shown: queries.length, total: totalQueries }}\n              components={[\n                <Button onClick={loadMoreRichHistory} key=\"loadMoreButton\">\n                  Load more\n                </Button>,\n              ]}\n            />\n          </div>\n        ) : null}\n        <div className={styles.footer}>\n          {!config.queryHistoryEnabled\n            ? t(\n                'explore.rich-history-queries-tab.history-local',\n                'The history is local to your browser and is not shared with others.'\n              )\n            : ''}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { getAppEvents } from '@grafana/runtime';\nimport { useStyles2, Select, Button, Field, InlineField, InlineSwitch, Alert } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { MAX_HISTORY_ITEMS } from 'app/core/history/RichHistoryLocalStorage';\nimport { Trans, t } from 'app/core/internationalization';\nimport { dispatch } from 'app/store/store';\n\nimport { supportedFeatures } from '../../../core/history/richHistoryStorageProvider';\nimport { ShowConfirmModalEvent } from '../../../types/events';\n\nexport interface RichHistorySettingsProps {\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  onChangeRetentionPeriod: (option: SelectableValue<number>) => void;\n  toggleStarredTabAsFirstTab: () => void;\n  toggleactiveDatasourceOnly: () => void;\n  deleteRichHistory: () => void;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n    `,\n    spaceBetween: css`\n      margin-bottom: ${theme.spacing(3)};\n    `,\n    input: css`\n      max-width: 200px;\n    `,\n    bold: css`\n      font-weight: ${theme.typography.fontWeightBold};\n    `,\n    bottomMargin: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n  };\n};\n\nconst retentionPeriodOptions = [\n  { value: 2, label: t('explore.rich-history-settings-tab.retention-period.2-days', '2 days') },\n  { value: 5, label: t('explore.rich-history-settings-tab.retention-period.5-days', '5 days') },\n  { value: 7, label: t('explore.rich-history-settings-tab.retention-period.1-week', '1 week') },\n  { value: 14, label: t('explore.rich-history-settings-tab.retention-period.2-weeks', '2 weeks') },\n];\n\nexport function RichHistorySettingsTab(props: RichHistorySettingsProps) {\n  const {\n    retentionPeriod,\n    starredTabAsFirstTab,\n    activeDatasourceOnly,\n    onChangeRetentionPeriod,\n    toggleStarredTabAsFirstTab,\n    toggleactiveDatasourceOnly,\n    deleteRichHistory,\n  } = props;\n  const styles = useStyles2(getStyles);\n  const selectedOption = retentionPeriodOptions.find((v) => v.value === retentionPeriod);\n\n  const onDelete = () => {\n    getAppEvents().publish(\n      new ShowConfirmModalEvent({\n        title: t('explore.rich-history-settings-tab.delete-title', 'Delete'),\n        text: t(\n          'explore.rich-history-settings-tab.delete-confirm-text',\n          'Are you sure you want to permanently delete your query history?'\n        ),\n        yesText: t('explore.rich-history-settings-tab.delete-confirm', 'Delete'),\n        icon: 'trash-alt',\n        onConfirm: () => {\n          deleteRichHistory();\n          dispatch(\n            notifyApp(\n              createSuccessNotification(\n                t('explore.rich-history-settings-tab.query-history-deleted', 'Query history deleted')\n              )\n            )\n          );\n        },\n      })\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      {supportedFeatures().changeRetention ? (\n        <Field\n          label={t('explore.rich-history-settings-tab.history-time-span', 'History time span')}\n          description={t(\n            'explore.rich-history-settings-tab.history-time-span-description',\n            'Select the period of time for which Grafana will save your query history. Up to {{MAX_HISTORY_ITEMS}} entries will be stored.',\n            { MAX_HISTORY_ITEMS }\n          )}\n        >\n          <div className={styles.input}>\n            <Select value={selectedOption} options={retentionPeriodOptions} onChange={onChangeRetentionPeriod}></Select>\n          </div>\n        </Field>\n      ) : (\n        <Alert severity=\"info\" title={t('explore.rich-history-settings-tab.history-time-span', 'History time span')}>\n          {t(\n            'explore.rich-history-settings-tab.alert-info',\n            \"Grafana will keep entries up to {{optionLabel}}.Starred entries won't be deleted.\",\n            {\n              optionLabel: selectedOption?.label,\n            }\n          )}\n        </Alert>\n      )}\n      <InlineField\n        label={t(\n          'explore.rich-history-settings-tab.change-default-tab',\n          'Change the default active tab from “Query history” to “Starred”'\n        )}\n        className={styles.spaceBetween}\n      >\n        <InlineSwitch\n          id=\"explore-query-history-settings-default-active-tab\"\n          value={starredTabAsFirstTab}\n          onChange={toggleStarredTabAsFirstTab}\n        />\n      </InlineField>\n      {supportedFeatures().onlyActiveDataSource && (\n        <InlineField\n          label={t(\n            'explore.rich-history-settings-tab.only-show-active-datasource',\n            'Only show queries for data source currently active in Explore'\n          )}\n          className={styles.spaceBetween}\n        >\n          <InlineSwitch\n            id=\"explore-query-history-settings-data-source-behavior\"\n            value={activeDatasourceOnly}\n            onChange={toggleactiveDatasourceOnly}\n          />\n        </InlineField>\n      )}\n      {supportedFeatures().clearHistory && (\n        <div>\n          <div className={styles.bold}>\n            <Trans i18nKey=\"explore.rich-history-settings-tab.clear-query-history\">Clear query history</Trans>\n          </div>\n          <div className={styles.bottomMargin}>\n            <Trans i18nKey=\"explore.rich-history-settings-tab.clear-history-info\">\n              Delete all of your query history, permanently.\n            </Trans>\n          </div>\n          <Button variant=\"destructive\" onClick={onDelete}>\n            <Trans i18nKey=\"explore.rich-history-settings-tab.clear-query-history-button\">Clear query history</Trans>\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport React, { useEffect } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { useStyles2, Select, MultiSelect, FilterInput, Button } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\nimport {\n  createDatasourcesList,\n  SortOrder,\n  RichHistorySearchFilters,\n  RichHistorySettings,\n} from 'app/core/utils/richHistory';\nimport { RichHistoryQuery } from 'app/types/explore';\n\nimport { getSortOrderOptions } from './RichHistory';\nimport RichHistoryCard from './RichHistoryCard';\n\nexport interface RichHistoryStarredTabProps {\n  queries: RichHistoryQuery[];\n  totalQueries: number;\n  loading: boolean;\n  activeDatasourceInstance: string;\n  updateFilters: (filtersToUpdate: Partial<RichHistorySearchFilters>) => void;\n  clearRichHistoryResults: () => void;\n  loadMoreRichHistory: () => void;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  richHistorySettings: RichHistorySettings;\n  exploreId: string;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n    `,\n    containerContent: css`\n      width: 100%;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    footer: css`\n      height: 60px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      font-weight: ${theme.typography.fontWeightLight};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      a {\n        font-weight: ${theme.typography.fontWeightMedium};\n        margin-left: ${theme.spacing(0.25)};\n      }\n    `,\n  };\n};\n\nexport function RichHistoryStarredTab(props: RichHistoryStarredTabProps) {\n  const {\n    updateFilters,\n    clearRichHistoryResults,\n    loadMoreRichHistory,\n    activeDatasourceInstance,\n    richHistorySettings,\n    queries,\n    totalQueries,\n    loading,\n    richHistorySearchFilters,\n    exploreId,\n  } = props;\n\n  const styles = useStyles2(getStyles);\n\n  const listOfDatasources = createDatasourcesList();\n\n  useEffect(() => {\n    const datasourceFilters =\n      richHistorySettings.activeDatasourceOnly && richHistorySettings.lastUsedDatasourceFilters\n        ? richHistorySettings.lastUsedDatasourceFilters\n        : [activeDatasourceInstance];\n    const filters: RichHistorySearchFilters = {\n      search: '',\n      sortOrder: SortOrder.Descending,\n      datasourceFilters,\n      from: 0,\n      to: richHistorySettings.retentionPeriod,\n      starred: true,\n    };\n    updateFilters(filters);\n    return () => {\n      clearRichHistoryResults();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!richHistorySearchFilters) {\n    return (\n      <span>\n        <Trans i18nKey=\"explore.rich-history-starred-tab.loading\">Loading...</Trans>;\n      </span>\n    );\n  }\n\n  const sortOrderOptions = getSortOrderOptions();\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!richHistorySettings.activeDatasourceOnly && (\n            <MultiSelect\n              className={styles.multiselect}\n              options={listOfDatasources.map((ds) => {\n                return { value: ds.name, label: ds.name };\n              })}\n              value={richHistorySearchFilters.datasourceFilters}\n              placeholder={t(\n                'explore.rich-history-starred-tab.filter-queries-placeholder',\n                'Filter queries for data sources(s)'\n              )}\n              aria-label={t(\n                'explore.rich-history-starred-tab.filter-queries-aria-label',\n                'Filter queries for data sources(s)'\n              )}\n              onChange={(options: SelectableValue[]) => {\n                updateFilters({ datasourceFilters: options.map((option) => option.value) });\n              }}\n            />\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              escapeRegex={false}\n              placeholder={t('explore.rich-history-starred-tab.search-queries-placeholder', 'Search queries')}\n              value={richHistorySearchFilters.search}\n              onChange={(search: string) => updateFilters({ search })}\n            />\n          </div>\n          <div\n            aria-label={t('explore.rich-history-starred-tab.sort-queries-aria-label', 'Sort queries')}\n            className={styles.sort}\n          >\n            <Select\n              value={sortOrderOptions.filter((order) => order.value === richHistorySearchFilters.sortOrder)}\n              options={sortOrderOptions}\n              placeholder={t('explore.rich-history-starred-tab.sort-queries-placeholder', 'Sort queries by')}\n              onChange={(e: SelectableValue<SortOrder>) => updateFilters({ sortOrder: e.value })}\n            />\n          </div>\n        </div>\n        {loading && (\n          <span>\n            <Trans i18nKey=\"explore.rich-history-starred-tab.loading-results\">Loading results...</Trans>\n          </span>\n        )}\n        {!loading &&\n          queries.map((q) => {\n            return <RichHistoryCard queryHistoryItem={q} key={q.id} exploreId={exploreId} />;\n          })}\n        {queries.length && queries.length !== totalQueries ? (\n          <div>\n            <Trans\n              i18nKey=\"explore.rich-history-starred-tab.showing-queries\"\n              defaults=\"Showing {{ shown }} of {{ total }} <0>Load more</0>\"\n              values={{ shown: queries.length, total: totalQueries }}\n              components={[\n                <Button onClick={loadMoreRichHistory} key=\"loadMoreButton\">\n                  Load more\n                </Button>,\n              ]}\n            />\n          </div>\n        ) : null}\n        <div className={styles.footer}>\n          {!config.queryHistoryEnabled\n            ? t(\n                'explore.rich-history-starred-tab.local-history-message',\n                'The history is local to your browser and is not shared with others.'\n              )\n            : ''}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { debounce } from 'lodash';\nimport React, { useState, useEffect } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { TabbedContainer, TabConfig } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\nimport { SortOrder, RichHistorySearchFilters, RichHistorySettings } from 'app/core/utils/richHistory';\nimport { RichHistoryQuery } from 'app/types/explore';\n\nimport { supportedFeatures } from '../../../core/history/richHistoryStorageProvider';\n\nimport { RichHistoryQueriesTab } from './RichHistoryQueriesTab';\nimport { RichHistorySettingsTab } from './RichHistorySettingsTab';\nimport { RichHistoryStarredTab } from './RichHistoryStarredTab';\n\nexport enum Tabs {\n  RichHistory = 'Query history',\n  Starred = 'Starred',\n  Settings = 'Settings',\n}\n\nexport const getSortOrderOptions = () =>\n  [\n    { label: t('explore.rich-history.newest-first', 'Newest first'), value: SortOrder.Descending },\n    { label: t('explore.rich-history.oldest-first', 'Oldest first'), value: SortOrder.Ascending },\n    { label: t('explore.rich-history.datasource-a-z', 'Data source A-Z'), value: SortOrder.DatasourceAZ },\n    { label: t('explore.rich-history.datasource-z-a', 'Data source Z-A'), value: SortOrder.DatasourceZA },\n  ].filter((option) => supportedFeatures().availableFilters.includes(option.value));\n\nexport interface RichHistoryProps {\n  richHistory: RichHistoryQuery[];\n  richHistoryTotal?: number;\n  richHistorySettings: RichHistorySettings;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  updateHistorySettings: (settings: RichHistorySettings) => void;\n  updateHistorySearchFilters: (exploreId: string, filters: RichHistorySearchFilters) => void;\n  loadRichHistory: (exploreId: string) => void;\n  loadMoreRichHistory: (exploreId: string) => void;\n  clearRichHistoryResults: (exploreId: string) => void;\n  deleteRichHistory: () => void;\n  activeDatasourceInstance: string;\n  firstTab: Tabs;\n  exploreId: string;\n  height: number;\n  onClose: () => void;\n}\n\nexport function RichHistory(props: RichHistoryProps) {\n  const {\n    richHistory,\n    richHistoryTotal,\n    height,\n    exploreId,\n    deleteRichHistory,\n    onClose,\n    firstTab,\n    activeDatasourceInstance,\n  } = props;\n\n  const [loading, setLoading] = useState(false);\n\n  const updateSettings = (settingsToUpdate: Partial<RichHistorySettings>) => {\n    props.updateHistorySettings({ ...props.richHistorySettings, ...settingsToUpdate });\n  };\n\n  const updateFilters = (filtersToUpdate?: Partial<RichHistorySearchFilters>) => {\n    const filters = {\n      ...props.richHistorySearchFilters!,\n      ...filtersToUpdate,\n      page: 1, // always load fresh results when updating filters\n    };\n    props.updateHistorySearchFilters(props.exploreId, filters);\n    loadRichHistory();\n  };\n\n  const loadRichHistory = debounce(() => {\n    props.loadRichHistory(props.exploreId);\n    setLoading(true);\n  }, 300);\n\n  const onChangeRetentionPeriod = (retentionPeriod: SelectableValue<number>) => {\n    if (retentionPeriod.value !== undefined) {\n      updateSettings({ retentionPeriod: retentionPeriod.value });\n    }\n  };\n\n  const toggleStarredTabAsFirstTab = () =>\n    updateSettings({ starredTabAsFirstTab: !props.richHistorySettings.starredTabAsFirstTab });\n\n  const toggleActiveDatasourceOnly = () =>\n    updateSettings({ activeDatasourceOnly: !props.richHistorySettings.activeDatasourceOnly });\n\n  useEffect(() => {\n    setLoading(false);\n  }, [richHistory]);\n\n  const QueriesTab: TabConfig = {\n    label: t('explore.rich-history.query-history', 'Query history'),\n    value: Tabs.RichHistory,\n    content: (\n      <RichHistoryQueriesTab\n        queries={richHistory}\n        totalQueries={richHistoryTotal || 0}\n        loading={loading}\n        updateFilters={updateFilters}\n        clearRichHistoryResults={() => props.clearRichHistoryResults(props.exploreId)}\n        loadMoreRichHistory={() => props.loadMoreRichHistory(props.exploreId)}\n        activeDatasourceInstance={activeDatasourceInstance}\n        richHistorySettings={props.richHistorySettings}\n        richHistorySearchFilters={props.richHistorySearchFilters}\n        exploreId={exploreId}\n        height={height}\n      />\n    ),\n    icon: 'history',\n  };\n\n  const StarredTab: TabConfig = {\n    label: t('explore.rich-history.starred', 'Starred'),\n    value: Tabs.Starred,\n    content: (\n      <RichHistoryStarredTab\n        queries={richHistory}\n        totalQueries={richHistoryTotal || 0}\n        loading={loading}\n        activeDatasourceInstance={activeDatasourceInstance}\n        updateFilters={updateFilters}\n        clearRichHistoryResults={() => props.clearRichHistoryResults(props.exploreId)}\n        loadMoreRichHistory={() => props.loadMoreRichHistory(props.exploreId)}\n        richHistorySettings={props.richHistorySettings}\n        richHistorySearchFilters={props.richHistorySearchFilters}\n        exploreId={exploreId}\n      />\n    ),\n    icon: 'star',\n  };\n\n  const SettingsTab: TabConfig = {\n    label: t('explore.rich-history.settings', 'Settings'),\n    value: Tabs.Settings,\n    content: (\n      <RichHistorySettingsTab\n        retentionPeriod={props.richHistorySettings.retentionPeriod}\n        starredTabAsFirstTab={props.richHistorySettings.starredTabAsFirstTab}\n        activeDatasourceOnly={props.richHistorySettings.activeDatasourceOnly}\n        onChangeRetentionPeriod={onChangeRetentionPeriod}\n        toggleStarredTabAsFirstTab={toggleStarredTabAsFirstTab}\n        toggleactiveDatasourceOnly={toggleActiveDatasourceOnly}\n        deleteRichHistory={deleteRichHistory}\n      />\n    ),\n    icon: 'sliders-v-alt',\n  };\n\n  let tabs = [QueriesTab, StarredTab, SettingsTab];\n  return (\n    <TabbedContainer\n      tabs={tabs}\n      onClose={onClose}\n      defaultTab={firstTab}\n      closeIconTooltip={t('explore.rich-history.close-tooltip', 'Close query history')}\n    />\n  );\n}\n","// Libraries\nimport React, { useEffect, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { useTheme2 } from '@grafana/ui';\nimport { Trans } from 'app/core/internationalization';\n// Types\nimport { ExploreItemState, StoreState } from 'app/types';\n\n// Components, enums\nimport { ExploreDrawer } from '../ExploreDrawer';\nimport {\n  deleteRichHistory,\n  initRichHistory,\n  loadRichHistory,\n  loadMoreRichHistory,\n  clearRichHistoryResults,\n  updateHistorySettings,\n  updateHistorySearchFilters,\n} from '../state/history';\n\nimport { RichHistory, Tabs } from './RichHistory';\n\n//Actions\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore.panes[exploreId]!;\n  const richHistorySearchFilters = item.richHistorySearchFilters;\n  const richHistorySettings = explore.richHistorySettings;\n  const { datasourceInstance } = item;\n  const firstTab = richHistorySettings?.starredTabAsFirstTab ? Tabs.Starred : Tabs.RichHistory;\n  const { richHistory, richHistoryTotal } = item;\n  return {\n    richHistory,\n    richHistoryTotal,\n    firstTab,\n    activeDatasourceInstance: datasourceInstance!.name,\n    richHistorySettings,\n    richHistorySearchFilters,\n  };\n}\n\nconst mapDispatchToProps = {\n  initRichHistory,\n  loadRichHistory,\n  loadMoreRichHistory,\n  clearRichHistoryResults,\n  updateHistorySettings,\n  updateHistorySearchFilters,\n  deleteRichHistory,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps {\n  width: number;\n  exploreId: string;\n  onClose: () => void;\n}\nexport type Props = ConnectedProps<typeof connector> & OwnProps;\n\nexport function RichHistoryContainer(props: Props) {\n  const theme = useTheme2();\n  const [height, setHeight] = useState(theme.components.horizontalDrawer.defaultHeight);\n\n  const {\n    richHistory,\n    richHistoryTotal,\n    width,\n    firstTab,\n    activeDatasourceInstance,\n    exploreId,\n    deleteRichHistory,\n    initRichHistory,\n    loadRichHistory,\n    loadMoreRichHistory,\n    clearRichHistoryResults,\n    richHistorySettings,\n    updateHistorySettings,\n    richHistorySearchFilters,\n    updateHistorySearchFilters,\n    onClose,\n  } = props;\n\n  useEffect(() => {\n    initRichHistory();\n    reportInteraction('grafana_explore_query_history_opened', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n    });\n  }, [initRichHistory]);\n\n  if (!richHistorySettings) {\n    return (\n      <span>\n        <Trans i18nKey=\"explore.rich-history-container.loading\">Loading...</Trans>\n      </span>\n    );\n  }\n\n  return (\n    <ExploreDrawer\n      width={width}\n      onResize={(_e, _dir, ref) => {\n        setHeight(Number(ref.style.height.slice(0, -2)));\n      }}\n    >\n      <RichHistory\n        richHistory={richHistory}\n        richHistoryTotal={richHistoryTotal}\n        firstTab={firstTab}\n        activeDatasourceInstance={activeDatasourceInstance}\n        exploreId={exploreId}\n        onClose={onClose}\n        height={height}\n        deleteRichHistory={deleteRichHistory}\n        richHistorySettings={richHistorySettings}\n        richHistorySearchFilters={richHistorySearchFilters}\n        updateHistorySettings={updateHistorySettings}\n        updateHistorySearchFilters={updateHistorySearchFilters}\n        loadRichHistory={loadRichHistory}\n        loadMoreRichHistory={loadMoreRichHistory}\n        clearRichHistoryResults={clearRichHistoryResults}\n      />\n    </ExploreDrawer>\n  );\n}\n\nexport default connector(RichHistoryContainer);\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Components } from '@grafana/e2e-selectors';\nimport { ToolbarButton, useTheme2 } from '@grafana/ui';\nimport { t, Trans } from 'app/core/internationalization';\n\ntype Props = {\n  addQueryRowButtonDisabled?: boolean;\n  addQueryRowButtonHidden?: boolean;\n  richHistoryRowButtonHidden?: boolean;\n  richHistoryButtonActive?: boolean;\n  queryInspectorButtonActive?: boolean;\n\n  onClickAddQueryRowButton: () => void;\n  onClickRichHistoryButton: () => void;\n  onClickQueryInspectorButton: () => void;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    containerMargin: css({\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: theme.spacing(1),\n      marginTop: theme.spacing(2),\n    }),\n  };\n};\n\nexport function SecondaryActions(props: Props) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return (\n    <div className={styles.containerMargin}>\n      {!props.addQueryRowButtonHidden && (\n        <ToolbarButton\n          variant=\"canvas\"\n          aria-label={t('explore.secondary-actions.query-add-button-aria-label', 'Add query')}\n          onClick={props.onClickAddQueryRowButton}\n          disabled={props.addQueryRowButtonDisabled}\n          icon=\"plus\"\n        >\n          <Trans i18nKey=\"explore.secondary-actions.query-add-button\">Add query</Trans>\n        </ToolbarButton>\n      )}\n      {!props.richHistoryRowButtonHidden && (\n        <ToolbarButton\n          variant={props.richHistoryButtonActive ? 'active' : 'canvas'}\n          aria-label={t('explore.secondary-actions.query-history-button-aria-label', 'Query history')}\n          onClick={props.onClickRichHistoryButton}\n          data-testid={Components.QueryTab.queryHistoryButton}\n          icon=\"history\"\n        >\n          <Trans i18nKey=\"explore.secondary-actions.query-history-button\">Query history</Trans>\n        </ToolbarButton>\n      )}\n      <ToolbarButton\n        variant={props.queryInspectorButtonActive ? 'active' : 'canvas'}\n        aria-label={t('explore.secondary-actions.query-inspector-button-aria-label', 'Query inspector')}\n        onClick={props.onClickQueryInspectorButton}\n        icon=\"info-circle\"\n      >\n        <Trans i18nKey=\"explore.secondary-actions.query-inspector-button\">Query inspector</Trans>\n      </ToolbarButton>\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { applyFieldOverrides, SplitOpen, DataFrame, LoadingState, FieldType } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { TimeZone } from '@grafana/schema';\nimport { Table, AdHocFilterItem, PanelChrome, withTheme2, Themeable2 } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { t } from 'app/core/internationalization';\nimport {\n  hasDeprecatedParentRowIndex,\n  migrateFromParentRowIndexToNestedFrames,\n} from 'app/plugins/panel/table/migrations';\nimport { StoreState } from 'app/types';\nimport { ExploreItemState } from 'app/types/explore';\n\nimport { MetaInfoText } from '../MetaInfoText';\nimport { selectIsWaitingForData } from '../state/query';\nimport { exploreDataLinkPostProcessorFactory } from '../utils/links';\n\ninterface TableContainerProps extends Themeable2 {\n  ariaLabel?: string;\n  exploreId: string;\n  width: number;\n  timeZone: TimeZone;\n  onCellFilterAdded?: (filter: AdHocFilterItem) => void;\n  splitOpenFn: SplitOpen;\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: TableContainerProps) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore.panes[exploreId]!;\n  const { tableResult, range } = item;\n  const loadingInState = selectIsWaitingForData(exploreId);\n  const loading = tableResult && tableResult.length > 0 ? false : loadingInState;\n  return { loading, tableResult, range };\n}\n\nconst connector = connect(mapStateToProps, {});\n\ntype Props = TableContainerProps & ConnectedProps<typeof connector>;\n\nexport class TableContainer extends PureComponent<Props> {\n  hasSubFrames = (data: DataFrame) => data.fields.some((f) => f.type === FieldType.nestedFrames);\n\n  getTableHeight(rowCount: number, hasSubFrames: boolean) {\n    if (rowCount === 0) {\n      return 200;\n    }\n    // tries to estimate table height, with a min of 300 and a max of 600\n    // if there are multiple tables, there is no min\n    return Math.min(600, Math.max(rowCount * 36, hasSubFrames ? 300 : 0) + 40 + 46);\n  }\n\n  getTableTitle(dataFrames: DataFrame[] | null, data: DataFrame, i: number) {\n    let name = data.name;\n    if (!name && (dataFrames?.length ?? 0) > 1) {\n      name = data.refId || `${i}`;\n    }\n\n    return name\n      ? t('explore.table.title-with-name', 'Table - {{name}}', { name, interpolation: { escapeValue: false } })\n      : t('explore.table.title', 'Table');\n  }\n\n  render() {\n    const { loading, onCellFilterAdded, tableResult, width, splitOpenFn, range, ariaLabel, timeZone, theme } =\n      this.props;\n\n    let dataFrames = hasDeprecatedParentRowIndex(tableResult)\n      ? migrateFromParentRowIndexToNestedFrames(tableResult)\n      : tableResult;\n    const dataLinkPostProcessor = exploreDataLinkPostProcessorFactory(splitOpenFn, range);\n\n    if (dataFrames?.length) {\n      dataFrames = applyFieldOverrides({\n        data: dataFrames,\n        timeZone,\n        theme: config.theme2,\n        replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n        fieldConfig: {\n          defaults: {},\n          overrides: [],\n        },\n        dataLinkPostProcessor,\n      });\n    }\n\n    const frames = dataFrames?.filter(\n      (frame: DataFrame | undefined): frame is DataFrame => !!frame && frame.length !== 0\n    );\n\n    return (\n      <>\n        {frames && frames.length === 0 && (\n          <PanelChrome title={t('explore.table.title', 'Table')} width={width} height={200}>\n            {() => <MetaInfoText metaItems={[{ value: t('explore.table.no-data', '0 series returned') }]} />}\n          </PanelChrome>\n        )}\n        {frames && frames.length > 0 && (\n          <div className={css({ display: 'flex', flexDirection: 'column', gap: theme.spacing(1) })}>\n            {frames.map((data, i) => (\n              <PanelChrome\n                key={data.refId || `table-${i}`}\n                title={this.getTableTitle(dataFrames, data, i)}\n                width={width}\n                height={this.getTableHeight(data.length, this.hasSubFrames(data))}\n                loadingState={loading ? LoadingState.Loading : undefined}\n              >\n                {(innerWidth, innerHeight) => (\n                  <Table\n                    ariaLabel={ariaLabel}\n                    data={data}\n                    width={innerWidth}\n                    height={innerHeight}\n                    onCellFilterAdded={onCellFilterAdded}\n                  />\n                )}\n              </PanelChrome>\n            ))}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const TableContainerWithTheme = withTheme2(TableContainer);\n\nexport default withTheme2(connector(TableContainer));\n","import React, { useMemo } from 'react';\n\nimport { DataFrame, SplitOpen } from '@grafana/data';\nimport { PanelChrome } from '@grafana/ui';\nimport { StoreState, useSelector } from 'app/types';\n\nimport { TraceView } from './TraceView';\nimport { transformDataFrames } from './utils/transform';\n\ninterface Props {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: string;\n  scrollElement?: Element;\n}\n\nexport function TraceViewContainer(props: Props) {\n  // At this point we only show single trace\n  const frame = props.dataFrames[0];\n  const { dataFrames, splitOpenFn, exploreId, scrollElement } = props;\n  const traceProp = useMemo(() => transformDataFrames(frame), [frame]);\n  const datasource = useSelector(\n    (state: StoreState) => state.explore.panes[props.exploreId]?.datasourceInstance ?? undefined\n  );\n\n  if (!traceProp) {\n    return null;\n  }\n\n  return (\n    <PanelChrome padding=\"none\" title=\"Trace\">\n      <TraceView\n        exploreId={exploreId}\n        dataFrames={dataFrames}\n        splitOpenFn={splitOpenFn}\n        scrollElement={scrollElement}\n        traceProp={traceProp}\n        datasource={datasource}\n      />\n    </PanelChrome>\n  );\n}\n","import { css, cx } from '@emotion/css';\nimport { get, groupBy } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport AutoSizer, { HorizontalSize } from 'react-virtualized-auto-sizer';\n\nimport {\n  AbsoluteTimeRange,\n  DataFrame,\n  EventBus,\n  GrafanaTheme2,\n  hasToggleableQueryFiltersSupport,\n  LoadingState,\n  QueryFixAction,\n  RawTimeRange,\n  SplitOpenOptions,\n  SupplementaryQueryType,\n} from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { getDataSourceSrv, reportInteraction } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport {\n  AdHocFilterItem,\n  CustomScrollbar,\n  ErrorBoundaryAlert,\n  PanelContainer,\n  Themeable2,\n  withTheme2,\n} from '@grafana/ui';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR } from '@grafana/ui/src/components/Table/types';\nimport { supportedFeatures } from 'app/core/history/richHistoryStorageProvider';\nimport { MIXED_DATASOURCE_NAME } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { getNodeGraphDataFrames } from 'app/plugins/panel/nodeGraph/utils';\nimport { StoreState } from 'app/types';\n\nimport { getTimeZone } from '../profile/state/selectors';\n\nimport { ContentOutline } from './ContentOutline/ContentOutline';\nimport { ContentOutlineContextProvider } from './ContentOutline/ContentOutlineContext';\nimport { ContentOutlineItem } from './ContentOutline/ContentOutlineItem';\nimport { CorrelationHelper } from './CorrelationHelper';\nimport { CustomContainer } from './CustomContainer';\nimport ExploreQueryInspector from './ExploreQueryInspector';\nimport { ExploreToolbar } from './ExploreToolbar';\nimport { FlameGraphExploreContainer } from './FlameGraph/FlameGraphExploreContainer';\nimport { GraphContainer } from './Graph/GraphContainer';\nimport LogsContainer from './Logs/LogsContainer';\nimport { LogsSamplePanel } from './Logs/LogsSamplePanel';\nimport { NoData } from './NoData';\nimport { NoDataSourceCallToAction } from './NoDataSourceCallToAction';\nimport { NodeGraphContainer } from './NodeGraph/NodeGraphContainer';\nimport { QueryRows } from './QueryRows';\nimport RawPrometheusContainer from './RawPrometheus/RawPrometheusContainer';\nimport { ResponseErrorContainer } from './ResponseErrorContainer';\nimport RichHistoryContainer from './RichHistory/RichHistoryContainer';\nimport { SecondaryActions } from './SecondaryActions';\nimport TableContainer from './Table/TableContainer';\nimport { TraceViewContainer } from './TraceView/TraceViewContainer';\nimport { changeSize } from './state/explorePane';\nimport { splitOpen } from './state/main';\nimport {\n  addQueryRow,\n  modifyQueries,\n  scanStart,\n  scanStopAction,\n  selectIsWaitingForData,\n  setQueries,\n  setSupplementaryQueryEnabled,\n} from './state/query';\nimport { isSplit } from './state/selectors';\nimport { updateTimeRange } from './state/time';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    exploreMain: css({\n      label: 'exploreMain',\n      // Is needed for some transition animations to work.\n      position: 'relative',\n      marginTop: '21px',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(1),\n    }),\n    queryContainer: css({\n      label: 'queryContainer',\n      padding: theme.spacing(1),\n    }),\n    exploreContainer: css({\n      label: 'exploreContainer',\n      display: 'flex',\n      flexDirection: 'column',\n      paddingRight: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n    }),\n    wrapper: css({\n      position: 'absolute',\n      top: 0,\n      left: theme.spacing(2),\n      right: 0,\n      bottom: 0,\n      display: 'flex',\n    }),\n  };\n};\n\nexport interface ExploreProps extends Themeable2 {\n  exploreId: string;\n  theme: GrafanaTheme2;\n  eventBus: EventBus;\n}\n\nenum ExploreDrawer {\n  RichHistory,\n  QueryInspector,\n}\n\ninterface ExploreState {\n  openDrawer?: ExploreDrawer;\n  contentOutlineVisible: boolean;\n}\n\nexport type Props = ExploreProps & ConnectedProps<typeof connector>;\n\n/**\n * Explore provides an area for quick query iteration for a given datasource.\n * Once a datasource is selected it populates the query section at the top.\n * When queries are run, their results are being displayed in the main section.\n * The datasource determines what kind of query editor it brings, and what kind\n * of results viewers it supports. The state is managed entirely in Redux.\n *\n * SPLIT VIEW\n *\n * Explore can have two Explore areas side-by-side. This is handled in `Wrapper.tsx`.\n * Since there can be multiple Explores (e.g., left and right) each action needs\n * the `exploreId` as first parameter so that the reducer knows which Explore state\n * is affected.\n *\n * DATASOURCE REQUESTS\n *\n * A click on Run Query creates transactions for all DataQueries for all expanded\n * result viewers. New runs are discarding previous runs. Upon completion a transaction\n * saves the result. The result viewers construct their data from the currently existing\n * transactions.\n *\n * The result viewers determine some of the query options sent to the datasource, e.g.,\n * `format`, to indicate eventual transformations by the datasources' result transformers.\n */\n\nexport class Explore extends React.PureComponent<Props, ExploreState> {\n  scrollElement: HTMLDivElement | undefined;\n  graphEventBus: EventBus;\n  logsEventBus: EventBus;\n  memoizedGetNodeGraphDataFrames = memoizeOne(getNodeGraphDataFrames);\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      openDrawer: undefined,\n      contentOutlineVisible: false,\n    };\n    this.graphEventBus = props.eventBus.newScopedBus('graph', { onlyLocal: false });\n    this.logsEventBus = props.eventBus.newScopedBus('logs', { onlyLocal: false });\n  }\n\n  onChangeTime = (rawRange: RawTimeRange) => {\n    const { updateTimeRange, exploreId } = this.props;\n    updateTimeRange({ exploreId, rawRange });\n  };\n\n  // Use this in help pages to set page to a single query\n  onClickExample = (query: DataQuery) => {\n    this.props.setQueries(this.props.exploreId, [query]);\n  };\n\n  onCellFilterAdded = (filter: AdHocFilterItem) => {\n    const { value, key, operator } = filter;\n    if (operator === FILTER_FOR_OPERATOR) {\n      this.onClickFilterLabel(key, value);\n    }\n\n    if (operator === FILTER_OUT_OPERATOR) {\n      this.onClickFilterOutLabel(key, value);\n    }\n  };\n\n  onContentOutlineToogle = () => {\n    this.setState((state) => {\n      reportInteraction('explore_toolbar_contentoutline_clicked', {\n        item: 'outline',\n        type: state.contentOutlineVisible ? 'close' : 'open',\n      });\n      return {\n        contentOutlineVisible: !state.contentOutlineVisible,\n      };\n    });\n  };\n\n  /**\n   * Used by Logs details.\n   * Returns true if all queries have the filter, otherwise false.\n   * TODO: In the future, we would like to return active filters based the query that produced the log line.\n   * @alpha\n   */\n  isFilterLabelActive = async (key: string, value: string | number, refId?: string) => {\n    const query = this.props.queries.find((q) => q.refId === refId);\n    if (!query) {\n      return false;\n    }\n    const ds = await getDataSourceSrv().get(query.datasource);\n    if (hasToggleableQueryFiltersSupport(ds) && ds.queryHasFilter(query, { key, value: value.toString() })) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Used by Logs details.\n   */\n  onClickFilterLabel = (key: string, value: string | number, frame?: DataFrame) => {\n    this.onModifyQueries(\n      {\n        type: 'ADD_FILTER',\n        options: { key, value: value.toString() },\n        frame,\n      },\n      frame?.refId\n    );\n  };\n\n  /**\n   * Used by Logs details.\n   */\n  onClickFilterOutLabel = (key: string, value: string | number, frame?: DataFrame) => {\n    this.onModifyQueries(\n      {\n        type: 'ADD_FILTER_OUT',\n        options: { key, value: value.toString() },\n        frame,\n      },\n      frame?.refId\n    );\n  };\n\n  /**\n   * Used by Logs Popover Menu.\n   */\n  onClickFilterValue = (value: string | number, refId?: string) => {\n    this.onModifyQueries({ type: 'ADD_STRING_FILTER', options: { value: value.toString() } }, refId);\n  };\n\n  /**\n   * Used by Logs Popover Menu.\n   */\n  onClickFilterOutValue = (value: string | number, refId?: string) => {\n    this.onModifyQueries({ type: 'ADD_STRING_FILTER_OUT', options: { value: value.toString() } }, refId);\n  };\n\n  onClickAddQueryRowButton = () => {\n    const { exploreId, queryKeys } = this.props;\n    this.props.addQueryRow(exploreId, queryKeys.length);\n  };\n\n  /**\n   * Used by Logs details.\n   */\n  onModifyQueries = (action: QueryFixAction, refId?: string) => {\n    const modifier = async (query: DataQuery, modification: QueryFixAction) => {\n      // This gives Logs Details support to modify the query that produced the log line.\n      // If not present, all queries are modified.\n      if (refId && refId !== query.refId) {\n        return query;\n      }\n      const { datasource } = query;\n      if (datasource == null) {\n        return query;\n      }\n      const ds = await getDataSourceSrv().get(datasource);\n      const toggleableFilters = ['ADD_FILTER', 'ADD_FILTER_OUT'];\n      if (hasToggleableQueryFiltersSupport(ds) && toggleableFilters.includes(modification.type)) {\n        return ds.toggleQueryFilter(query, {\n          type: modification.type === 'ADD_FILTER' ? 'FILTER_FOR' : 'FILTER_OUT',\n          options: modification.options ?? {},\n          frame: modification.frame,\n        });\n      }\n      if (ds.modifyQuery) {\n        return ds.modifyQuery(query, modification);\n      } else {\n        return query;\n      }\n    };\n    this.props.modifyQueries(this.props.exploreId, action, modifier);\n  };\n\n  onResize = (size: HorizontalSize) => {\n    this.props.changeSize(this.props.exploreId, size);\n  };\n\n  onStartScanning = () => {\n    // Scanner will trigger a query\n    this.props.scanStart(this.props.exploreId);\n  };\n\n  onStopScanning = () => {\n    this.props.scanStopAction({ exploreId: this.props.exploreId });\n  };\n\n  onUpdateTimeRange = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  toggleShowRichHistory = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.RichHistory ? undefined : ExploreDrawer.RichHistory,\n      };\n    });\n  };\n\n  toggleShowQueryInspector = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.QueryInspector ? undefined : ExploreDrawer.QueryInspector,\n      };\n    });\n  };\n\n  onSplitOpen = (panelType: string) => {\n    return async (options?: SplitOpenOptions) => {\n      this.props.splitOpen(options);\n      if (options && this.props.datasourceInstance) {\n        const target = (await getDataSourceSrv().get(options.datasourceUid)).type;\n        const source =\n          this.props.datasourceInstance.uid === MIXED_DATASOURCE_NAME\n            ? get(this.props.queries, '0.datasource.type')\n            : this.props.datasourceInstance.type;\n        const tracking = {\n          origin: 'panel',\n          panelType,\n          source,\n          target,\n          exploreId: this.props.exploreId,\n        };\n        reportInteraction('grafana_explore_split_view_opened', tracking);\n      }\n    };\n  };\n\n  renderEmptyState(exploreContainerStyles: string) {\n    return (\n      <div className={cx(exploreContainerStyles)}>\n        <NoDataSourceCallToAction />\n      </div>\n    );\n  }\n\n  renderNoData() {\n    return <NoData />;\n  }\n\n  renderCustom(width: number) {\n    const { timeZone, queryResponse, absoluteRange, eventBus } = this.props;\n\n    const groupedByPlugin = groupBy(queryResponse?.customFrames, 'meta.preferredVisualisationPluginId');\n\n    return Object.entries(groupedByPlugin).map(([pluginId, frames], index) => {\n      return (\n        <ContentOutlineItem panelId={pluginId} title={pluginId} icon=\"plug\" key={index}>\n          <CustomContainer\n            key={index}\n            timeZone={timeZone}\n            pluginId={pluginId}\n            frames={frames}\n            state={queryResponse.state}\n            absoluteRange={absoluteRange}\n            height={400}\n            width={width}\n            splitOpenFn={this.onSplitOpen(pluginId)}\n            eventBus={eventBus}\n          />\n        </ContentOutlineItem>\n      );\n    });\n  }\n\n  renderGraphPanel(width: number) {\n    const { graphResult, absoluteRange, timeZone, queryResponse, showFlameGraph } = this.props;\n\n    return (\n      <ContentOutlineItem panelId=\"Graph\" title=\"Graph\" icon=\"graph-bar\">\n        <GraphContainer\n          data={graphResult!}\n          height={showFlameGraph ? 180 : 400}\n          width={width}\n          absoluteRange={absoluteRange}\n          timeZone={timeZone}\n          onChangeTime={this.onUpdateTimeRange}\n          annotations={queryResponse.annotations}\n          splitOpenFn={this.onSplitOpen('graph')}\n          loadingState={queryResponse.state}\n          eventBus={this.graphEventBus}\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderTablePanel(width: number) {\n    const { exploreId, timeZone } = this.props;\n    return (\n      <ContentOutlineItem panelId=\"Table\" title=\"Table\" icon=\"table\">\n        <TableContainer\n          ariaLabel={selectors.pages.Explore.General.table}\n          width={width}\n          exploreId={exploreId}\n          onCellFilterAdded={this.onCellFilterAdded}\n          timeZone={timeZone}\n          splitOpenFn={this.onSplitOpen('table')}\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderRawPrometheus(width: number) {\n    const { exploreId, datasourceInstance, timeZone } = this.props;\n    return (\n      <ContentOutlineItem panelId=\"Raw Prometheus\" title=\"Raw Prometheus\" icon=\"gf-prometheus\">\n        <RawPrometheusContainer\n          showRawPrometheus={true}\n          ariaLabel={selectors.pages.Explore.General.table}\n          width={width}\n          exploreId={exploreId}\n          onCellFilterAdded={datasourceInstance?.modifyQuery ? this.onCellFilterAdded : undefined}\n          timeZone={timeZone}\n          splitOpenFn={this.onSplitOpen('table')}\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderLogsPanel(width: number) {\n    const { exploreId, syncedTimes, theme, queryResponse } = this.props;\n    const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n    // Need to make ContentOutlineItem a flex container so the gap works\n    const logsContentOutlineWrapper = css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(1),\n    });\n    return (\n      <ContentOutlineItem panelId=\"Logs\" title=\"Logs\" icon=\"gf-logs\" className={logsContentOutlineWrapper}>\n        <LogsContainer\n          exploreId={exploreId}\n          loadingState={queryResponse.state}\n          syncedTimes={syncedTimes}\n          width={width - spacing}\n          onClickFilterLabel={this.onClickFilterLabel}\n          onClickFilterOutLabel={this.onClickFilterOutLabel}\n          onStartScanning={this.onStartScanning}\n          onStopScanning={this.onStopScanning}\n          eventBus={this.logsEventBus}\n          splitOpenFn={this.onSplitOpen('logs')}\n          scrollElement={this.scrollElement}\n          isFilterLabelActive={this.isFilterLabelActive}\n          onClickFilterValue={this.onClickFilterValue}\n          onClickFilterOutValue={this.onClickFilterOutValue}\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderLogsSamplePanel() {\n    const { logsSample, timeZone, setSupplementaryQueryEnabled, exploreId, datasourceInstance, queries } = this.props;\n\n    return (\n      <ContentOutlineItem panelId=\"Logs Sample\" title=\"Logs Sample\" icon=\"gf-logs\">\n        <LogsSamplePanel\n          queryResponse={logsSample.data}\n          timeZone={timeZone}\n          enabled={logsSample.enabled}\n          queries={queries}\n          datasourceInstance={datasourceInstance}\n          splitOpen={this.onSplitOpen('logsSample')}\n          setLogsSampleEnabled={(enabled: boolean) =>\n            setSupplementaryQueryEnabled(exploreId, enabled, SupplementaryQueryType.LogsSample)\n          }\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderNodeGraphPanel() {\n    const { exploreId, showTrace, queryResponse, datasourceInstance } = this.props;\n    const datasourceType = datasourceInstance ? datasourceInstance?.type : 'unknown';\n\n    return (\n      <ContentOutlineItem panelId=\"Node Graph\" title=\"Node Graph\" icon=\"code-branch\">\n        <NodeGraphContainer\n          dataFrames={this.memoizedGetNodeGraphDataFrames(queryResponse.series)}\n          exploreId={exploreId}\n          withTraceView={showTrace}\n          datasourceType={datasourceType}\n          splitOpenFn={this.onSplitOpen('nodeGraph')}\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderFlameGraphPanel() {\n    const { queryResponse } = this.props;\n    return (\n      <ContentOutlineItem panelId=\"Flame Graph\" title=\"Flame Graph\" icon=\"fire\">\n        <FlameGraphExploreContainer dataFrames={queryResponse.flameGraphFrames} />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderTraceViewPanel() {\n    const { queryResponse, exploreId } = this.props;\n    const dataFrames = queryResponse.series.filter((series) => series.meta?.preferredVisualisationType === 'trace');\n\n    return (\n      // If there is no data (like 404) we show a separate error so no need to show anything here\n      dataFrames.length && (\n        <ContentOutlineItem panelId=\"Traces\" title=\"Traces\" icon=\"file-alt\">\n          <TraceViewContainer\n            exploreId={exploreId}\n            dataFrames={dataFrames}\n            splitOpenFn={this.onSplitOpen('traceView')}\n            scrollElement={this.scrollElement}\n          />\n        </ContentOutlineItem>\n      )\n    );\n  }\n\n  render() {\n    const {\n      datasourceInstance,\n      exploreId,\n      graphResult,\n      queryResponse,\n      isLive,\n      theme,\n      showMetrics,\n      showTable,\n      showRawPrometheus,\n      showLogs,\n      showTrace,\n      showCustom,\n      showNodeGraph,\n      showFlameGraph,\n      timeZone,\n      showLogsSample,\n      correlationEditorDetails,\n      correlationEditorHelperData,\n    } = this.props;\n    const { openDrawer, contentOutlineVisible } = this.state;\n    const styles = getStyles(theme);\n    const showPanels = queryResponse && queryResponse.state !== LoadingState.NotStarted;\n    const showRichHistory = openDrawer === ExploreDrawer.RichHistory;\n    const richHistoryRowButtonHidden = !supportedFeatures().queryHistoryAvailable;\n    const showQueryInspector = openDrawer === ExploreDrawer.QueryInspector;\n    const showNoData =\n      queryResponse.state === LoadingState.Done &&\n      [\n        queryResponse.logsFrames,\n        queryResponse.graphFrames,\n        queryResponse.nodeGraphFrames,\n        queryResponse.flameGraphFrames,\n        queryResponse.tableFrames,\n        queryResponse.rawPrometheusFrames,\n        queryResponse.traceFrames,\n        queryResponse.customFrames,\n      ].every((e) => e.length === 0);\n\n    let correlationsBox = undefined;\n    const isCorrelationsEditorMode = correlationEditorDetails?.editorMode;\n    const showCorrelationHelper = Boolean(isCorrelationsEditorMode || correlationEditorDetails?.correlationDirty);\n    if (showCorrelationHelper && correlationEditorHelperData !== undefined) {\n      correlationsBox = <CorrelationHelper exploreId={exploreId} correlations={correlationEditorHelperData} />;\n    }\n\n    return (\n      <ContentOutlineContextProvider refreshDependencies={this.props.queries}>\n        <ExploreToolbar\n          exploreId={exploreId}\n          onChangeTime={this.onChangeTime}\n          onContentOutlineToogle={this.onContentOutlineToogle}\n          isContentOutlineOpen={contentOutlineVisible}\n        />\n        <div\n          style={{\n            position: 'relative',\n            height: '100%',\n            paddingLeft: theme.spacing(2),\n          }}\n        >\n          <div className={styles.wrapper}>\n            {contentOutlineVisible && (\n              <ContentOutline scroller={this.scrollElement} panelId={`content-outline-container-${exploreId}`} />\n            )}\n            <CustomScrollbar\n              testId={selectors.pages.Explore.General.scrollView}\n              scrollRefCallback={(scrollElement) => (this.scrollElement = scrollElement || undefined)}\n              hideHorizontalTrack\n            >\n              <div className={styles.exploreContainer}>\n                {datasourceInstance ? (\n                  <>\n                    <ContentOutlineItem panelId=\"Queries\" title=\"Queries\" icon=\"arrow\" mergeSingleChild={true}>\n                      <PanelContainer className={styles.queryContainer}>\n                        {correlationsBox}\n                        <QueryRows exploreId={exploreId} />\n                        <SecondaryActions\n                          // do not allow people to add queries with potentially different datasources in correlations editor mode\n                          addQueryRowButtonDisabled={\n                            isLive || (isCorrelationsEditorMode && datasourceInstance.meta.mixed)\n                          }\n                          // We cannot show multiple traces at the same time right now so we do not show add query button.\n                          //TODO:unification\n                          addQueryRowButtonHidden={false}\n                          richHistoryRowButtonHidden={richHistoryRowButtonHidden}\n                          richHistoryButtonActive={showRichHistory}\n                          queryInspectorButtonActive={showQueryInspector}\n                          onClickAddQueryRowButton={this.onClickAddQueryRowButton}\n                          onClickRichHistoryButton={this.toggleShowRichHistory}\n                          onClickQueryInspectorButton={this.toggleShowQueryInspector}\n                        />\n                        <ResponseErrorContainer exploreId={exploreId} />\n                      </PanelContainer>\n                    </ContentOutlineItem>\n                    <AutoSizer onResize={this.onResize} disableHeight>\n                      {({ width }) => {\n                        if (width === 0) {\n                          return null;\n                        }\n\n                        return (\n                          <main className={cx(styles.exploreMain)} style={{ width }}>\n                            <ErrorBoundaryAlert>\n                              {showPanels && (\n                                <>\n                                  {showMetrics && graphResult && (\n                                    <ErrorBoundaryAlert>{this.renderGraphPanel(width)}</ErrorBoundaryAlert>\n                                  )}\n                                  {showRawPrometheus && (\n                                    <ErrorBoundaryAlert>{this.renderRawPrometheus(width)}</ErrorBoundaryAlert>\n                                  )}\n                                  {showTable && <ErrorBoundaryAlert>{this.renderTablePanel(width)}</ErrorBoundaryAlert>}\n                                  {showLogs && <ErrorBoundaryAlert>{this.renderLogsPanel(width)}</ErrorBoundaryAlert>}\n                                  {showNodeGraph && (\n                                    <ErrorBoundaryAlert>{this.renderNodeGraphPanel()}</ErrorBoundaryAlert>\n                                  )}\n                                  {showFlameGraph && (\n                                    <ErrorBoundaryAlert>{this.renderFlameGraphPanel()}</ErrorBoundaryAlert>\n                                  )}\n                                  {showTrace && <ErrorBoundaryAlert>{this.renderTraceViewPanel()}</ErrorBoundaryAlert>}\n                                  {showLogsSample && (\n                                    <ErrorBoundaryAlert>{this.renderLogsSamplePanel()}</ErrorBoundaryAlert>\n                                  )}\n                                  {showCustom && <ErrorBoundaryAlert>{this.renderCustom(width)}</ErrorBoundaryAlert>}\n                                  {showNoData && <ErrorBoundaryAlert>{this.renderNoData()}</ErrorBoundaryAlert>}\n                                </>\n                              )}\n                              {showRichHistory && (\n                                <RichHistoryContainer\n                                  width={width}\n                                  exploreId={exploreId}\n                                  onClose={this.toggleShowRichHistory}\n                                />\n                              )}\n                              {showQueryInspector && (\n                                <ExploreQueryInspector\n                                  exploreId={exploreId}\n                                  width={width}\n                                  onClose={this.toggleShowQueryInspector}\n                                  timeZone={timeZone}\n                                  isMixed={datasourceInstance.meta.mixed || false}\n                                />\n                              )}\n                            </ErrorBoundaryAlert>\n                          </main>\n                        );\n                      }}\n                    </AutoSizer>\n                  </>\n                ) : (\n                  this.renderEmptyState(styles.exploreContainer)\n                )}\n              </div>\n            </CustomScrollbar>\n          </div>\n        </div>\n      </ContentOutlineContextProvider>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: ExploreProps) {\n  const explore = state.explore;\n  const { syncedTimes } = explore;\n  const item = explore.panes[exploreId]!;\n\n  const timeZone = getTimeZone(state.user);\n  const {\n    datasourceInstance,\n    queryKeys,\n    queries,\n    isLive,\n    graphResult,\n    tableResult,\n    logsResult,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    showCustom,\n    absoluteRange,\n    queryResponse,\n    showNodeGraph,\n    showFlameGraph,\n    showRawPrometheus,\n    supplementaryQueries,\n    correlationEditorHelperData,\n  } = item;\n\n  const loading = selectIsWaitingForData(exploreId)(state);\n  const logsSample = supplementaryQueries[SupplementaryQueryType.LogsSample];\n  // We want to show logs sample only if there are no log results and if there is already graph or table result\n  const showLogsSample = !!(logsSample.dataProvider !== undefined && !logsResult && (graphResult || tableResult));\n\n  return {\n    datasourceInstance,\n    queryKeys,\n    queries,\n    isLive,\n    graphResult,\n    logsResult: logsResult ?? undefined,\n    absoluteRange,\n    queryResponse,\n    syncedTimes,\n    timeZone,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    showCustom,\n    showNodeGraph,\n    showRawPrometheus,\n    showFlameGraph,\n    splitted: isSplit(state),\n    loading,\n    logsSample,\n    showLogsSample,\n    correlationEditorHelperData,\n    correlationEditorDetails: explore.correlationEditorDetails,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeSize,\n  modifyQueries,\n  scanStart,\n  scanStopAction,\n  setQueries,\n  updateTimeRange,\n  addQueryRow,\n  splitOpen,\n  setSupplementaryQueryEnabled,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default withTheme2(connector(Explore));\n","import { css } from '@emotion/css';\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { EventBusSrv } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { CustomScrollbar } from '@grafana/ui';\nimport { stopQueryState } from 'app/core/utils/explore';\nimport { StoreState, useSelector } from 'app/types';\n\nimport Explore from './Explore';\nimport { getExploreItemSelector } from './state/selectors';\n\nconst containerStyles = css({\n  label: 'explorePaneContainer',\n  display: 'flex',\n  flexDirection: 'column',\n  minWidth: '600px',\n  height: '100%',\n});\n\ninterface Props {\n  exploreId: string;\n}\n\n/*\n  Connected components subscribe to the store before function components (using hooks) and can react to store changes. Thus, this connector function is called before the parent component (ExplorePage) is rerendered.\n  This means that child components' mapStateToProps will be executed with a zombie `exploreId` that is not present anymore in the store if the pane gets closed.\n  By connecting this component and returning the pane we workaround the zombie children issue here instead of modifying every children.\n  This is definitely not the ideal solution and we should in the future invest more time in exploring other approaches to better handle this scenario, potentially by refactoring panels to be function components \n  (therefore immune to this behaviour), or by forbidding them to access the store directly and instead pass them all the data they need via props or context.\n\n  You can read more about this issue here: https://react-redux.js.org/api/hooks#stale-props-and-zombie-children\n*/\nfunction ExplorePaneContainerUnconnected({ exploreId }: Props) {\n  useStopQueries(exploreId);\n  const eventBus = useRef(new EventBusSrv());\n  const ref = useRef(null);\n\n  useEffect(() => {\n    const bus = eventBus.current;\n    return () => bus.removeAllListeners();\n  }, []);\n\n  return (\n    <CustomScrollbar hideVerticalTrack>\n      <div className={containerStyles} ref={ref} data-testid={selectors.pages.Explore.General.container}>\n        <Explore exploreId={exploreId} eventBus={eventBus.current} />\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, props: Props) {\n  const pane = state.explore.panes[props.exploreId];\n\n  return { pane };\n}\n\nconst connector = connect(mapStateToProps);\n\nexport const ExplorePaneContainer = connector(ExplorePaneContainerUnconnected);\n\nfunction useStopQueries(exploreId: string) {\n  const paneSelector = useMemo(() => getExploreItemSelector(exploreId), [exploreId]);\n  const paneRef = useRef<ReturnType<typeof paneSelector>>();\n  paneRef.current = useSelector(paneSelector);\n\n  useEffect(() => {\n    return () => {\n      stopQueryState(paneRef.current?.querySubscription);\n    };\n  }, []);\n}\n","import { useEffect, useRef } from 'react';\n\nimport { NavModel } from '@grafana/data';\nimport { Branding } from 'app/core/components/Branding/Branding';\nimport { useNavModel } from 'app/core/hooks/useNavModel';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { ExploreQueryParams } from 'app/types';\n\nimport { isFulfilled, hasKey } from './utils';\n\nexport function useExplorePageTitle(params: ExploreQueryParams) {\n  const navModel = useRef<NavModel>();\n  navModel.current = useNavModel('explore');\n  const dsService = useRef(getDatasourceSrv());\n\n  useEffect(() => {\n    if (!params.panes || typeof params.panes !== 'string') {\n      return;\n    }\n\n    let panesObject: unknown;\n    try {\n      panesObject = JSON.parse(params.panes);\n    } catch {\n      return;\n    }\n\n    if (typeof panesObject !== 'object' || panesObject === null) {\n      return;\n    }\n\n    Promise.allSettled(\n      Object.values(panesObject).map((pane) => {\n        if (\n          !pane ||\n          typeof pane !== 'object' ||\n          !hasKey('datasource', pane) ||\n          !pane.datasource ||\n          typeof pane.datasource !== 'string'\n        ) {\n          return Promise.reject();\n        }\n\n        return dsService.current.get(pane.datasource);\n      })\n    )\n      .then((results) => results.filter(isFulfilled).map((result) => result.value))\n      .then((datasources) => {\n        if (!navModel.current) {\n          return;\n        }\n\n        const names = datasources.map((ds) => ds.name);\n\n        if (names.length === 0) {\n          global.document.title = `${navModel.current.main.text} - ${Branding.AppTitle}`;\n          return;\n        }\n\n        global.document.title = `${navModel.current.main.text} - ${names.join(' | ')} - ${Branding.AppTitle}`;\n      });\n  }, [params.panes]);\n}\n","import { useEffect } from 'react';\nimport { Unsubscribable } from 'rxjs';\n\nimport { getAppEvents } from '@grafana/runtime';\nimport { useGrafana } from 'app/core/context/GrafanaContext';\nimport { useDispatch } from 'app/types';\nimport { AbsoluteTimeEvent, CopyTimeEvent, PasteTimeEvent, ShiftTimeEvent, ZoomOutEvent } from 'app/types/events';\n\nimport {\n  copyTimeRangeToClipboard,\n  makeAbsoluteTime,\n  pasteTimeRangeFromClipboard,\n  shiftTime,\n  zoomOut,\n} from '../state/time';\n\nexport function useKeyboardShortcuts() {\n  const { keybindings } = useGrafana();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    keybindings.setupTimeRangeBindings(false);\n\n    const tearDown: Unsubscribable[] = [];\n\n    tearDown.push(\n      getAppEvents().subscribe(AbsoluteTimeEvent, () => {\n        dispatch(makeAbsoluteTime());\n      })\n    );\n\n    tearDown.push(\n      getAppEvents().subscribe(ShiftTimeEvent, (event) => {\n        dispatch(shiftTime(event.payload.direction));\n      })\n    );\n\n    tearDown.push(\n      getAppEvents().subscribe(ZoomOutEvent, (event) => {\n        dispatch(zoomOut(event.payload.scale));\n      })\n    );\n\n    tearDown.push(\n      getAppEvents().subscribe(CopyTimeEvent, () => {\n        dispatch(copyTimeRangeToClipboard());\n      })\n    );\n\n    tearDown.push(\n      getAppEvents().subscribe(PasteTimeEvent, () => {\n        dispatch(pasteTimeRangeFromClipboard());\n      })\n    );\n\n    return () => {\n      tearDown.forEach((u) => u.unsubscribe());\n    };\n  }, [dispatch, keybindings]);\n}\n","import { inRange } from 'lodash';\nimport { useState } from 'react';\nimport { useWindowSize } from 'react-use';\n\nimport { useDispatch, useSelector } from 'app/types';\n\nimport { splitSizeUpdateAction } from '../state/main';\nimport { isSplit, selectPanesEntries } from '../state/selectors';\n\nexport const useSplitSizeUpdater = (minWidth: number) => {\n  const dispatch = useDispatch();\n  const { width: windowWidth } = useWindowSize();\n  const panes = useSelector(selectPanesEntries);\n  const hasSplit = useSelector(isSplit);\n  const [rightPaneWidthRatio, setRightPaneWidthRatio] = useState(0.5);\n\n  const exploreState = useSelector((state) => state.explore);\n\n  const updateSplitSize = (size: number) => {\n    const evenSplitWidth = windowWidth / 2;\n    const areBothSimilar = inRange(size, evenSplitWidth - 100, evenSplitWidth + 100);\n    if (areBothSimilar) {\n      dispatch(splitSizeUpdateAction({ largerExploreId: undefined }));\n    } else {\n      dispatch(\n        splitSizeUpdateAction({\n          largerExploreId: size > evenSplitWidth ? panes[1][0] : panes[0][0],\n        })\n      );\n    }\n\n    setRightPaneWidthRatio(size / windowWidth);\n  };\n\n  let widthCalc = 0;\n  if (hasSplit) {\n    if (!exploreState.evenSplitPanes && exploreState.maxedExploreId) {\n      widthCalc = exploreState.maxedExploreId === panes[1][0] ? windowWidth - minWidth : minWidth;\n    } else if (exploreState.evenSplitPanes) {\n      widthCalc = Math.floor(windowWidth / 2);\n    } else if (rightPaneWidthRatio !== undefined) {\n      widthCalc = windowWidth * rightPaneWidthRatio;\n    }\n  }\n\n  return { updateSplitSize, widthCalc };\n};\n","import { useEffect } from 'react';\n\nimport { useGrafana } from 'app/core/context/GrafanaContext';\n\n/**\n * timeSrv (which is used internally) on init reads `from` and `to` param from the URL and updates itself\n * using those value regardless of what is passed to the init method.\n * The updated value is then used by Explore to get the range for each pane.\n * This means that if `from` and `to` parameters are present in the URL,\n * it would be impossible to change the time range in Explore.\n * We are only doing this on mount for 2 reasons:\n * 1: Doing it on update means we'll enter a render loop.\n * 2: when parsing time in Explore (before feeding it to timeSrv) we make sure `from` is before `to` inside\n *    each pane state in order to not trigger un URL update from timeSrv.\n */\nexport function useTimeSrvFix() {\n  const { location } = useGrafana();\n\n  useEffect(() => {\n    const searchParams = location.getSearchObject();\n    if (searchParams.from || searchParams.to) {\n      location.partial({ from: undefined, to: undefined }, true);\n    }\n  }, [location]);\n}\n","import { css, cx } from '@emotion/css';\nimport React, { useEffect } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { ErrorBoundaryAlert, useStyles2, useTheme2 } from '@grafana/ui';\nimport { SplitPaneWrapper } from 'app/core/components/SplitPaneWrapper/SplitPaneWrapper';\nimport { useGrafana } from 'app/core/context/GrafanaContext';\nimport { useNavModel } from 'app/core/hooks/useNavModel';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { useSelector } from 'app/types';\nimport { ExploreQueryParams } from 'app/types/explore';\n\nimport { CorrelationEditorModeBar } from './CorrelationEditorModeBar';\nimport { ExploreActions } from './ExploreActions';\nimport { ExplorePaneContainer } from './ExplorePaneContainer';\nimport { useExplorePageTitle } from './hooks/useExplorePageTitle';\nimport { useKeyboardShortcuts } from './hooks/useKeyboardShortcuts';\nimport { useSplitSizeUpdater } from './hooks/useSplitSizeUpdater';\nimport { useStateSync } from './hooks/useStateSync';\nimport { useTimeSrvFix } from './hooks/useTimeSrvFix';\nimport { isSplit, selectCorrelationDetails, selectPanesEntries } from './state/selectors';\n\nconst MIN_PANE_WIDTH = 200;\n\nexport default function ExplorePage(props: GrafanaRouteComponentProps<{}, ExploreQueryParams>) {\n  const styles = useStyles2(getStyles);\n  const theme = useTheme2();\n  useTimeSrvFix();\n  useStateSync(props.queryParams);\n  // We want  to set the title according to the URL and not to the state because the URL itself may lag\n  // (due to how useStateSync above works) by a few milliseconds.\n  // When a URL is pushed to the history, the browser also saves the title of the page and\n  // if we were to update the URL on state change, the title would not match the URL.\n  // Ultimately the URL is the single source of truth from which state is derived, the page title is not different\n  useExplorePageTitle(props.queryParams);\n  const { chrome } = useGrafana();\n  const navModel = useNavModel('explore');\n  const { updateSplitSize, widthCalc } = useSplitSizeUpdater(MIN_PANE_WIDTH);\n\n  const panes = useSelector(selectPanesEntries);\n  const hasSplit = useSelector(isSplit);\n  const correlationDetails = useSelector(selectCorrelationDetails);\n  const showCorrelationEditorBar = config.featureToggles.correlations && (correlationDetails?.editorMode || false);\n\n  useEffect(() => {\n    //This is needed for breadcrumbs and topnav.\n    //We should probably abstract this out at some point\n    chrome.update({ sectionNav: navModel });\n  }, [chrome, navModel]);\n\n  useKeyboardShortcuts();\n\n  return (\n    <div\n      className={cx(styles.pageScrollbarWrapper, {\n        [styles.correlationsEditorIndicator]: showCorrelationEditorBar,\n      })}\n    >\n      <ExploreActions />\n      {showCorrelationEditorBar && <CorrelationEditorModeBar panes={panes} />}\n      <SplitPaneWrapper\n        splitOrientation=\"vertical\"\n        paneSize={widthCalc}\n        minSize={MIN_PANE_WIDTH}\n        maxSize={MIN_PANE_WIDTH * -1}\n        primary=\"second\"\n        splitVisible={hasSplit}\n        parentStyle={showCorrelationEditorBar ? { height: `calc(100% - ${theme.spacing(6)}` } : {}} // button = 4, padding = 1 x 2\n        paneStyle={{ overflow: 'auto', display: 'flex', flexDirection: 'column' }}\n        onDragFinished={(size) => size && updateSplitSize(size)}\n      >\n        {panes.map(([exploreId]) => {\n          return (\n            <ErrorBoundaryAlert key={exploreId} style=\"page\">\n              <ExplorePaneContainer exploreId={exploreId} />\n            </ErrorBoundaryAlert>\n          );\n        })}\n      </SplitPaneWrapper>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    pageScrollbarWrapper: css({\n      width: '100%',\n      flexGrow: 1,\n      minHeight: 0,\n      height: '100%',\n      position: 'relative',\n    }),\n    correlationsEditorIndicator: css({\n      borderLeft: `4px solid ${theme.colors.primary.main}`,\n      borderRight: `4px solid ${theme.colors.primary.main}`,\n      borderBottom: `4px solid ${theme.colors.primary.main}`,\n      overflow: 'scroll',\n    }),\n  };\n};\n","import { useEffect, useRef } from 'react';\nvar useInterval = function (callback, delay) {\n    var savedCallback = useRef(function () { });\n    useEffect(function () {\n        savedCallback.current = callback;\n    });\n    useEffect(function () {\n        if (delay !== null) {\n            var interval_1 = setInterval(function () { return savedCallback.current(); }, delay || 0);\n            return function () { return clearInterval(interval_1); };\n        }\n        return undefined;\n    }, [delay]);\n};\nexport default useInterval;\n"],"names":["getSupportedTransTypeDetails","transType","getTransformOptions","transformationType","useBeforeUnload","enabled","message","handler","event","finalEnabled","CorrelationUnsavedChangesModal","onSave","onDiscard","onCancel","Modal","Button","CONSEQUENCES","showModalMessage","action","isActionLeft","dirtyCorrelation","dirtyQueryEditor","messageTemplate","actionStr","consequenceStr","CorrelationEditorModeBar","panes","dispatch","styles","getStyles","correlationDetails","isHelperShowing","saveMessage","setSaveMessage","correlationDirty","queryEditorDirty","modalMessage","exploreId","changeDatasourceUid","useUnmount","pane","resetEditor","closePane","changeDatasourcePostAction","datasourceUid","saveCorrelationPostAction","skipPostConfirmAction","location","Tooltip","Icon","theme","contrastColor","lighterBackgroundColor","colorManipulator","darkerBackgroundColor","disabledColor","ExploreActions","actions","setActions","query","splitted","canWriteCorrelations","keys","exploreSection","actionsArr","hasMixed","config","useScroll","ref","_a","useRafState","state","setState","ContentOutlineContext","ContentOutlineContextProvider","children","refreshDependencies","outlineItems","setOutlineItems","parentlessItemsRef","register","outlineItem","id","prevItems","mergeSingleChild","checkMergeSingleChild","sortElementsByDocumentPosition","parentIndex","item","key","newItems","parent","childrenUpdated","unregister","child","updateOutlineItems","a","b","diff","useContentOutlineContext","ContentOutlineItemButton","contentOutlineExpanded","title","icon","tooltip","tooltipPlacement","className","indentStyle","collapsible","collapsed","isActive","sectionId","toggleCollapsed","rest","buttonStyles","textRef","isOverflowing","setIsOverflowing","body","OutlineIcon","ContentOutline","scroller","panelId","toggleContentOutlineExpanded","useToggle","scrollerRef","verticalScroll","activeSectionId","setActiveSectionId","activeSectionChildId","setActiveSectionChildId","outlineItemsShouldIndent","sectionsExpanded","setSectionsExpanded","acc","scrollIntoView","itemPanelId","customOffsetTop","scrollValue","el","toggle","toggleSection","itemId","prev","activeItem","top","activeChild","offsetTop","childTop","PanelContainer","CustomScrollbar","isChildActive","isCollapsible","i","expanded","ContentOutlineItem","customTopOffset","level","LabelWithTooltip","label","tooltipText","Stack","Label","CorrelationTransformationAddModal","fieldList","transformationToEdit","exampleValue","setExampleValue","transformationVars","setTransformationVars","formFieldsVis","setFormFieldsVis","isExpValid","setIsExpValid","validToSave","setValidToSave","getValues","control","watch","exampleVal","transformationTypeDetails","subscription","formValues","expression","isExpressionValid","transKeys","Field","onChange","field","Select","value","entry","Input","CorrelationHelper","correlations","panesVals","defaultLabel","loadingLabel","useAsync","setValue","isLabelDescOpen","setIsLabelDescOpen","isTransformOpen","setIsTransformOpen","showTransformationAddModal","setShowTransformationAddModal","transformations","setTransformations","transformationIdxToEdit","setTransformationIdxToEdit","dirty","description","transVarRecords","transformation","editTransformations","Alert","Collapse","type","mapValue","detailsString","val","Card","IconButton","DeleteButton","_","idx","CustomContainer","width","height","timeZone","pluginId","frames","absoluteRange","splitOpenFn","eventBus","timeRange","plugin","panelContext","useExploreDataLinkPostProcessor","PanelContext","PanelChrome","innerWidth","innerHeight","PanelRenderer","__extends","extendStatics","d","p","__","__assign","t","s","n","rowSizeBase","colSizeBase","edgeBase","Resizer","_super","_this","e","DEFAULT_SIZE","clamp","min","max","snap","size","hasDirection","dir","target","isTouchEvent","isMouseEvent","findClosestSnap","snapArray","snapGap","closestGapIndex","curr","index","gap","getStringSize","getPixelSize","parentSize","ratio","calculateNewMax","maxWidth","maxHeight","minWidth","minHeight","definedProps","baseClassName","Resizable","props","element","base","c","orgWidth","orgHeight","orgPosition","getSize","percent","wrapChanged","wrap","computedStyle","newSize","kind","propsSize","boundsByDirection","direction","widthByDirection","heightByDirection","boundWidth","boundHeight","parent_1","clientX","clientY","scale","resizeRatio","original","_b","lockAspectRatio","lockAspectRatioExtraHeight","lockAspectRatioExtraWidth","newWidth","newHeight","extraHeight","extraWidth","computedMinWidth","computedMaxWidth","computedMinHeight","computedMaxHeight","extraMinWidth","extraMaxWidth","extraMinHeight","extraMaxHeight","lockedMinWidth","lockedMaxWidth","lockedMinHeight","lockedMaxHeight","parent_2","parentRect","targetRect","left","top_1","right","bottom","startResize","flexBasis","parent_3","_c","boundaryMax","newGridWidth","newGridHeight","delta","vw","vh","newState","isResizing","enable","handleStyles","handleClasses","handleWrapperStyle","handleWrapperClass","handleComponent","resizers","extendsProps","style","Wrapper","ExploreDrawer","onResize","dragStyles","drawerWidth","drawerSlide","ExploreQueryInspector","onClose","queryResponse","isMixed","dataOptions","setDataOptions","dataFrames","errors","statsTab","InspectStatsTab","jsonTab","InspectJSONTab","dataTab","InspectDataTab","queryTab","QueryInspector","tabs","errorTab","InspectErrorTab","TabbedContainer","mapStateToProps","mapDispatchToProps","TimeSyncButton","onClick","isSynced","syncTimesTooltip","ToolbarButton","ExploreTimeControls","range","onChangeTime","from","to","nextTimeRange","adjustedFrom","adjustedTo","fiscalYearStartMonth","syncedTimes","onChangeTimeSync","hideText","onChangeTimeZone","onChangeFiscalYearStartMonth","timeSyncButton","timePickerCommonProps","TimePickerWithHistory","LiveTailButton","start","pause","resume","isLive","isPaused","stop","buttonVariant","onClickMain","ButtonGroup","CSSTransition","defaultMode","ShortLinkButtonMenu","isOpen","setIsOpen","lastSelected","setLastSelected","onCopyLink","shorten","absTime","url","menuOptions","MenuActions","Menu","groupOption","MenuGroup","option","ToolbarButtonRow","Dropdown","AddToDashboard","ToolbarExtensionPoint","selectedExtension","setSelectedExtension","context","useExtensionPointContext","extensions","useExtensionLinks","selectExploreItem","noQueriesInPane","menu","ToolbarExtensionPointMenu","ConfirmNavigationModal","isCorrelationsEditorMode","queries","isLeftPane","datasourceUids","uid","numUniqueIds","useLiveTailControls","RefreshPicker","clear","LiveTailControls","controls","ExploreToolbar","onContentOutlineToogle","isContentOutlineOpen","refreshInterval","datasourceInstance","loading","isLargerPane","showSmallTimePicker","showSmallDataSourcePicker","shouldRotateSplitIcon","refreshPickerLabel","onChangeDatasource","dsSettings","onRunQuery","timezone","onOpenSplitView","onCloseSplitView","onClickResize","fiscalyearStartMonth","onChangeRefreshInterval","navBarActions","SetInterval","AppChromeUpdate","PageToolbar","DataSourcePicker","interaction","name","FlameGraphExploreContainer","view","align","sort","INTERVAL","ElapsedTime","resetKey","humanize","elapsed","setElapsed","useInterval","Time","tinycolor","LiveLogs","onPause","scrollTop","clientHeight","scrollHeight","rowsToRender","nextProps","onResume","onClear","logsRow","logsRowLocalTime","logsRowMessage","getLogRowStyles","row","LogMessageAnsi","LiveLogsWithTheme","InfiniteScroll","loadMoreLogs","rows","scrollElement","sortOrder","topScrollEnabled","upperOutOfRange","setUpperOutOfRange","lowerOutOfRange","setLowerOutOfRange","upperLoading","setUpperLoading","lowerLoading","setLowerLoading","rowsRef","lastScroll","handleScroll","scrollDirection","shouldLoadMore","scrollBottom","newRange","canScrollTop","getVisibleRange","canScrollBottom","hideTopMessage","hideBottomMessage","LoadingIndicator","outOfRangeMessage","ScrollDirection","firstTimeStamp","lastTimeStamp","getPrevRange","visibleRange","currentRange","getNextRange","updateCurrentRange","SCROLLING_THRESHOLD","LogsFeedback","feedbackUrl","MetaInfoItem","MetaInfoText","metaItems","LogsTable","splitOpen","logsSortOrder","dataFrame","columnsWithMeta","logsFrame","tableFrame","setTableFrame","timeIndex","prepareTableFrame","frame","sortedFrame","frameWithOverrides","v","getInitialFieldWidth","isFieldFilterable","getLogsExtractFields","labelFilters","buildLabelFilters","transform","getLabelFiltersTransform","transformedDataFrame","lastValueFrom","transformDataFrame","onCellFilterAdded","filter","operator","onClickFilterLabel","onClickFilterOutLabel","Table","bodyName","timeName","isFieldLokiLabels","isFieldDataplaneLabels","labelFiltersInclude","DownloadFormat","LogsMetaRow","meta","dedupStrategy","dedupCount","displayedFields","clearDetectedFields","hasUnescapedContent","forceEscape","onEscapeNewlines","logRows","downloadLogs","format","download","jsonLogs","blob","fileName","dataFrameMap","transforms","logsMetaItem","r","renderMetaItem","downloadMenu","LogLabels","LogsNavigationPages","pages","currentPageIndex","oldestLogsFirst","formatTime","time","createPageContent","page","Spinner","topContent","bottomContent","LogsNavigation","scrollToTopLogs","clearCache","addResultsToCache","setPages","expectedQueriesRef","expectedRangeRef","rangeSpanRef","onFirstPage","onLastPage","newPage","newPages","sortPages","changeTime","olderLogsButton","indexChange","newerLogsButton","onPageClick","pageNumber","onScrollToTopClick","navContainerHeight","LogsColumnSearch","LogsTableEmptyFields","LogsTableNavField","Checkbox","getLogsFieldsStyles","sortLabels","labels","la","lb","LogsTableActiveFields","reorderColumn","valueFilter","toggleColumn","labelKeys","labelName","onDragEnd","result","renderTitle","provided","snapshot","collator","LogsTableAvailableFields","LogsTableMultiSelect","uf","fuzzySearch","haystack","dispatcher","idxs","info","order","haystackOrder","matchesSet","mark","part","matched","infoIdx","debouncedFuzzySearch","LogsTableWrap","logsFrames","updatePanelState","panelState","propsColumns","setColumnsWithMeta","filteredColumnsWithMeta","setFilteredColumnsWithMeta","searchValue","setSearchValue","getLogsTableHeight","panelStateRefId","currentDataFrame","setCurrentDataFrame","f","getColumnsFromProps","fieldNames","previouslySelected","defaultColumns","newFrame","newFiltered","flag","numberOfLogLines","otherFields","labelCardinality","pendingLabelState","normalize","sidebarWidth","setSidebarWidth","tableWidth","columnFilterEvent","columnName","priorActiveCount","column","searchFilterEvent","searchResultCount","clearSelection","isDefaultField","sourceIndex","destinationIndex","source","updateExploreState","newColumnsArray","pa","pb","newColumns","newPanelState","length","active","pendingFilteredLabelState","data","matches","newColumnsWithMeta","numberOfResults","match","search","needle","onSearchInputChange","onFrameSelectorChange","getOnResize","newSidebarWidth","InlineField","total","SupplementaryResultError","SHORT_ERROR_MESSAGE_LIMIT","error","suggestedAction","onSuggestedAction","onRemove","severity","showButton","LogsVolumePanel","onUpdateTimeRange","onHiddenSeriesChanged","allLogsVolumeMaximum","spacing","logsVolumeData","logsVolumeInfo","extraInfo","extraInfoComponent","ExploreGraph","isTimeoutErrorResponse","response","LogsVolumePanelList","onLoadLogsVolume","logVolumes","allLogsVolumeMaximumValue","allLogsVolumeMaximumRange","annotations","maximumValue","sorted","grouped","mergedData","maximumRange","numberOfLogVolumes","containsZoomed","zoomRatio","logsLevelZoomRatio","timeoutError","selectedTimeRange","dataRange","DEDUP_OPTIONS","getDefaultVisualisationType","UnthemedLogs","logsPanelState","node","prevState","newSortOrder","visualisation","payload","showLabels","showTime","wrapLogMessage","prettifyLogMessage","hiddenRawLevels","hiddenLogLevels","k","urlState","serializedState","baseUrl","dedupedRows","sum","prevProps","visualisationType","allLogs","logRow","prevLog","logsMeta","logsVolumeEnabled","loadLogsVolumeData","scanning","scanRange","showContextToggle","getFieldLinks","logsQueries","getRowContext","getLogRowContextUi","getRowContextQuery","isFlipping","contextOpen","contextRow","tableHeight","hasData","filteredLogs","navigationRange","scanText","LogRowContextModal","options","RadioButtonGroup","InlineFieldRow","dedupType","LogRows","Logs","transitionDuration","transitionDelay","LogsCrossFadeTransition","visible","LogsContainer","updateTimeRange","origRow","ds","cacheFilters","runContextQuery","rowIndex","dsInstances","refId","dsPromises","resolve","instances","q","loadingState","logsSeries","loadSupplementaryQueryData","setSupplementaryQueryEnabled","onStartScanning","onStopScanning","logsVolume","logsResult","clearedAtIndex","supplementaryQueries","LogsSamplePanel","setLogsSampleEnabled","onToggleLogsSampleCollapse","OpenInSplitViewButton","logSampleQueries","onSplitOpen","LogsSamplePanelContent","logs","NoData","css","getCardStyles","NoDataSourceCallToAction","cardStyles","canCreateDataSource","footer","ctaElement","CallToActionCard","UnconnectedNodeGraphContainer","withTraceView","datasourceType","getLinks","nodes","useCategorizeFrames","toggled","windowHeight","useWindowSize","containerRef","setTop","countWarning","NodeGraph","NodeGraphContainer","makeSelectors","exploreItemSelector","QueryRows","getQueries","getDatasourceInstanceSettings","getQueryResponse","getHistory","getEventBridge","history","eventBridge","onRunQueries","newQueries","onAddQuery","onQueryCopied","onQueryRemoved","onQueryToggled","queryStatus","QueryEditorRows","mobileWidthThreshold","numberOfColumnsBeforeExpandedViewIsDefault","tableResult","listRef","valueLabels","items","getRawPrometheusListItemsFromDataFrame","isExpandedView","setIsExpandedView","onContentClick","calculateInitialHeight","getListItemHeight","itemIndex","switchId","Switch","ItemLabels","filteredValueLabels","valueLabel","itemWithValue","RawListItem","rawPrometheusResult","rawPrometheusFrame","RawPrometheusContainer","resultsStyle","ALL_GRAPH_STYLE_OPTIONS","ariaLabel","dataLinkPostProcessor","renderTable","FadeIn","defaultStyle","transitionStyles","Transition","ErrorContainer","queryError","showError","duration","ResponseErrorContainer","explore","rightColumnWidth","rightColumnContentWidth","cardColor","RichHistoryCard","queryHistoryItem","commentHistoryItem","starHistoryItem","deleteHistoryItem","changeDatasource","setQueries","activeUpdateComment","setActiveUpdateComment","comment","setComment","historyCardData","datasource","queriesToRun","differentDataSource","onCopyQuery","datasources","queriesText","onCreateShortLink","link","onDeleteQuery","performDelete","queryId","onStarrQuery","toggleActiveUpdateComment","onUpdateComment","onCancelUpdateComment","onKeyDown","keyEvent","updateComment","TextArea","queryActionButtons","DatasourceInfo","Query","LoadingPlaceholder","getQueryStyles","showDsInfo","getDsInfoStyles","dsApi","RichHistoryQueriesTab","totalQueries","richHistorySearchFilters","updateFilters","clearRichHistoryResults","loadMoreRichHistory","richHistorySettings","activeDatasourceInstance","listOfDatasources","datasourceFilters","filters","mappedQueriesToHeadings","sortOrderOptions","getSortOrderOptions","partialResults","timeFilter","RangeSlider","FilterInput","heading","retentionPeriodOptions","RichHistorySettingsTab","retentionPeriod","starredTabAsFirstTab","activeDatasourceOnly","onChangeRetentionPeriod","toggleStarredTabAsFirstTab","toggleactiveDatasourceOnly","deleteRichHistory","selectedOption","onDelete","RichHistoryStarredTab","Tabs","RichHistory","richHistory","richHistoryTotal","firstTab","setLoading","updateSettings","settingsToUpdate","filtersToUpdate","loadRichHistory","toggleActiveDatasourceOnly","QueriesTab","StarredTab","SettingsTab","RichHistoryContainer","setHeight","initRichHistory","updateHistorySettings","updateHistorySearchFilters","_e","_dir","SecondaryActions","loadingInState","TableContainer","rowCount","hasSubFrames","TableContainerWithTheme","TraceViewContainer","traceProp","TraceView","Explore","rawRange","queryKeys","modifier","modification","toggleableFilters","panelType","tracking","exploreContainerStyles","groupedByPlugin","graphResult","showFlameGraph","GraphContainer","logsContentOutlineWrapper","logsSample","showTrace","series","showMetrics","showTable","showRawPrometheus","showLogs","showCustom","showNodeGraph","showLogsSample","correlationEditorDetails","correlationEditorHelperData","openDrawer","contentOutlineVisible","showPanels","showRichHistory","richHistoryRowButtonHidden","showQueryInspector","showNoData","correlationsBox","ErrorBoundary","containerStyles","ExplorePaneContainerUnconnected","useStopQueries","EventBus","bus","ExplorePaneContainer","paneSelector","paneRef","useExplorePageTitle","params","navModel","useNavModel","dsService","panesObject","results","names","Branding","useKeyboardShortcuts","keybindings","tearDown","u","useSplitSizeUpdater","windowWidth","hasSplit","rightPaneWidthRatio","setRightPaneWidthRatio","exploreState","updateSplitSize","evenSplitWidth","areBothSimilar","widthCalc","useTimeSrvFix","searchParams","MIN_PANE_WIDTH","ExplorePage","useStateSync","chrome","showCorrelationEditorBar","SplitPaneWrapper","callback","delay","savedCallback","interval_1"],"sourceRoot":""}